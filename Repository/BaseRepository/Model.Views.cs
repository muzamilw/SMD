//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsFA4B12100EC6323CDE0FB305FA4FA878876BAD08A51DA30BAC39F152EC761496))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsFA4B12100EC6323CDE0FB305FA4FA878876BAD08A51DA30BAC39F152EC761496 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsFA4B12100EC6323CDE0FB305FA4FA878876BAD08A51DA30BAC39F152EC761496()
        {
            this.EdmEntityContainerName = "BaseDbContext";
            this.StoreEntityContainerName = "SMDModelStoreContainer";
            this.HashOverMappingClosure = "570730064ffda5da13c0479003a0929c1f769a854006a90e3702bf5e3e79c8ea";
            this.HashOverAllExtentViews = "fd98ddbdf90670f7f81faaeafd2b51d427bad2409eeef853503bda696511b506";
            this.ViewCount = 38;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetRoles", @"
    SELECT VALUE -- Constructing AspNetRoles
        [SMDModel.Store.AspNetRoles](T1.AspNetRoles_Id, T1.AspNetRoles_Name)
    FROM (
        SELECT 
            T.Id AS AspNetRoles_Id, 
            T.Name AS AspNetRoles_Name, 
            True AS _from0
        FROM BaseDbContext.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserLogins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserLogins", @"
    SELECT VALUE -- Constructing AspNetUserLogins
        [SMDModel.Store.AspNetUserLogins](T1.AspNetUserLogins_LoginProvider, T1.AspNetUserLogins_ProviderKey, T1.AspNetUserLogins_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS AspNetUserLogins_LoginProvider, 
            T.ProviderKey AS AspNetUserLogins_ProviderKey, 
            T.UserId AS AspNetUserLogins_UserId, 
            True AS _from0
        FROM BaseDbContext.UserLogins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3751);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AspNetUsers\r\n        [SMDModel.Store.AspNetUs");
            viewString.Append("ers](T1.AspNetUsers_Id, T1.AspNetUsers_Email, T1.AspNetUsers_EmailConfirmed, T1.");
            viewString.Append("AspNetUsers_PasswordHash, T1.AspNetUsers_SecurityStamp, T1.AspNetUsers_PhoneNumb");
            viewString.Append("er, T1.AspNetUsers_PhoneNumberConfirmed, T1.AspNetUsers_TwoFactorEnabled, T1.Asp");
            viewString.Append("NetUsers_LockoutEndDateUtc, T1.AspNetUsers_LockoutEnabled, T1.AspNetUsers_Access");
            viewString.Append("FailedCount, T1.AspNetUsers_UserName, T1.AspNetUsers_FullName, T1.AspNetUsers_Al");
            viewString.Append("ternateEmail, T1.AspNetUsers_IsEmailVerified, T1.AspNetUsers_Status, T1.AspNetUs");
            viewString.Append("ers_CreatedDateTime, T1.AspNetUsers_ModifiedDateTime, T1.AspNetUsers_LastLoginTi");
            viewString.Append("me, T1.AspNetUsers_Phone1, T1.AspNetUsers_Phone2, T1.AspNetUsers_Jobtitle, T1.As");
            viewString.Append("pNetUsers_ContactNotes, T1.AspNetUsers_IsSubscribed, T1.AspNetUsers_AppID, T1.As");
            viewString.Append("pNetUsers_CompanyName, T1.AspNetUsers_SalesEmail, T1.AspNetUsers_CompanyRepresen");
            viewString.Append("tative, T1.AspNetUsers_Address1, T1.AspNetUsers_Address2, T1.AspNetUsers_CityID,");
            viewString.Append(" T1.AspNetUsers_CountryID, T1.AspNetUsers_State, T1.AspNetUsers_ZipCode, T1.AspN");
            viewString.Append("etUsers_UserTimeZone, T1.AspNetUsers_ReferralCode, T1.AspNetUsers_AfilliatianSta");
            viewString.Append("tus, T1.AspNetUsers_ChargeBeeCustomerID, T1.AspNetUsers_ChargeBeesubscriptionID,");
            viewString.Append(" T1.AspNetUsers_RegisteredViaReferral, T1.AspNetUsers_ReferringUserID)\r\n    FROM");
            viewString.Append(" (\r\n        SELECT \r\n            T.Id AS AspNetUsers_Id, \r\n            T.Email A");
            viewString.Append("S AspNetUsers_Email, \r\n            T.EmailConfirmed AS AspNetUsers_EmailConfirme");
            viewString.Append("d, \r\n            T.PasswordHash AS AspNetUsers_PasswordHash, \r\n            T.Sec");
            viewString.Append("urityStamp AS AspNetUsers_SecurityStamp, \r\n            T.PhoneNumber AS AspNetUs");
            viewString.Append("ers_PhoneNumber, \r\n            T.PhoneNumberConfirmed AS AspNetUsers_PhoneNumber");
            viewString.Append("Confirmed, \r\n            T.TwoFactorEnabled AS AspNetUsers_TwoFactorEnabled, \r\n ");
            viewString.Append("           T.LockoutEndDateUtc AS AspNetUsers_LockoutEndDateUtc, \r\n            T");
            viewString.Append(".LockoutEnabled AS AspNetUsers_LockoutEnabled, \r\n            T.AccessFailedCount");
            viewString.Append(" AS AspNetUsers_AccessFailedCount, \r\n            T.UserName AS AspNetUsers_UserN");
            viewString.Append("ame, \r\n            T.FullName AS AspNetUsers_FullName, \r\n            T.Alternate");
            viewString.Append("Email AS AspNetUsers_AlternateEmail, \r\n            T.IsEmailVerified AS AspNetUs");
            viewString.Append("ers_IsEmailVerified, \r\n            T.Status AS AspNetUsers_Status, \r\n           ");
            viewString.Append(" T.CreatedDateTime AS AspNetUsers_CreatedDateTime, \r\n            T.ModifiedDateT");
            viewString.Append("ime AS AspNetUsers_ModifiedDateTime, \r\n            T.LastLoginTime AS AspNetUser");
            viewString.Append("s_LastLoginTime, \r\n            T.Phone1 AS AspNetUsers_Phone1, \r\n            T.P");
            viewString.Append("hone2 AS AspNetUsers_Phone2, \r\n            T.Jobtitle AS AspNetUsers_Jobtitle, \r");
            viewString.Append("\n            T.ContactNotes AS AspNetUsers_ContactNotes, \r\n            T.IsSubsc");
            viewString.Append("ribed AS AspNetUsers_IsSubscribed, \r\n            T.AppId AS AspNetUsers_AppID, \r");
            viewString.Append("\n            T.CompanyName AS AspNetUsers_CompanyName, \r\n            T.SalesEmai");
            viewString.Append("l AS AspNetUsers_SalesEmail, \r\n            T.CompanyRepresentative AS AspNetUser");
            viewString.Append("s_CompanyRepresentative, \r\n            T.Address1 AS AspNetUsers_Address1, \r\n   ");
            viewString.Append("         T.Address2 AS AspNetUsers_Address2, \r\n            T.CityId AS AspNetUse");
            viewString.Append("rs_CityID, \r\n            T.CountryId AS AspNetUsers_CountryID, \r\n            T.S");
            viewString.Append("tate AS AspNetUsers_State, \r\n            T.ZipCode AS AspNetUsers_ZipCode, \r\n   ");
            viewString.Append("         T.UserTimeZone AS AspNetUsers_UserTimeZone, \r\n            T.ReferralCod");
            viewString.Append("e AS AspNetUsers_ReferralCode, \r\n            T.AfilliatianStatus AS AspNetUsers_");
            viewString.Append("AfilliatianStatus, \r\n            T.ChargeBeeCustomerId AS AspNetUsers_ChargeBeeC");
            viewString.Append("ustomerID, \r\n            T.ChargeBeesubscriptionId AS AspNetUsers_ChargeBeesubsc");
            viewString.Append("riptionID, \r\n            T.RegisteredViaReferral AS AspNetUsers_RegisteredViaRef");
            viewString.Append("erral, \r\n            T.ReferringUserId AS AspNetUsers_ReferringUserID, \r\n       ");
            viewString.Append("     True AS _from0\r\n        FROM BaseDbContext.Users AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUsers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestion", "\r\n    SELECT VALUE -- Constructing ProfileQuestion\r\n        [SMDModel.Store.Profi" +
                    "leQuestion](T1.ProfileQuestion_PQID, T1.ProfileQuestion_LanguageID, T1.ProfileQu" +
                    "estion_CountryID, T1.ProfileQuestion_ProfileGroupID, T1.ProfileQuestion_Priority" +
                    ", T1.ProfileQuestion_Type, T1.ProfileQuestion_Question, T1.ProfileQuestion_Refre" +
                    "shTime, T1.ProfileQuestion_SkippedCount, T1.ProfileQuestion_CreationDate, T1.Pro" +
                    "fileQuestion_CreatedBy, T1.ProfileQuestion_ModifiedDate, T1.ProfileQuestion_Modi" +
                    "fiedBy, T1.ProfileQuestion_HasLinkedQuestions, T1.ProfileQuestion_PenalityForNot" +
                    "Answering, T1.ProfileQuestion_Status)\r\n    FROM (\r\n        SELECT \r\n            " +
                    "T.PqId AS ProfileQuestion_PQID, \r\n            T.LanguageId AS ProfileQuestion_La" +
                    "nguageID, \r\n            T.CountryId AS ProfileQuestion_CountryID, \r\n            " +
                    "T.ProfileGroupId AS ProfileQuestion_ProfileGroupID, \r\n            T.Priority AS " +
                    "ProfileQuestion_Priority, \r\n            T.Type AS ProfileQuestion_Type, \r\n      " +
                    "      T.Question AS ProfileQuestion_Question, \r\n            T.RefreshTime AS Pro" +
                    "fileQuestion_RefreshTime, \r\n            T.SkippedCount AS ProfileQuestion_Skippe" +
                    "dCount, \r\n            T.CreationDate AS ProfileQuestion_CreationDate, \r\n        " +
                    "    T.CreatedBy AS ProfileQuestion_CreatedBy, \r\n            T.ModifiedDate AS Pr" +
                    "ofileQuestion_ModifiedDate, \r\n            T.ModifiedBy AS ProfileQuestion_Modifi" +
                    "edBy, \r\n            T.HasLinkedQuestions AS ProfileQuestion_HasLinkedQuestions, " +
                    "\r\n            T.PenalityForNotAnswering AS ProfileQuestion_PenalityForNotAnsweri" +
                    "ng, \r\n            T.Status AS ProfileQuestion_Status, \r\n            True AS _fro" +
                    "m0\r\n        FROM BaseDbContext.ProfileQuestions AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionAnswer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionAnswer", "\r\n    SELECT VALUE -- Constructing ProfileQuestionAnswer\r\n        [SMDModel.Store" +
                    ".ProfileQuestionAnswer](T1.ProfileQuestionAnswer_PQAnswerID, T1.ProfileQuestionA" +
                    "nswer_PQID, T1.ProfileQuestionAnswer_type, T1.ProfileQuestionAnswer_AnswerString" +
                    ", T1.ProfileQuestionAnswer_ImagePath, T1.ProfileQuestionAnswer_SortOrder, T1.Pro" +
                    "fileQuestionAnswer_LinkedQuestion1ID, T1.ProfileQuestionAnswer_LinkedQuestion2ID" +
                    ", T1.ProfileQuestionAnswer_LinkedQuestion3ID, T1.ProfileQuestionAnswer_LinkedQue" +
                    "stion4ID, T1.ProfileQuestionAnswer_LinkedQuestion5ID, T1.ProfileQuestionAnswer_L" +
                    "inkedQuestion6ID)\r\n    FROM (\r\n        SELECT \r\n            T.PqAnswerId AS Prof" +
                    "ileQuestionAnswer_PQAnswerID, \r\n            T.PqId AS ProfileQuestionAnswer_PQID" +
                    ", \r\n            T.Type AS ProfileQuestionAnswer_type, \r\n            T.AnswerStri" +
                    "ng AS ProfileQuestionAnswer_AnswerString, \r\n            T.ImagePath AS ProfileQu" +
                    "estionAnswer_ImagePath, \r\n            T.SortOrder AS ProfileQuestionAnswer_SortO" +
                    "rder, \r\n            T.LinkedQuestion1Id AS ProfileQuestionAnswer_LinkedQuestion1" +
                    "ID, \r\n            T.LinkedQuestion2Id AS ProfileQuestionAnswer_LinkedQuestion2ID" +
                    ", \r\n            T.LinkedQuestion3Id AS ProfileQuestionAnswer_LinkedQuestion3ID, " +
                    "\r\n            T.LinkedQuestion4Id AS ProfileQuestionAnswer_LinkedQuestion4ID, \r\n" +
                    "            T.LinkedQuestion5Id AS ProfileQuestionAnswer_LinkedQuestion5ID, \r\n  " +
                    "          T.LinkedQuestion6Id AS ProfileQuestionAnswer_LinkedQuestion6ID, \r\n    " +
                    "        True AS _from0\r\n        FROM BaseDbContext.ProfileQuestionAnswers AS T\r\n" +
                    "    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionGroup", @"
    SELECT VALUE -- Constructing ProfileQuestionGroup
        [SMDModel.Store.ProfileQuestionGroup](T1.ProfileQuestionGroup_ProfileGroupID, T1.ProfileQuestionGroup_ProfileGroupName, T1.ProfileQuestionGroup_ImagePath, T1.ProfileQuestionGroup_LangaugeID, T1.ProfileQuestionGroup_CountryID)
    FROM (
        SELECT 
            T.ProfileGroupId AS ProfileQuestionGroup_ProfileGroupID, 
            T.ProfileGroupName AS ProfileQuestionGroup_ProfileGroupName, 
            T.ImagePath AS ProfileQuestionGroup_ImagePath, 
            T.LangaugeId AS ProfileQuestionGroup_LangaugeID, 
            T.CountryId AS ProfileQuestionGroup_CountryID, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionUserAnswer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionUserAnswer", @"
    SELECT VALUE -- Constructing ProfileQuestionUserAnswer
        [SMDModel.Store.ProfileQuestionUserAnswer](T1.ProfileQuestionUserAnswer_PQUAnswerID, T1.ProfileQuestionUserAnswer_PQID, T1.ProfileQuestionUserAnswer_UserID, T1.ProfileQuestionUserAnswer_AnswerDateTime, T1.ProfileQuestionUserAnswer_PQAnswerID)
    FROM (
        SELECT 
            T.PquAnswerId AS ProfileQuestionUserAnswer_PQUAnswerID, 
            T.PqId AS ProfileQuestionUserAnswer_PQID, 
            T.UserId AS ProfileQuestionUserAnswer_UserID, 
            T.AnswerDateTime AS ProfileQuestionUserAnswer_AnswerDateTime, 
            T.PqAnswerId AS ProfileQuestionUserAnswer_PQAnswerID, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionUserAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserClaims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserClaims", @"
    SELECT VALUE -- Constructing AspNetUserClaims
        [SMDModel.Store.AspNetUserClaims](T1.AspNetUserClaims_Id, T1.AspNetUserClaims_UserId, T1.AspNetUserClaims_ClaimType, T1.AspNetUserClaims_ClaimValue)
    FROM (
        SELECT 
            T.Id AS AspNetUserClaims_Id, 
            T.UserId AS AspNetUserClaims_UserId, 
            T.ClaimType AS AspNetUserClaims_ClaimType, 
            T.ClaimValue AS AspNetUserClaims_ClaimValue, 
            True AS _from0
        FROM BaseDbContext.UserClaims AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Country", @"
    SELECT VALUE -- Constructing Country
        [SMDModel.Store.Country](T1.Country_CountryID, T1.Country_CountryName, T1.Country_CountryCode)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryID, 
            T.CountryName AS Country_CountryName, 
            T.CountryCode AS Country_CountryCode, 
            True AS _from0
        FROM BaseDbContext.Countries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Language
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Language", @"
    SELECT VALUE -- Constructing Language
        [SMDModel.Store.Language](T1.Language_LanguageID, T1.Language_LanguageName, T1.Language_NativeName)
    FROM (
        SELECT 
            T.LanguageId AS Language_LanguageID, 
            T.LanguageName AS Language_LanguageName, 
            T.NativeName AS Language_NativeName, 
            True AS _from0
        FROM BaseDbContext.Languages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaign
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3219);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaign\r\n        [SMDModel.Store.AdCampaig");
            viewString.Append("n](T1.AdCampaign_CampaignID, T1.AdCampaign_LanguageID, T1.AdCampaign_UserID, T1.");
            viewString.Append("AdCampaign_SMDCampaign, T1.AdCampaign_CampaignName, T1.AdCampaign_CampaignDescri");
            viewString.Append("ption, T1.AdCampaign_Status, T1.AdCampaign_Archived, T1.AdCampaign_Approved, T1.");
            viewString.Append("AdCampaign_ApprovedBy, T1.AdCampaign_ApprovalDateTime, T1.AdCampaign_StartDateTi");
            viewString.Append("me, T1.AdCampaign_EndDateTime, T1.AdCampaign_MaxBudget, T1.AdCampaign_Type, T1.A");
            viewString.Append("dCampaign_ClickRate, T1.AdCampaign_SMDCredits, T1.AdCampaign_DisplayTitle, T1.Ad");
            viewString.Append("Campaign_Description, T1.AdCampaign_ImagePath, T1.AdCampaign_LandingPageVideoLin");
            viewString.Append("k, T1.AdCampaign_VerifyQuestion, T1.AdCampaign_Answer1, T1.AdCampaign_Answer2, T");
            viewString.Append("1.AdCampaign_Answer3, T1.AdCampaign_CorrectAnswer, T1.AdCampaign_CreatedDateTime");
            viewString.Append(", T1.AdCampaign_CreatedBy, T1.AdCampaign_ModifiedDateTime, T1.AdCampaign_Modifie");
            viewString.Append("dBy, T1.AdCampaign_AgeRangeStart, T1.AdCampaign_AgeRangeEnd, T1.AdCampaign_Gende");
            viewString.Append("r, T1.AdCampaign_RejectedReason, T1.AdCampaign_ProjectedReach, T1.AdCampaign_Res");
            viewString.Append("ultClicks, T1.AdCampaign_AmountSpent)\r\n    FROM (\r\n        SELECT \r\n            ");
            viewString.Append("T.CampaignId AS AdCampaign_CampaignID, \r\n            T.LanguageId AS AdCampaign_");
            viewString.Append("LanguageID, \r\n            T.UserId AS AdCampaign_UserID, \r\n            T.SmdCamp");
            viewString.Append("aign AS AdCampaign_SMDCampaign, \r\n            T.CampaignName AS AdCampaign_Campa");
            viewString.Append("ignName, \r\n            T.CampaignDescription AS AdCampaign_CampaignDescription, ");
            viewString.Append("\r\n            T.Status AS AdCampaign_Status, \r\n            T.Archived AS AdCampa");
            viewString.Append("ign_Archived, \r\n            T.Approved AS AdCampaign_Approved, \r\n            T.A");
            viewString.Append("pprovedBy AS AdCampaign_ApprovedBy, \r\n            T.ApprovalDateTime AS AdCampai");
            viewString.Append("gn_ApprovalDateTime, \r\n            T.StartDateTime AS AdCampaign_StartDateTime, ");
            viewString.Append("\r\n            T.EndDateTime AS AdCampaign_EndDateTime, \r\n            T.MaxBudget");
            viewString.Append(" AS AdCampaign_MaxBudget, \r\n            T.Type AS AdCampaign_Type, \r\n           ");
            viewString.Append(" T.ClickRate AS AdCampaign_ClickRate, \r\n            T.SmdCredits AS AdCampaign_S");
            viewString.Append("MDCredits, \r\n            T.DisplayTitle AS AdCampaign_DisplayTitle, \r\n          ");
            viewString.Append("  T.Description AS AdCampaign_Description, \r\n            T.ImagePath AS AdCampai");
            viewString.Append("gn_ImagePath, \r\n            T.LandingPageVideoLink AS AdCampaign_LandingPageVide");
            viewString.Append("oLink, \r\n            T.VerifyQuestion AS AdCampaign_VerifyQuestion, \r\n          ");
            viewString.Append("  T.Answer1 AS AdCampaign_Answer1, \r\n            T.Answer2 AS AdCampaign_Answer2");
            viewString.Append(", \r\n            T.Answer3 AS AdCampaign_Answer3, \r\n            T.CorrectAnswer A");
            viewString.Append("S AdCampaign_CorrectAnswer, \r\n            T.CreatedDateTime AS AdCampaign_Create");
            viewString.Append("dDateTime, \r\n            T.CreatedBy AS AdCampaign_CreatedBy, \r\n            T.Mo");
            viewString.Append("difiedDateTime AS AdCampaign_ModifiedDateTime, \r\n            T.ModifiedBy AS AdC");
            viewString.Append("ampaign_ModifiedBy, \r\n            T.AgeRangeStart AS AdCampaign_AgeRangeStart, \r");
            viewString.Append("\n            T.AgeRangeEnd AS AdCampaign_AgeRangeEnd, \r\n            T.Gender AS ");
            viewString.Append("AdCampaign_Gender, \r\n            T.RejectedReason AS AdCampaign_RejectedReason, ");
            viewString.Append("\r\n            T.ProjectedReach AS AdCampaign_ProjectedReach, \r\n            T.Res");
            viewString.Append("ultClicks AS AdCampaign_ResultClicks, \r\n            T.AmountSpent AS AdCampaign_");
            viewString.Append("AmountSpent, \r\n            True AS _from0\r\n        FROM BaseDbContext.AdCampaign");
            viewString.Append("s AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaign", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignResponse", @"
    SELECT VALUE -- Constructing AdCampaignResponse
        [SMDModel.Store.AdCampaignResponse](T1.AdCampaignResponse_ResponseID, T1.AdCampaignResponse_CampaignID, T1.AdCampaignResponse_CreatedDateTime, T1.AdCampaignResponse_UserID, T1.AdCampaignResponse_EndUserDollarAmount)
    FROM (
        SELECT 
            T.ResponseId AS AdCampaignResponse_ResponseID, 
            T.CampaignId AS AdCampaignResponse_CampaignID, 
            T.CreatedDateTime AS AdCampaignResponse_CreatedDateTime, 
            T.UserId AS AdCampaignResponse_UserID, 
            T.EndUserDollarAmount AS AdCampaignResponse_EndUserDollarAmount, 
            True AS _from0
        FROM BaseDbContext.AdCampaignResponses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignTargetCriteria", @"
    SELECT VALUE -- Constructing AdCampaignTargetCriteria
        [SMDModel.Store.AdCampaignTargetCriteria](T1.AdCampaignTargetCriteria_CriteriaID, T1.AdCampaignTargetCriteria_CampaignID, T1.AdCampaignTargetCriteria_Type, T1.AdCampaignTargetCriteria_PQID, T1.AdCampaignTargetCriteria_PQAnswerID, T1.AdCampaignTargetCriteria_SQID, T1.AdCampaignTargetCriteria_SQAnswer, T1.AdCampaignTargetCriteria_IncludeorExclude, T1.AdCampaignTargetCriteria_LanguageID)
    FROM (
        SELECT 
            T.CriteriaId AS AdCampaignTargetCriteria_CriteriaID, 
            T.CampaignId AS AdCampaignTargetCriteria_CampaignID, 
            T.Type AS AdCampaignTargetCriteria_Type, 
            T.PqId AS AdCampaignTargetCriteria_PQID, 
            T.PqAnswerId AS AdCampaignTargetCriteria_PQAnswerID, 
            T.SqId AS AdCampaignTargetCriteria_SQID, 
            T.SqAnswer AS AdCampaignTargetCriteria_SQAnswer, 
            T.IncludeorExclude AS AdCampaignTargetCriteria_IncludeorExclude, 
            T.LanguageId AS AdCampaignTargetCriteria_LanguageID, 
            True AS _from0
        FROM BaseDbContext.AdCampaignTargetCriterias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignTargetLocation", @"
    SELECT VALUE -- Constructing AdCampaignTargetLocation
        [SMDModel.Store.AdCampaignTargetLocation](T1.AdCampaignTargetLocation_ID, T1.AdCampaignTargetLocation_CampaignID, T1.AdCampaignTargetLocation_CountryID, T1.AdCampaignTargetLocation_CityID, T1.AdCampaignTargetLocation_Radius)
    FROM (
        SELECT 
            T.Id AS AdCampaignTargetLocation_ID, 
            T.CampaignId AS AdCampaignTargetLocation_CampaignID, 
            T.CountryId AS AdCampaignTargetLocation_CountryID, 
            T.CityId AS AdCampaignTargetLocation_CityID, 
            T.Radius AS AdCampaignTargetLocation_Radius, 
            True AS _from0
        FROM BaseDbContext.AdCampaignTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2387);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SurveyQuestion\r\n        [SMDModel.Store.Surve");
            viewString.Append("yQuestion](T1.SurveyQuestion_SQID, T1.SurveyQuestion_LanguageID, T1.SurveyQuesti");
            viewString.Append("on_CountryID, T1.SurveyQuestion_Type, T1.SurveyQuestion_UserID, T1.SurveyQuestio");
            viewString.Append("n_Question, T1.SurveyQuestion_Description, T1.SurveyQuestion_RepeatPeriod, T1.Su");
            viewString.Append("rveyQuestion_DisplayQuestion, T1.SurveyQuestion_StartDate, T1.SurveyQuestion_End");
            viewString.Append("Date, T1.SurveyQuestion_Approved, T1.SurveyQuestion_ApprovedByUserID, T1.SurveyQ");
            viewString.Append("uestion_ApprovalDate, T1.SurveyQuestion_CreationDate, T1.SurveyQuestion_Modified");
            viewString.Append("Date, T1.SurveyQuestion_CreatedBy, T1.SurveyQuestion_ModifiedBy, T1.SurveyQuesti");
            viewString.Append("on_LeftPicturePath, T1.SurveyQuestion_RightPicturePath, T1.SurveyQuestion_Discou");
            viewString.Append("ntVoucherApplied, T1.SurveyQuestion_VoucherCode, T1.SurveyQuestion_DiscountVouch");
            viewString.Append("erID, T1.SurveyQuestion_RejectionReason)\r\n    FROM (\r\n        SELECT \r\n         ");
            viewString.Append("   T.SqId AS SurveyQuestion_SQID, \r\n            T.LanguageId AS SurveyQuestion_L");
            viewString.Append("anguageID, \r\n            T.CountryId AS SurveyQuestion_CountryID, \r\n            ");
            viewString.Append("T.Type AS SurveyQuestion_Type, \r\n            T.UserId AS SurveyQuestion_UserID, ");
            viewString.Append("\r\n            T.Question AS SurveyQuestion_Question, \r\n            T.Description");
            viewString.Append(" AS SurveyQuestion_Description, \r\n            T.RepeatPeriod AS SurveyQuestion_R");
            viewString.Append("epeatPeriod, \r\n            T.DisplayQuestion AS SurveyQuestion_DisplayQuestion, ");
            viewString.Append("\r\n            T.StartDate AS SurveyQuestion_StartDate, \r\n            T.EndDate A");
            viewString.Append("S SurveyQuestion_EndDate, \r\n            T.Approved AS SurveyQuestion_Approved, \r");
            viewString.Append("\n            T.ApprovedByUserId AS SurveyQuestion_ApprovedByUserID, \r\n          ");
            viewString.Append("  T.ApprovalDate AS SurveyQuestion_ApprovalDate, \r\n            T.CreationDate AS");
            viewString.Append(" SurveyQuestion_CreationDate, \r\n            T.ModifiedDate AS SurveyQuestion_Mod");
            viewString.Append("ifiedDate, \r\n            T.CreatedBy AS SurveyQuestion_CreatedBy, \r\n            ");
            viewString.Append("T.ModifiedBy AS SurveyQuestion_ModifiedBy, \r\n            T.LeftPicturePath AS Su");
            viewString.Append("rveyQuestion_LeftPicturePath, \r\n            T.RightPicturePath AS SurveyQuestion");
            viewString.Append("_RightPicturePath, \r\n            T.DiscountVoucherApplied AS SurveyQuestion_Disc");
            viewString.Append("ountVoucherApplied, \r\n            T.VoucherCode AS SurveyQuestion_VoucherCode, \r");
            viewString.Append("\n            T.DiscountVoucherId AS SurveyQuestion_DiscountVoucherID, \r\n        ");
            viewString.Append("    T.RejectionReason AS SurveyQuestion_RejectionReason, \r\n            True AS _");
            viewString.Append("from0\r\n        FROM BaseDbContext.SurveyQuestions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestion", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionTargetCriteria", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetCriteria
        [SMDModel.Store.SurveyQuestionTargetCriteria](T1.SurveyQuestionTargetCriteria_ID, T1.SurveyQuestionTargetCriteria_SQID, T1.SurveyQuestionTargetCriteria_Type, T1.SurveyQuestionTargetCriteria_PQID, T1.SurveyQuestionTargetCriteria_PQAnswerID, T1.SurveyQuestionTargetCriteria_LinkedSQID, T1.SurveyQuestionTargetCriteria_LinkedSQAnswer, T1.SurveyQuestionTargetCriteria_IncludeorExclude)
    FROM (
        SELECT 
            T.Id AS SurveyQuestionTargetCriteria_ID, 
            T.SqId AS SurveyQuestionTargetCriteria_SQID, 
            T.Type AS SurveyQuestionTargetCriteria_Type, 
            T.PqId AS SurveyQuestionTargetCriteria_PQID, 
            T.PqAnswerId AS SurveyQuestionTargetCriteria_PQAnswerID, 
            T.LinkedSqId AS SurveyQuestionTargetCriteria_LinkedSQID, 
            T.LinkedSqAnswer AS SurveyQuestionTargetCriteria_LinkedSQAnswer, 
            T.IncludeorExclude AS SurveyQuestionTargetCriteria_IncludeorExclude, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionTargetCriterias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionTargetLocation", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetLocation
        [SMDModel.Store.SurveyQuestionTargetLocation](T1.SurveyQuestionTargetLocation_ID, T1.SurveyQuestionTargetLocation_SQID, T1.SurveyQuestionTargetLocation_CountryID, T1.SurveyQuestionTargetLocation_CityID, T1.SurveyQuestionTargetLocation_Radius)
    FROM (
        SELECT 
            T.Id AS SurveyQuestionTargetLocation_ID, 
            T.SqId AS SurveyQuestionTargetLocation_SQID, 
            T.CountryId AS SurveyQuestionTargetLocation_CountryID, 
            T.CityId AS SurveyQuestionTargetLocation_CityID, 
            T.Radius AS SurveyQuestionTargetLocation_Radius, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserRoles", @"
    SELECT VALUE -- Constructing AspNetUserRoles
        [SMDModel.Store.AspNetUserRoles](T1.AspNetUserRoles_UserId, T1.AspNetUserRoles_RoleId)
    FROM (
        SELECT 
            Key(T.AspNetUsers).Id AS AspNetUserRoles_UserId, 
            Key(T.AspNetRoles).Id AS AspNetUserRoles_RoleId, 
            True AS _from0
        FROM BaseDbContext.AspNetUserRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Roles", @"
    SELECT VALUE -- Constructing Roles
        [DomainModels.Role](T1.Role_Id, T1.Role_Name)
    FROM (
        SELECT 
            T.Id AS Role_Id, 
            T.Name AS Role_Name, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserLogins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserLogins", @"
    SELECT VALUE -- Constructing UserLogins
        [DomainModels.UserLogin](T1.UserLogin_LoginProvider, T1.UserLogin_ProviderKey, T1.UserLogin_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS UserLogin_LoginProvider, 
            T.ProviderKey AS UserLogin_ProviderKey, 
            T.UserId AS UserLogin_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetUserLogins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3177);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Users\r\n        [DomainModels.User](T1.User_Id");
            viewString.Append(", T1.User_Email, T1.User_EmailConfirmed, T1.User_PasswordHash, T1.User_SecurityS");
            viewString.Append("tamp, T1.User_PhoneNumber, T1.User_PhoneNumberConfirmed, T1.User_TwoFactorEnable");
            viewString.Append("d, T1.User_LockoutEndDateUtc, T1.User_LockoutEnabled, T1.User_AccessFailedCount,");
            viewString.Append(" T1.User_UserName, T1.User_FullName, T1.User_AlternateEmail, T1.User_IsEmailVeri");
            viewString.Append("fied, T1.User_Status, T1.User_CreatedDateTime, T1.User_ModifiedDateTime, T1.User");
            viewString.Append("_LastLoginTime, T1.User_Phone1, T1.User_Phone2, T1.User_Jobtitle, T1.User_Contac");
            viewString.Append("tNotes, T1.User_IsSubscribed, T1.User_AppId, T1.User_CompanyName, T1.User_SalesE");
            viewString.Append("mail, T1.User_CompanyRepresentative, T1.User_Address1, T1.User_Address2, T1.User");
            viewString.Append("_CityId, T1.User_CountryId, T1.User_State, T1.User_ZipCode, T1.User_UserTimeZone");
            viewString.Append(", T1.User_ReferralCode, T1.User_AfilliatianStatus, T1.User_ChargeBeeCustomerId, ");
            viewString.Append("T1.User_ChargeBeesubscriptionId, T1.User_RegisteredViaReferral, T1.User_Referrin");
            viewString.Append("gUserId)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS User_Id, \r\n          ");
            viewString.Append("  T.Email AS User_Email, \r\n            T.EmailConfirmed AS User_EmailConfirmed, ");
            viewString.Append("\r\n            T.PasswordHash AS User_PasswordHash, \r\n            T.SecurityStamp");
            viewString.Append(" AS User_SecurityStamp, \r\n            T.PhoneNumber AS User_PhoneNumber, \r\n     ");
            viewString.Append("       T.PhoneNumberConfirmed AS User_PhoneNumberConfirmed, \r\n            T.TwoF");
            viewString.Append("actorEnabled AS User_TwoFactorEnabled, \r\n            T.LockoutEndDateUtc AS User");
            viewString.Append("_LockoutEndDateUtc, \r\n            T.LockoutEnabled AS User_LockoutEnabled, \r\n   ");
            viewString.Append("         T.AccessFailedCount AS User_AccessFailedCount, \r\n            T.UserName");
            viewString.Append(" AS User_UserName, \r\n            T.FullName AS User_FullName, \r\n            T.Al");
            viewString.Append("ternateEmail AS User_AlternateEmail, \r\n            T.IsEmailVerified AS User_IsE");
            viewString.Append("mailVerified, \r\n            T.Status AS User_Status, \r\n            T.CreatedDate");
            viewString.Append("Time AS User_CreatedDateTime, \r\n            T.ModifiedDateTime AS User_ModifiedD");
            viewString.Append("ateTime, \r\n            T.LastLoginTime AS User_LastLoginTime, \r\n            T.Ph");
            viewString.Append("one1 AS User_Phone1, \r\n            T.Phone2 AS User_Phone2, \r\n            T.Jobt");
            viewString.Append("itle AS User_Jobtitle, \r\n            T.ContactNotes AS User_ContactNotes, \r\n    ");
            viewString.Append("        T.IsSubscribed AS User_IsSubscribed, \r\n            T.AppID AS User_AppId");
            viewString.Append(", \r\n            T.CompanyName AS User_CompanyName, \r\n            T.SalesEmail AS");
            viewString.Append(" User_SalesEmail, \r\n            T.CompanyRepresentative AS User_CompanyRepresent");
            viewString.Append("ative, \r\n            T.Address1 AS User_Address1, \r\n            T.Address2 AS Us");
            viewString.Append("er_Address2, \r\n            T.CityID AS User_CityId, \r\n            T.CountryID AS");
            viewString.Append(" User_CountryId, \r\n            T.State AS User_State, \r\n            T.ZipCode AS");
            viewString.Append(" User_ZipCode, \r\n            T.UserTimeZone AS User_UserTimeZone, \r\n            ");
            viewString.Append("T.ReferralCode AS User_ReferralCode, \r\n            T.AfilliatianStatus AS User_A");
            viewString.Append("filliatianStatus, \r\n            T.ChargeBeeCustomerID AS User_ChargeBeeCustomerI");
            viewString.Append("d, \r\n            T.ChargeBeesubscriptionID AS User_ChargeBeesubscriptionId, \r\n  ");
            viewString.Append("          T.RegisteredViaReferral AS User_RegisteredViaReferral, \r\n            T");
            viewString.Append(".ReferringUserID AS User_ReferringUserId, \r\n            True AS _from0\r\n        ");
            viewString.Append("FROM SMDModelStoreContainer.AspNetUsers AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Users", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestions", "\r\n    SELECT VALUE -- Constructing ProfileQuestions\r\n        [DomainModels.Profil" +
                    "eQuestion](T1.ProfileQuestion_PqId, T1.ProfileQuestion_LanguageId, T1.ProfileQue" +
                    "stion_CountryId, T1.ProfileQuestion_ProfileGroupId, T1.ProfileQuestion_Priority," +
                    " T1.ProfileQuestion_Type, T1.ProfileQuestion_Question, T1.ProfileQuestion_Refres" +
                    "hTime, T1.ProfileQuestion_SkippedCount, T1.ProfileQuestion_CreationDate, T1.Prof" +
                    "ileQuestion_CreatedBy, T1.ProfileQuestion_ModifiedDate, T1.ProfileQuestion_Modif" +
                    "iedBy, T1.ProfileQuestion_HasLinkedQuestions, T1.ProfileQuestion_PenalityForNotA" +
                    "nswering, T1.ProfileQuestion_Status)\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".PQID AS ProfileQuestion_PqId, \r\n            T.LanguageID AS ProfileQuestion_Lan" +
                    "guageId, \r\n            T.CountryID AS ProfileQuestion_CountryId, \r\n            T" +
                    ".ProfileGroupID AS ProfileQuestion_ProfileGroupId, \r\n            T.Priority AS P" +
                    "rofileQuestion_Priority, \r\n            T.Type AS ProfileQuestion_Type, \r\n       " +
                    "     T.Question AS ProfileQuestion_Question, \r\n            T.RefreshTime AS Prof" +
                    "ileQuestion_RefreshTime, \r\n            T.SkippedCount AS ProfileQuestion_Skipped" +
                    "Count, \r\n            T.CreationDate AS ProfileQuestion_CreationDate, \r\n         " +
                    "   T.CreatedBy AS ProfileQuestion_CreatedBy, \r\n            T.ModifiedDate AS Pro" +
                    "fileQuestion_ModifiedDate, \r\n            T.ModifiedBy AS ProfileQuestion_Modifie" +
                    "dBy, \r\n            T.HasLinkedQuestions AS ProfileQuestion_HasLinkedQuestions, \r" +
                    "\n            T.PenalityForNotAnswering AS ProfileQuestion_PenalityForNotAnswerin" +
                    "g, \r\n            T.Status AS ProfileQuestion_Status, \r\n            True AS _from" +
                    "0\r\n        FROM SMDModelStoreContainer.ProfileQuestion AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionAnswers", "\r\n    SELECT VALUE -- Constructing ProfileQuestionAnswers\r\n        [DomainModels." +
                    "ProfileQuestionAnswer](T1.ProfileQuestionAnswer_PqAnswerId, T1.ProfileQuestionAn" +
                    "swer_PqId, T1.ProfileQuestionAnswer_Type, T1.ProfileQuestionAnswer_AnswerString," +
                    " T1.ProfileQuestionAnswer_ImagePath, T1.ProfileQuestionAnswer_SortOrder, T1.Prof" +
                    "ileQuestionAnswer_LinkedQuestion1Id, T1.ProfileQuestionAnswer_LinkedQuestion2Id," +
                    " T1.ProfileQuestionAnswer_LinkedQuestion3Id, T1.ProfileQuestionAnswer_LinkedQues" +
                    "tion4Id, T1.ProfileQuestionAnswer_LinkedQuestion5Id, T1.ProfileQuestionAnswer_Li" +
                    "nkedQuestion6Id)\r\n    FROM (\r\n        SELECT \r\n            T.PQAnswerID AS Profi" +
                    "leQuestionAnswer_PqAnswerId, \r\n            T.PQID AS ProfileQuestionAnswer_PqId," +
                    " \r\n            T.type AS ProfileQuestionAnswer_Type, \r\n            T.AnswerStrin" +
                    "g AS ProfileQuestionAnswer_AnswerString, \r\n            T.ImagePath AS ProfileQue" +
                    "stionAnswer_ImagePath, \r\n            T.SortOrder AS ProfileQuestionAnswer_SortOr" +
                    "der, \r\n            T.LinkedQuestion1ID AS ProfileQuestionAnswer_LinkedQuestion1I" +
                    "d, \r\n            T.LinkedQuestion2ID AS ProfileQuestionAnswer_LinkedQuestion2Id," +
                    " \r\n            T.LinkedQuestion3ID AS ProfileQuestionAnswer_LinkedQuestion3Id, \r" +
                    "\n            T.LinkedQuestion4ID AS ProfileQuestionAnswer_LinkedQuestion4Id, \r\n " +
                    "           T.LinkedQuestion5ID AS ProfileQuestionAnswer_LinkedQuestion5Id, \r\n   " +
                    "         T.LinkedQuestion6ID AS ProfileQuestionAnswer_LinkedQuestion6Id, \r\n     " +
                    "       True AS _from0\r\n        FROM SMDModelStoreContainer.ProfileQuestionAnswer" +
                    " AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionGroups", @"
    SELECT VALUE -- Constructing ProfileQuestionGroups
        [DomainModels.ProfileQuestionGroup](T1.ProfileQuestionGroup_ProfileGroupId, T1.ProfileQuestionGroup_ProfileGroupName, T1.ProfileQuestionGroup_ImagePath, T1.ProfileQuestionGroup_LangaugeId, T1.ProfileQuestionGroup_CountryId)
    FROM (
        SELECT 
            T.ProfileGroupID AS ProfileQuestionGroup_ProfileGroupId, 
            T.ProfileGroupName AS ProfileQuestionGroup_ProfileGroupName, 
            T.ImagePath AS ProfileQuestionGroup_ImagePath, 
            T.LangaugeID AS ProfileQuestionGroup_LangaugeId, 
            T.CountryID AS ProfileQuestionGroup_CountryId, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionUserAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionUserAnswers", @"
    SELECT VALUE -- Constructing ProfileQuestionUserAnswers
        [DomainModels.ProfileQuestionUserAnswer](T1.ProfileQuestionUserAnswer_PquAnswerId, T1.ProfileQuestionUserAnswer_PqId, T1.ProfileQuestionUserAnswer_UserId, T1.ProfileQuestionUserAnswer_AnswerDateTime, T1.ProfileQuestionUserAnswer_PqAnswerId)
    FROM (
        SELECT 
            T.PQUAnswerID AS ProfileQuestionUserAnswer_PquAnswerId, 
            T.PQID AS ProfileQuestionUserAnswer_PqId, 
            T.UserID AS ProfileQuestionUserAnswer_UserId, 
            T.AnswerDateTime AS ProfileQuestionUserAnswer_AnswerDateTime, 
            T.PQAnswerID AS ProfileQuestionUserAnswer_PqAnswerId, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionUserAnswer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserClaims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserClaims", @"
    SELECT VALUE -- Constructing UserClaims
        [DomainModels.UserClaim](T1.UserClaim_Id, T1.UserClaim_UserId, T1.UserClaim_ClaimType, T1.UserClaim_ClaimValue)
    FROM (
        SELECT 
            T.Id AS UserClaim_Id, 
            T.UserId AS UserClaim_UserId, 
            T.ClaimType AS UserClaim_ClaimType, 
            T.ClaimValue AS UserClaim_ClaimValue, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetUserClaims AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Countries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Countries", @"
    SELECT VALUE -- Constructing Countries
        [DomainModels.Country](T1.Country_CountryId, T1.Country_CountryName, T1.Country_CountryCode)
    FROM (
        SELECT 
            T.CountryID AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            T.CountryCode AS Country_CountryCode, 
            True AS _from0
        FROM SMDModelStoreContainer.Country AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Languages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Languages", @"
    SELECT VALUE -- Constructing Languages
        [DomainModels.Language](T1.Language_LanguageId, T1.Language_LanguageName, T1.Language_NativeName)
    FROM (
        SELECT 
            T.LanguageID AS Language_LanguageId, 
            T.LanguageName AS Language_LanguageName, 
            T.NativeName AS Language_NativeName, 
            True AS _from0
        FROM SMDModelStoreContainer.Language AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaigns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3226);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaigns\r\n        [DomainModels.AdCampaign");
            viewString.Append("](T1.AdCampaign_CampaignId, T1.AdCampaign_LanguageId, T1.AdCampaign_UserId, T1.A");
            viewString.Append("dCampaign_SmdCampaign, T1.AdCampaign_CampaignName, T1.AdCampaign_CampaignDescrip");
            viewString.Append("tion, T1.AdCampaign_Status, T1.AdCampaign_Archived, T1.AdCampaign_Approved, T1.A");
            viewString.Append("dCampaign_ApprovedBy, T1.AdCampaign_ApprovalDateTime, T1.AdCampaign_StartDateTim");
            viewString.Append("e, T1.AdCampaign_EndDateTime, T1.AdCampaign_MaxBudget, T1.AdCampaign_Type, T1.Ad");
            viewString.Append("Campaign_ClickRate, T1.AdCampaign_SmdCredits, T1.AdCampaign_DisplayTitle, T1.AdC");
            viewString.Append("ampaign_Description, T1.AdCampaign_ImagePath, T1.AdCampaign_LandingPageVideoLink");
            viewString.Append(", T1.AdCampaign_VerifyQuestion, T1.AdCampaign_Answer1, T1.AdCampaign_Answer2, T1");
            viewString.Append(".AdCampaign_Answer3, T1.AdCampaign_CorrectAnswer, T1.AdCampaign_CreatedDateTime,");
            viewString.Append(" T1.AdCampaign_CreatedBy, T1.AdCampaign_ModifiedDateTime, T1.AdCampaign_Modified");
            viewString.Append("By, T1.AdCampaign_AgeRangeStart, T1.AdCampaign_AgeRangeEnd, T1.AdCampaign_Gender");
            viewString.Append(", T1.AdCampaign_RejectedReason, T1.AdCampaign_ProjectedReach, T1.AdCampaign_Resu");
            viewString.Append("ltClicks, T1.AdCampaign_AmountSpent)\r\n    FROM (\r\n        SELECT \r\n            T");
            viewString.Append(".CampaignID AS AdCampaign_CampaignId, \r\n            T.LanguageID AS AdCampaign_L");
            viewString.Append("anguageId, \r\n            T.UserID AS AdCampaign_UserId, \r\n            T.SMDCampa");
            viewString.Append("ign AS AdCampaign_SmdCampaign, \r\n            T.CampaignName AS AdCampaign_Campai");
            viewString.Append("gnName, \r\n            T.CampaignDescription AS AdCampaign_CampaignDescription, \r");
            viewString.Append("\n            T.Status AS AdCampaign_Status, \r\n            T.Archived AS AdCampai");
            viewString.Append("gn_Archived, \r\n            T.Approved AS AdCampaign_Approved, \r\n            T.Ap");
            viewString.Append("provedBy AS AdCampaign_ApprovedBy, \r\n            T.ApprovalDateTime AS AdCampaig");
            viewString.Append("n_ApprovalDateTime, \r\n            T.StartDateTime AS AdCampaign_StartDateTime, \r");
            viewString.Append("\n            T.EndDateTime AS AdCampaign_EndDateTime, \r\n            T.MaxBudget ");
            viewString.Append("AS AdCampaign_MaxBudget, \r\n            T.Type AS AdCampaign_Type, \r\n            ");
            viewString.Append("T.ClickRate AS AdCampaign_ClickRate, \r\n            T.SMDCredits AS AdCampaign_Sm");
            viewString.Append("dCredits, \r\n            T.DisplayTitle AS AdCampaign_DisplayTitle, \r\n           ");
            viewString.Append(" T.Description AS AdCampaign_Description, \r\n            T.ImagePath AS AdCampaig");
            viewString.Append("n_ImagePath, \r\n            T.LandingPageVideoLink AS AdCampaign_LandingPageVideo");
            viewString.Append("Link, \r\n            T.VerifyQuestion AS AdCampaign_VerifyQuestion, \r\n           ");
            viewString.Append(" T.Answer1 AS AdCampaign_Answer1, \r\n            T.Answer2 AS AdCampaign_Answer2,");
            viewString.Append(" \r\n            T.Answer3 AS AdCampaign_Answer3, \r\n            T.CorrectAnswer AS");
            viewString.Append(" AdCampaign_CorrectAnswer, \r\n            T.CreatedDateTime AS AdCampaign_Created");
            viewString.Append("DateTime, \r\n            T.CreatedBy AS AdCampaign_CreatedBy, \r\n            T.Mod");
            viewString.Append("ifiedDateTime AS AdCampaign_ModifiedDateTime, \r\n            T.ModifiedBy AS AdCa");
            viewString.Append("mpaign_ModifiedBy, \r\n            T.AgeRangeStart AS AdCampaign_AgeRangeStart, \r\n");
            viewString.Append("            T.AgeRangeEnd AS AdCampaign_AgeRangeEnd, \r\n            T.Gender AS A");
            viewString.Append("dCampaign_Gender, \r\n            T.RejectedReason AS AdCampaign_RejectedReason, \r");
            viewString.Append("\n            T.ProjectedReach AS AdCampaign_ProjectedReach, \r\n            T.Resu");
            viewString.Append("ltClicks AS AdCampaign_ResultClicks, \r\n            T.AmountSpent AS AdCampaign_A");
            viewString.Append("mountSpent, \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.Ad");
            viewString.Append("Campaign AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaigns", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignResponses", @"
    SELECT VALUE -- Constructing AdCampaignResponses
        [DomainModels.AdCampaignResponse](T1.AdCampaignResponse_ResponseId, T1.AdCampaignResponse_CampaignId, T1.AdCampaignResponse_CreatedDateTime, T1.AdCampaignResponse_UserId, T1.AdCampaignResponse_EndUserDollarAmount)
    FROM (
        SELECT 
            T.ResponseID AS AdCampaignResponse_ResponseId, 
            T.CampaignID AS AdCampaignResponse_CampaignId, 
            T.CreatedDateTime AS AdCampaignResponse_CreatedDateTime, 
            T.UserID AS AdCampaignResponse_UserId, 
            T.EndUserDollarAmount AS AdCampaignResponse_EndUserDollarAmount, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignResponse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignTargetCriterias", @"
    SELECT VALUE -- Constructing AdCampaignTargetCriterias
        [DomainModels.AdCampaignTargetCriteria](T1.AdCampaignTargetCriteria_CriteriaId, T1.AdCampaignTargetCriteria_CampaignId, T1.AdCampaignTargetCriteria_Type, T1.AdCampaignTargetCriteria_PqId, T1.AdCampaignTargetCriteria_PqAnswerId, T1.AdCampaignTargetCriteria_SqId, T1.AdCampaignTargetCriteria_SqAnswer, T1.AdCampaignTargetCriteria_IncludeorExclude, T1.AdCampaignTargetCriteria_LanguageId)
    FROM (
        SELECT 
            T.CriteriaID AS AdCampaignTargetCriteria_CriteriaId, 
            T.CampaignID AS AdCampaignTargetCriteria_CampaignId, 
            T.Type AS AdCampaignTargetCriteria_Type, 
            T.PQID AS AdCampaignTargetCriteria_PqId, 
            T.PQAnswerID AS AdCampaignTargetCriteria_PqAnswerId, 
            T.SQID AS AdCampaignTargetCriteria_SqId, 
            T.SQAnswer AS AdCampaignTargetCriteria_SqAnswer, 
            T.IncludeorExclude AS AdCampaignTargetCriteria_IncludeorExclude, 
            T.LanguageID AS AdCampaignTargetCriteria_LanguageId, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignTargetCriteria AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignTargetLocations", @"
    SELECT VALUE -- Constructing AdCampaignTargetLocations
        [DomainModels.AdCampaignTargetLocation](T1.AdCampaignTargetLocation_Id, T1.AdCampaignTargetLocation_CampaignId, T1.AdCampaignTargetLocation_CountryId, T1.AdCampaignTargetLocation_CityId, T1.AdCampaignTargetLocation_Radius)
    FROM (
        SELECT 
            T.ID AS AdCampaignTargetLocation_Id, 
            T.CampaignID AS AdCampaignTargetLocation_CampaignId, 
            T.CountryID AS AdCampaignTargetLocation_CountryId, 
            T.CityID AS AdCampaignTargetLocation_CityId, 
            T.Radius AS AdCampaignTargetLocation_Radius, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2394);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SurveyQuestions\r\n        [DomainModels.Survey");
            viewString.Append("Question](T1.SurveyQuestion_SqId, T1.SurveyQuestion_LanguageId, T1.SurveyQuestio");
            viewString.Append("n_CountryId, T1.SurveyQuestion_Type, T1.SurveyQuestion_UserId, T1.SurveyQuestion");
            viewString.Append("_Question, T1.SurveyQuestion_Description, T1.SurveyQuestion_RepeatPeriod, T1.Sur");
            viewString.Append("veyQuestion_DisplayQuestion, T1.SurveyQuestion_StartDate, T1.SurveyQuestion_EndD");
            viewString.Append("ate, T1.SurveyQuestion_Approved, T1.SurveyQuestion_ApprovedByUserId, T1.SurveyQu");
            viewString.Append("estion_ApprovalDate, T1.SurveyQuestion_CreationDate, T1.SurveyQuestion_ModifiedD");
            viewString.Append("ate, T1.SurveyQuestion_CreatedBy, T1.SurveyQuestion_ModifiedBy, T1.SurveyQuestio");
            viewString.Append("n_LeftPicturePath, T1.SurveyQuestion_RightPicturePath, T1.SurveyQuestion_Discoun");
            viewString.Append("tVoucherApplied, T1.SurveyQuestion_VoucherCode, T1.SurveyQuestion_DiscountVouche");
            viewString.Append("rId, T1.SurveyQuestion_RejectionReason)\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.SQID AS SurveyQuestion_SqId, \r\n            T.LanguageID AS SurveyQuestion_La");
            viewString.Append("nguageId, \r\n            T.CountryID AS SurveyQuestion_CountryId, \r\n            T");
            viewString.Append(".Type AS SurveyQuestion_Type, \r\n            T.UserID AS SurveyQuestion_UserId, \r");
            viewString.Append("\n            T.Question AS SurveyQuestion_Question, \r\n            T.Description ");
            viewString.Append("AS SurveyQuestion_Description, \r\n            T.RepeatPeriod AS SurveyQuestion_Re");
            viewString.Append("peatPeriod, \r\n            T.DisplayQuestion AS SurveyQuestion_DisplayQuestion, \r");
            viewString.Append("\n            T.StartDate AS SurveyQuestion_StartDate, \r\n            T.EndDate AS");
            viewString.Append(" SurveyQuestion_EndDate, \r\n            T.Approved AS SurveyQuestion_Approved, \r\n");
            viewString.Append("            T.ApprovedByUserID AS SurveyQuestion_ApprovedByUserId, \r\n           ");
            viewString.Append(" T.ApprovalDate AS SurveyQuestion_ApprovalDate, \r\n            T.CreationDate AS ");
            viewString.Append("SurveyQuestion_CreationDate, \r\n            T.ModifiedDate AS SurveyQuestion_Modi");
            viewString.Append("fiedDate, \r\n            T.CreatedBy AS SurveyQuestion_CreatedBy, \r\n            T");
            viewString.Append(".ModifiedBy AS SurveyQuestion_ModifiedBy, \r\n            T.LeftPicturePath AS Sur");
            viewString.Append("veyQuestion_LeftPicturePath, \r\n            T.RightPicturePath AS SurveyQuestion_");
            viewString.Append("RightPicturePath, \r\n            T.DiscountVoucherApplied AS SurveyQuestion_Disco");
            viewString.Append("untVoucherApplied, \r\n            T.VoucherCode AS SurveyQuestion_VoucherCode, \r\n");
            viewString.Append("            T.DiscountVoucherID AS SurveyQuestion_DiscountVoucherId, \r\n         ");
            viewString.Append("   T.RejectionReason AS SurveyQuestion_RejectionReason, \r\n            True AS _f");
            viewString.Append("rom0\r\n        FROM SMDModelStoreContainer.SurveyQuestion AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionTargetCriterias", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetCriterias
        [DomainModels.SurveyQuestionTargetCriteria](T1.SurveyQuestionTargetCriteria_Id, T1.SurveyQuestionTargetCriteria_SqId, T1.SurveyQuestionTargetCriteria_Type, T1.SurveyQuestionTargetCriteria_PqId, T1.SurveyQuestionTargetCriteria_PqAnswerId, T1.SurveyQuestionTargetCriteria_LinkedSqId, T1.SurveyQuestionTargetCriteria_LinkedSqAnswer, T1.SurveyQuestionTargetCriteria_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS SurveyQuestionTargetCriteria_Id, 
            T.SQID AS SurveyQuestionTargetCriteria_SqId, 
            T.Type AS SurveyQuestionTargetCriteria_Type, 
            T.PQID AS SurveyQuestionTargetCriteria_PqId, 
            T.PQAnswerID AS SurveyQuestionTargetCriteria_PqAnswerId, 
            T.LinkedSQID AS SurveyQuestionTargetCriteria_LinkedSqId, 
            T.LinkedSQAnswer AS SurveyQuestionTargetCriteria_LinkedSqAnswer, 
            T.IncludeorExclude AS SurveyQuestionTargetCriteria_IncludeorExclude, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionTargetCriteria AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionTargetLocations", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetLocations
        [DomainModels.SurveyQuestionTargetLocation](T1.SurveyQuestionTargetLocation_Id, T1.SurveyQuestionTargetLocation_SqId, T1.SurveyQuestionTargetLocation_CountryId, T1.SurveyQuestionTargetLocation_CityId, T1.SurveyQuestionTargetLocation_Radius)
    FROM (
        SELECT 
            T.ID AS SurveyQuestionTargetLocation_Id, 
            T.SQID AS SurveyQuestionTargetLocation_SqId, 
            T.CountryID AS SurveyQuestionTargetLocation_CountryId, 
            T.CityID AS SurveyQuestionTargetLocation_CityId, 
            T.Radius AS SurveyQuestionTargetLocation_Radius, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AspNetUserRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AspNetUserRoles", @"
    SELECT VALUE -- Constructing AspNetUserRoles
        [DomainModels.AspNetUserRoles](T3.AspNetUserRoles_AspNetRoles, T3.AspNetUserRoles_AspNetUsers)
    FROM (
        SELECT -- Constructing AspNetRoles
            CreateRef(BaseDbContext.Roles, row(T2.AspNetUserRoles_AspNetRoles_Id), [DomainModels.Role]) AS AspNetUserRoles_AspNetRoles, 
            T2.AspNetUserRoles_AspNetUsers
        FROM (
            SELECT -- Constructing AspNetUsers
                T1.AspNetUserRoles_AspNetRoles_Id, 
                CreateRef(BaseDbContext.Users, row(T1.AspNetUserRoles_AspNetUsers_Id), [DomainModels.User]) AS AspNetUserRoles_AspNetUsers
            FROM (
                SELECT 
                    T.RoleId AS AspNetUserRoles_AspNetRoles_Id, 
                    T.UserId AS AspNetUserRoles_AspNetUsers_Id, 
                    True AS _from0
                FROM SMDModelStoreContainer.AspNetUserRoles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SystemMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SystemMails", @"
    SELECT VALUE -- Constructing SystemMails
        [SMDModel.Store.SystemMails](T1.SystemMails_MailID, T1.SystemMails_Title, T1.SystemMails_FromName, T1.SystemMails_fromEmail, T1.SystemMails_Subject, T1.SystemMails_body, T1.SystemMails_EmailTarget)
    FROM (
        SELECT 
            T.MailId AS SystemMails_MailID, 
            T.Title AS SystemMails_Title, 
            T.FromName AS SystemMails_FromName, 
            T.FromEmail AS SystemMails_fromEmail, 
            T.Subject AS SystemMails_Subject, 
            T.Body AS SystemMails_body, 
            T.EmailTarget AS SystemMails_EmailTarget, 
            True AS _from0
        FROM BaseDbContext.SystemMails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SystemMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SystemMails", @"
    SELECT VALUE -- Constructing SystemMails
        [DomainModels.SystemMail](T1.SystemMail_MailId, T1.SystemMail_Title, T1.SystemMail_FromName, T1.SystemMail_FromEmail, T1.SystemMail_Subject, T1.SystemMail_Body, T1.SystemMail_EmailTarget)
    FROM (
        SELECT 
            T.MailID AS SystemMail_MailId, 
            T.Title AS SystemMail_Title, 
            T.FromName AS SystemMail_FromName, 
            T.fromEmail AS SystemMail_FromEmail, 
            T.Subject AS SystemMail_Subject, 
            T.body AS SystemMail_Body, 
            T.EmailTarget AS SystemMail_EmailTarget, 
            True AS _from0
        FROM SMDModelStoreContainer.SystemMails AS T
    ) AS T1");
        }
    }
}


