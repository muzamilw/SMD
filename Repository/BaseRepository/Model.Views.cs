//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsA735B51350C307DA3FC854E0C33CD2B8DED05C32F3BAEDEECC3378A239745E0B))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsA735B51350C307DA3FC854E0C33CD2B8DED05C32F3BAEDEECC3378A239745E0B : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsA735B51350C307DA3FC854E0C33CD2B8DED05C32F3BAEDEECC3378A239745E0B()
        {
            this.EdmEntityContainerName = "BaseDbContext";
            this.StoreEntityContainerName = "SMDModelStoreContainer";
            this.HashOverMappingClosure = "e95a76e647d9b275578ce2703d49447fdc0be85737744c16eff0d287bb5f50eb";
            this.HashOverAllExtentViews = "b4c8e599d9eed7dcbd2b46c52030c05d62beb7168784480f5293f5d341c38ce5";
            this.ViewCount = 142;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetRoles", @"
    SELECT VALUE -- Constructing AspNetRoles
        [SMDModel.Store.AspNetRoles](T1.AspNetRoles_Id, T1.AspNetRoles_Name)
    FROM (
        SELECT 
            T.Id AS AspNetRoles_Id, 
            T.Name AS AspNetRoles_Name, 
            True AS _from0
        FROM BaseDbContext.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserLogins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserLogins", @"
    SELECT VALUE -- Constructing AspNetUserLogins
        [SMDModel.Store.AspNetUserLogins](T1.AspNetUserLogins_LoginProvider, T1.AspNetUserLogins_ProviderKey, T1.AspNetUserLogins_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS AspNetUserLogins_LoginProvider, 
            T.ProviderKey AS AspNetUserLogins_ProviderKey, 
            T.UserId AS AspNetUserLogins_UserId, 
            True AS _from0
        FROM BaseDbContext.UserLogins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3052);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProfileQuestion\r\n        [SMDModel.Store.Prof");
            viewString.Append("ileQuestion](T1.ProfileQuestion_PQID, T1.ProfileQuestion_LanguageID, T1.ProfileQ");
            viewString.Append("uestion_CountryID, T1.ProfileQuestion_ProfileGroupID, T1.ProfileQuestion_Priorit");
            viewString.Append("y, T1.ProfileQuestion_Type, T1.ProfileQuestion_Question, T1.ProfileQuestion_Refr");
            viewString.Append("eshTime, T1.ProfileQuestion_SkippedCount, T1.ProfileQuestion_CreationDate, T1.Pr");
            viewString.Append("ofileQuestion_CreatedBy, T1.ProfileQuestion_ModifiedDate, T1.ProfileQuestion_Mod");
            viewString.Append("ifiedBy, T1.ProfileQuestion_HasLinkedQuestions, T1.ProfileQuestion_PenalityForNo");
            viewString.Append("tAnswering, T1.ProfileQuestion_Status, T1.ProfileQuestion_CompanyId, T1.ProfileQ");
            viewString.Append("uestion_AnswerNeeded, T1.ProfileQuestion_AsnswerCount, T1.ProfileQuestion_Submis");
            viewString.Append("sionDateTime, T1.ProfileQuestion_AgeRangeStart, T1.ProfileQuestion_AgeRangeEnd, ");
            viewString.Append("T1.ProfileQuestion_Gender, T1.ProfileQuestion_Approved, T1.ProfileQuestion_Appro");
            viewString.Append("vedByUserID, T1.ProfileQuestion_ApprovalDate, T1.ProfileQuestion_RejectionReason");
            viewString.Append(", T1.ProfileQuestion_UserID, T1.ProfileQuestion_AmountCharged, T1.ProfileQuestio");
            viewString.Append("n_StartDate, T1.ProfileQuestion_EndDate)\r\n    FROM (\r\n        SELECT \r\n         ");
            viewString.Append("   T.PqId AS ProfileQuestion_PQID, \r\n            T.LanguageId AS ProfileQuestion");
            viewString.Append("_LanguageID, \r\n            T.CountryId AS ProfileQuestion_CountryID, \r\n         ");
            viewString.Append("   T.ProfileGroupId AS ProfileQuestion_ProfileGroupID, \r\n            T.Priority ");
            viewString.Append("AS ProfileQuestion_Priority, \r\n            T.Type AS ProfileQuestion_Type, \r\n   ");
            viewString.Append("         T.Question AS ProfileQuestion_Question, \r\n            T.RefreshTime AS ");
            viewString.Append("ProfileQuestion_RefreshTime, \r\n            T.SkippedCount AS ProfileQuestion_Ski");
            viewString.Append("ppedCount, \r\n            T.CreationDate AS ProfileQuestion_CreationDate, \r\n     ");
            viewString.Append("       T.CreatedBy AS ProfileQuestion_CreatedBy, \r\n            T.ModifiedDate AS");
            viewString.Append(" ProfileQuestion_ModifiedDate, \r\n            T.ModifiedBy AS ProfileQuestion_Mod");
            viewString.Append("ifiedBy, \r\n            T.HasLinkedQuestions AS ProfileQuestion_HasLinkedQuestion");
            viewString.Append("s, \r\n            T.PenalityForNotAnswering AS ProfileQuestion_PenalityForNotAnsw");
            viewString.Append("ering, \r\n            T.Status AS ProfileQuestion_Status, \r\n            T.Company");
            viewString.Append("Id AS ProfileQuestion_CompanyId, \r\n            T.AnswerNeeded AS ProfileQuestion");
            viewString.Append("_AnswerNeeded, \r\n            T.AsnswerCount AS ProfileQuestion_AsnswerCount, \r\n ");
            viewString.Append("           T.SubmissionDateTime AS ProfileQuestion_SubmissionDateTime, \r\n       ");
            viewString.Append("     T.AgeRangeStart AS ProfileQuestion_AgeRangeStart, \r\n            T.AgeRangeE");
            viewString.Append("nd AS ProfileQuestion_AgeRangeEnd, \r\n            T.Gender AS ProfileQuestion_Gen");
            viewString.Append("der, \r\n            T.Approved AS ProfileQuestion_Approved, \r\n            T.Appro");
            viewString.Append("vedByUserID AS ProfileQuestion_ApprovedByUserID, \r\n            T.ApprovalDate AS");
            viewString.Append(" ProfileQuestion_ApprovalDate, \r\n            T.RejectionReason AS ProfileQuestio");
            viewString.Append("n_RejectionReason, \r\n            T.UserID AS ProfileQuestion_UserID, \r\n         ");
            viewString.Append("   T.AmountCharged AS ProfileQuestion_AmountCharged, \r\n            T.StartDate A");
            viewString.Append("S ProfileQuestion_StartDate, \r\n            T.EndDate AS ProfileQuestion_EndDate,");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM BaseDbContext.ProfileQuestions AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestion", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionAnswer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionAnswer", "\r\n    SELECT VALUE -- Constructing ProfileQuestionAnswer\r\n        [SMDModel.Store" +
                    ".ProfileQuestionAnswer](T1.ProfileQuestionAnswer_PQAnswerID, T1.ProfileQuestionA" +
                    "nswer_PQID, T1.ProfileQuestionAnswer_type, T1.ProfileQuestionAnswer_AnswerString" +
                    ", T1.ProfileQuestionAnswer_ImagePath, T1.ProfileQuestionAnswer_SortOrder, T1.Pro" +
                    "fileQuestionAnswer_LinkedQuestion1ID, T1.ProfileQuestionAnswer_LinkedQuestion2ID" +
                    ", T1.ProfileQuestionAnswer_LinkedQuestion3ID, T1.ProfileQuestionAnswer_LinkedQue" +
                    "stion4ID, T1.ProfileQuestionAnswer_LinkedQuestion5ID, T1.ProfileQuestionAnswer_L" +
                    "inkedQuestion6ID, T1.ProfileQuestionAnswer_Status)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.PqAnswerId AS ProfileQuestionAnswer_PQAnswerID, \r\n            T.P" +
                    "qId AS ProfileQuestionAnswer_PQID, \r\n            T.Type AS ProfileQuestionAnswer" +
                    "_type, \r\n            T.AnswerString AS ProfileQuestionAnswer_AnswerString, \r\n   " +
                    "         T.ImagePath AS ProfileQuestionAnswer_ImagePath, \r\n            T.SortOrd" +
                    "er AS ProfileQuestionAnswer_SortOrder, \r\n            T.LinkedQuestion1Id AS Prof" +
                    "ileQuestionAnswer_LinkedQuestion1ID, \r\n            T.LinkedQuestion2Id AS Profil" +
                    "eQuestionAnswer_LinkedQuestion2ID, \r\n            T.LinkedQuestion3Id AS ProfileQ" +
                    "uestionAnswer_LinkedQuestion3ID, \r\n            T.LinkedQuestion4Id AS ProfileQue" +
                    "stionAnswer_LinkedQuestion4ID, \r\n            T.LinkedQuestion5Id AS ProfileQuest" +
                    "ionAnswer_LinkedQuestion5ID, \r\n            T.LinkedQuestion6Id AS ProfileQuestio" +
                    "nAnswer_LinkedQuestion6ID, \r\n            T.Status AS ProfileQuestionAnswer_Statu" +
                    "s, \r\n            True AS _from0\r\n        FROM BaseDbContext.ProfileQuestionAnswe" +
                    "rs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionGroup", @"
    SELECT VALUE -- Constructing ProfileQuestionGroup
        [SMDModel.Store.ProfileQuestionGroup](T1.ProfileQuestionGroup_ProfileGroupID, T1.ProfileQuestionGroup_ProfileGroupName, T1.ProfileQuestionGroup_ImagePath, T1.ProfileQuestionGroup_LangaugeID, T1.ProfileQuestionGroup_CountryID)
    FROM (
        SELECT 
            T.ProfileGroupId AS ProfileQuestionGroup_ProfileGroupID, 
            T.ProfileGroupName AS ProfileQuestionGroup_ProfileGroupName, 
            T.ImagePath AS ProfileQuestionGroup_ImagePath, 
            T.LangaugeId AS ProfileQuestionGroup_LangaugeID, 
            T.CountryId AS ProfileQuestionGroup_CountryID, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserClaims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserClaims", @"
    SELECT VALUE -- Constructing AspNetUserClaims
        [SMDModel.Store.AspNetUserClaims](T1.AspNetUserClaims_Id, T1.AspNetUserClaims_UserId, T1.AspNetUserClaims_ClaimType, T1.AspNetUserClaims_ClaimValue)
    FROM (
        SELECT 
            T.Id AS AspNetUserClaims_Id, 
            T.UserId AS AspNetUserClaims_UserId, 
            T.ClaimType AS AspNetUserClaims_ClaimType, 
            T.ClaimValue AS AspNetUserClaims_ClaimValue, 
            True AS _from0
        FROM BaseDbContext.UserClaims AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Country", @"
    SELECT VALUE -- Constructing Country
        [SMDModel.Store.Country](T1.Country_CountryID, T1.Country_CountryName, T1.Country_CountryCode, T1.Country_CurrencyID, T1.Country_CountryPhoneCode)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryID, 
            T.CountryName AS Country_CountryName, 
            T.CountryCode AS Country_CountryCode, 
            T.CurrencyID AS Country_CurrencyID, 
            T.CountryPhoneCode AS Country_CountryPhoneCode, 
            True AS _from0
        FROM BaseDbContext.Countries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Language
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Language", @"
    SELECT VALUE -- Constructing Language
        [SMDModel.Store.Language](T1.Language_LanguageID, T1.Language_LanguageName, T1.Language_NativeName)
    FROM (
        SELECT 
            T.LanguageId AS Language_LanguageID, 
            T.LanguageName AS Language_LanguageName, 
            T.NativeName AS Language_NativeName, 
            True AS _from0
        FROM BaseDbContext.Languages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignTargetLocation", @"
    SELECT VALUE -- Constructing AdCampaignTargetLocation
        [SMDModel.Store.AdCampaignTargetLocation](T1.AdCampaignTargetLocation_ID, T1.AdCampaignTargetLocation_CampaignID, T1.AdCampaignTargetLocation_CountryID, T1.AdCampaignTargetLocation_CityID, T1.AdCampaignTargetLocation_Radius, T1.AdCampaignTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.Id AS AdCampaignTargetLocation_ID, 
            T.CampaignId AS AdCampaignTargetLocation_CampaignID, 
            T.CountryId AS AdCampaignTargetLocation_CountryID, 
            T.CityId AS AdCampaignTargetLocation_CityID, 
            T.Radius AS AdCampaignTargetLocation_Radius, 
            T.IncludeorExclude AS AdCampaignTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM BaseDbContext.AdCampaignTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionTargetCriteria", "\r\n    SELECT VALUE -- Constructing SurveyQuestionTargetCriteria\r\n        [SMDMode" +
                    "l.Store.SurveyQuestionTargetCriteria](T1.SurveyQuestionTargetCriteria_ID, T1.Sur" +
                    "veyQuestionTargetCriteria_SQID, T1.SurveyQuestionTargetCriteria_Type, T1.SurveyQ" +
                    "uestionTargetCriteria_PQID, T1.SurveyQuestionTargetCriteria_PQAnswerID, T1.Surve" +
                    "yQuestionTargetCriteria_LinkedSQID, T1.SurveyQuestionTargetCriteria_LinkedSQAnsw" +
                    "er, T1.SurveyQuestionTargetCriteria_IncludeorExclude, T1.SurveyQuestionTargetCri" +
                    "teria_LanguageID, T1.SurveyQuestionTargetCriteria_IndustryID, T1.SurveyQuestionT" +
                    "argetCriteria_EducationID, T1.SurveyQuestionTargetCriteria_QuizCampaignId, T1.Su" +
                    "rveyQuestionTargetCriteria_QuizAnswerId)\r\n    FROM (\r\n        SELECT \r\n         " +
                    "   T.Id AS SurveyQuestionTargetCriteria_ID, \r\n            T.SqId AS SurveyQuesti" +
                    "onTargetCriteria_SQID, \r\n            T.Type AS SurveyQuestionTargetCriteria_Type" +
                    ", \r\n            T.PqId AS SurveyQuestionTargetCriteria_PQID, \r\n            T.PqA" +
                    "nswerId AS SurveyQuestionTargetCriteria_PQAnswerID, \r\n            T.LinkedSqId A" +
                    "S SurveyQuestionTargetCriteria_LinkedSQID, \r\n            T.LinkedSqAnswer AS Sur" +
                    "veyQuestionTargetCriteria_LinkedSQAnswer, \r\n            T.IncludeorExclude AS Su" +
                    "rveyQuestionTargetCriteria_IncludeorExclude, \r\n            T.LanguageId AS Surve" +
                    "yQuestionTargetCriteria_LanguageID, \r\n            T.IndustryId AS SurveyQuestion" +
                    "TargetCriteria_IndustryID, \r\n            T.EducationId AS SurveyQuestionTargetCr" +
                    "iteria_EducationID, \r\n            T.QuizCampaignId AS SurveyQuestionTargetCriter" +
                    "ia_QuizCampaignId, \r\n            T.QuizAnswerId AS SurveyQuestionTargetCriteria_" +
                    "QuizAnswerId, \r\n            True AS _from0\r\n        FROM BaseDbContext.SurveyQue" +
                    "stionTargetCriterias AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionTargetLocation", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetLocation
        [SMDModel.Store.SurveyQuestionTargetLocation](T1.SurveyQuestionTargetLocation_ID, T1.SurveyQuestionTargetLocation_SQID, T1.SurveyQuestionTargetLocation_CountryID, T1.SurveyQuestionTargetLocation_CityID, T1.SurveyQuestionTargetLocation_Radius, T1.SurveyQuestionTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.Id AS SurveyQuestionTargetLocation_ID, 
            T.SqId AS SurveyQuestionTargetLocation_SQID, 
            T.CountryId AS SurveyQuestionTargetLocation_CountryID, 
            T.CityId AS SurveyQuestionTargetLocation_CityID, 
            T.Radius AS SurveyQuestionTargetLocation_Radius, 
            T.IncludeorExclude AS SurveyQuestionTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Industry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Industry", @"
    SELECT VALUE -- Constructing Industry
        [SMDModel.Store.Industry](T1.Industry_IndustryID, T1.Industry_IndustryName, T1.Industry_Status)
    FROM (
        SELECT 
            T.IndustryId AS Industry_IndustryID, 
            T.IndustryName AS Industry_IndustryName, 
            T.Status AS Industry_Status, 
            True AS _from0
        FROM BaseDbContext.Industries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Currency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Currency", @"
    SELECT VALUE -- Constructing Currency
        [SMDModel.Store.Currency](T1.Currency_CurrencyID, T1.Currency_Name, T1.Currency_CurrencyCode, T1.Currency_SMDCreditRatio, T1.Currency_CurrencySymbol)
    FROM (
        SELECT 
            T.CurrencyId AS Currency_CurrencyID, 
            T.Name AS Currency_Name, 
            T.CurrencyCode AS Currency_CurrencyCode, 
            T.SMDCreditRatio AS Currency_SMDCreditRatio, 
            T.CurrencySymbol AS Currency_CurrencySymbol, 
            True AS _from0
        FROM BaseDbContext.Currencies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Transaction
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Transaction", "\r\n    SELECT VALUE -- Constructing Transaction\r\n        [SMDModel.Store.Transacti" +
                    "on](T1.Transaction_TxID, T1.Transaction_TransactionDate, T1.Transaction_Type, T1" +
                    ".Transaction_DebitCredit, T1.Transaction_CreditAmount, T1.Transaction_DebitAmoun" +
                    "t, T1.Transaction_AccountID, T1.Transaction_TaxPerc, T1.Transaction_TaxValue, T1" +
                    ".Transaction_AdCampaignID, T1.Transaction_SQID, T1.Transaction_isProcessed, T1.T" +
                    "ransaction_CurrencyID, T1.Transaction_CurrencyRateID, T1.Transaction_Sequence, T" +
                    "1.Transaction_CouponId, T1.Transaction_AccountBalance, T1.Transaction_PQID)\r\n   " +
                    " FROM (\r\n        SELECT \r\n            T.TxId AS Transaction_TxID, \r\n            " +
                    "T.TransactionDate AS Transaction_TransactionDate, \r\n            T.Type AS Transa" +
                    "ction_Type, \r\n            T.DebitCredit AS Transaction_DebitCredit, \r\n          " +
                    "  T.CreditAmount AS Transaction_CreditAmount, \r\n            T.DebitAmount AS Tra" +
                    "nsaction_DebitAmount, \r\n            T.AccountId AS Transaction_AccountID, \r\n    " +
                    "        T.TaxPerc AS Transaction_TaxPerc, \r\n            T.TaxValue AS Transactio" +
                    "n_TaxValue, \r\n            T.AdCampaignId AS Transaction_AdCampaignID, \r\n        " +
                    "    T.SQId AS Transaction_SQID, \r\n            T.isProcessed AS Transaction_isPro" +
                    "cessed, \r\n            T.CurrencyId AS Transaction_CurrencyID, \r\n            T.Cu" +
                    "rrencyRateId AS Transaction_CurrencyRateID, \r\n            T.Sequence AS Transact" +
                    "ion_Sequence, \r\n            T.CouponId AS Transaction_CouponId, \r\n            T." +
                    "AccountBalance AS Transaction_AccountBalance, \r\n            T.PQID AS Transactio" +
                    "n_PQID, \r\n            True AS _from0\r\n        FROM BaseDbContext.Transactions AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.InvoiceDetail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.InvoiceDetail", @"
    SELECT VALUE -- Constructing InvoiceDetail
        [SMDModel.Store.InvoiceDetail](T1.InvoiceDetail_InvoiceDetailId, T1.InvoiceDetail_InvoiceId, T1.InvoiceDetail_ItemName, T1.InvoiceDetail_ItemTax, T1.InvoiceDetail_ItemAmount, T1.InvoiceDetail_ItemGrossAmount, T1.InvoiceDetail_ItemDescription, T1.InvoiceDetail_CampaignId, T1.InvoiceDetail_SQId, T1.InvoiceDetail_ProductId, T1.InvoiceDetail_PQID, T1.InvoiceDetail_CouponID)
    FROM (
        SELECT 
            T.InvoiceDetailId AS InvoiceDetail_InvoiceDetailId, 
            T.InvoiceId AS InvoiceDetail_InvoiceId, 
            T.ItemName AS InvoiceDetail_ItemName, 
            T.ItemTax AS InvoiceDetail_ItemTax, 
            T.ItemAmount AS InvoiceDetail_ItemAmount, 
            T.ItemGrossAmount AS InvoiceDetail_ItemGrossAmount, 
            T.ItemDescription AS InvoiceDetail_ItemDescription, 
            T.CampaignId AS InvoiceDetail_CampaignId, 
            T.SqId AS InvoiceDetail_SQId, 
            T.ProductId AS InvoiceDetail_ProductId, 
            T.PQID AS InvoiceDetail_PQID, 
            T.CouponID AS InvoiceDetail_CouponID, 
            True AS _from0
        FROM BaseDbContext.InvoiceDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Tax
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Tax", @"
    SELECT VALUE -- Constructing Tax
        [SMDModel.Store.Tax](T1.Tax_TaxId, T1.Tax_TaxName, T1.Tax_TaxValue, T1.Tax_CountryId)
    FROM (
        SELECT 
            T.TaxId AS Tax_TaxId, 
            T.TaxName AS Tax_TaxName, 
            T.TaxValue AS Tax_TaxValue, 
            T.CountryId AS Tax_CountryId, 
            True AS _from0
        FROM BaseDbContext.Taxes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Education
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Education", @"
    SELECT VALUE -- Constructing Education
        [SMDModel.Store.Education](T1.Education_EducationId, T1.Education_Title, T1.Education_Status)
    FROM (
        SELECT 
            T.EducationId AS Education_EducationId, 
            T.Title AS Education_Title, 
            T.Status AS Education_Status, 
            True AS _from0
        FROM BaseDbContext.Educations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2176);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Products\r\n        [SMDModel.Store.Products](T");
            viewString.Append("1.Products_ProductID, T1.Products_CountryID, T1.Products_CurrencyID, T1.Products");
            viewString.Append("_ProductName, T1.Products_IsActive, T1.Products_SetupPrice, T1.Products_ClickFee");
            viewString.Append("Percentage, T1.Products_AgeClausePrice, T1.Products_AffiliatePercentage, T1.Prod");
            viewString.Append("ucts_ProductCode, T1.Products_GenderClausePrice, T1.Products_LocationClausePrice");
            viewString.Append(", T1.Products_OtherClausePrice, T1.Products_ProfessionClausePrice, T1.Products_E");
            viewString.Append("ducationClausePrice, T1.Products_BuyItClausePrice, T1.Products_QuizQuestionClaus");
            viewString.Append("ePrice, T1.Products_TenDayDeliveryClausePrice, T1.Products_FiveDayDeliveryClause");
            viewString.Append("Price, T1.Products_ThreeDayDeliveryClausePrice, T1.Products_VoucherClausePrice)\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.ProductId AS Products_ProductID, \r\n ");
            viewString.Append("           T.CountryId AS Products_CountryID, \r\n            T.CurrencyId AS Prod");
            viewString.Append("ucts_CurrencyID, \r\n            T.ProductName AS Products_ProductName, \r\n        ");
            viewString.Append("    T.IsActive AS Products_IsActive, \r\n            T.SetupPrice AS Products_Setu");
            viewString.Append("pPrice, \r\n            T.ClickFeePercentage AS Products_ClickFeePercentage, \r\n   ");
            viewString.Append("         T.AgeClausePrice AS Products_AgeClausePrice, \r\n            T.AffiliateP");
            viewString.Append("ercentage AS Products_AffiliatePercentage, \r\n            T.ProductCode AS Produc");
            viewString.Append("ts_ProductCode, \r\n            T.GenderClausePrice AS Products_GenderClausePrice,");
            viewString.Append(" \r\n            T.LocationClausePrice AS Products_LocationClausePrice, \r\n        ");
            viewString.Append("    T.OtherClausePrice AS Products_OtherClausePrice, \r\n            T.ProfessionC");
            viewString.Append("lausePrice AS Products_ProfessionClausePrice, \r\n            T.EducationClausePri");
            viewString.Append("ce AS Products_EducationClausePrice, \r\n            T.BuyItClausePrice AS Product");
            viewString.Append("s_BuyItClausePrice, \r\n            T.QuizQuestionClausePrice AS Products_QuizQues");
            viewString.Append("tionClausePrice, \r\n            T.TenDayDeliveryClausePrice AS Products_TenDayDel");
            viewString.Append("iveryClausePrice, \r\n            T.FiveDayDeliveryClausePrice AS Products_FiveDay");
            viewString.Append("DeliveryClausePrice, \r\n            T.ThreeDayDeliveryClausePrice AS Products_Thr");
            viewString.Append("eeDayDeliveryClausePrice, \r\n            T.VoucherClausePrice AS Products_Voucher");
            viewString.Append("ClausePrice, \r\n            True AS _from0\r\n        FROM BaseDbContext.Products A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Products", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Game
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Game", @"
    SELECT VALUE -- Constructing Game
        [SMDModel.Store.Game](T1.Game_GameId, T1.Game_GameName, T1.Game_Status, T1.Game_AgeRangeStart, T1.Game_AgeRangeEnd, T1.Game_GameType, T1.Game_Complexity, T1.Game_GameUrl, T1.Game_GameSmallImage, T1.Game_GameLargeImage, T1.Game_GameInstructions)
    FROM (
        SELECT 
            T.GameId AS Game_GameId, 
            T.GameName AS Game_GameName, 
            T.Status AS Game_Status, 
            T.AgeRangeStart AS Game_AgeRangeStart, 
            T.AgeRangeEnd AS Game_AgeRangeEnd, 
            T.GameType AS Game_GameType, 
            T.Complexity AS Game_Complexity, 
            T.GameUrl AS Game_GameUrl, 
            T.GameSmallImage AS Game_GameSmallImage, 
            T.GameLargeImage AS Game_GameLargeImage, 
            T.GameInstructions AS Game_GameInstructions, 
            True AS _from0
        FROM BaseDbContext.Games AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.TransactionLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.TransactionLog", @"
    SELECT VALUE -- Constructing TransactionLog
        [SMDModel.Store.TransactionLog](T1.TransactionLog_TransactionLogId, T1.TransactionLog_TxId, T1.TransactionLog_LogDate, T1.TransactionLog_Amount, T1.TransactionLog_Type, T1.TransactionLog_FromUser, T1.TransactionLog_ToUser, T1.TransactionLog_IsCompleted, T1.TransactionLog_Description)
    FROM (
        SELECT 
            T.TransactionLogId AS TransactionLog_TransactionLogId, 
            T.TxId AS TransactionLog_TxId, 
            T.LogDate AS TransactionLog_LogDate, 
            T.Amount AS TransactionLog_Amount, 
            T.Type AS TransactionLog_Type, 
            T.FromUser AS TransactionLog_FromUser, 
            T.ToUser AS TransactionLog_ToUser, 
            T.IsCompleted AS TransactionLog_IsCompleted, 
            T.Description AS TransactionLog_Description, 
            True AS _from0
        FROM BaseDbContext.TransactionLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Account", @"
    SELECT VALUE -- Constructing Account
        [SMDModel.Store.Account](T1.Account_AccountId, T1.Account_AccountName, T1.Account_AccountType, T1.Account_AccountBalance, T1.Account_CompanyId)
    FROM (
        SELECT 
            T.AccountId AS Account_AccountId, 
            T.AccountName AS Account_AccountName, 
            T.AccountType AS Account_AccountType, 
            T.AccountBalance AS Account_AccountBalance, 
            T.CompanyId AS Account_CompanyId, 
            True AS _from0
        FROM BaseDbContext.Accounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Invoice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Invoice", @"
    SELECT VALUE -- Constructing Invoice
        [SMDModel.Store.Invoice](T1.Invoice_InvoiceId, T1.Invoice_InvoiceDate, T1.Invoice_InvoiceDueDate, T1.Invoice_TaxPercentage, T1.Invoice_Total, T1.Invoice_NetTotal, T1.Invoice_TaxValue, T1.Invoice_CompanyName, T1.Invoice_Address1, T1.Invoice_Address2, T1.Invoice_City, T1.Invoice_State, T1.Invoice_Country, T1.Invoice_ZipCode, T1.Invoice_CreditCardRef, T1.Invoice_CompanyId, T1.Invoice_StripeReceiptNo, T1.Invoice_StripeInvoiceId)
    FROM (
        SELECT 
            T.InvoiceId AS Invoice_InvoiceId, 
            T.InvoiceDate AS Invoice_InvoiceDate, 
            T.InvoiceDueDate AS Invoice_InvoiceDueDate, 
            T.TaxPercentage AS Invoice_TaxPercentage, 
            T.Total AS Invoice_Total, 
            T.NetTotal AS Invoice_NetTotal, 
            T.TaxValue AS Invoice_TaxValue, 
            T.CompanyName AS Invoice_CompanyName, 
            T.Address1 AS Invoice_Address1, 
            T.Address2 AS Invoice_Address2, 
            T.City AS Invoice_City, 
            T.State AS Invoice_State, 
            T.Country AS Invoice_Country, 
            T.ZipCode AS Invoice_ZipCode, 
            T.CreditCardRef AS Invoice_CreditCardRef, 
            T.CompanyId AS Invoice_CompanyId, 
            T.StripeReceiptNo AS Invoice_StripeReceiptNo, 
            T.StripeInvoiceId AS Invoice_StripeInvoiceId, 
            True AS _from0
        FROM BaseDbContext.Invoices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3557);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SurveyQuestion\r\n        [SMDModel.Store.Surve");
            viewString.Append("yQuestion](T1.SurveyQuestion_SQID, T1.SurveyQuestion_LanguageID, T1.SurveyQuesti");
            viewString.Append("on_CountryID, T1.SurveyQuestion_Type, T1.SurveyQuestion_UserID, T1.SurveyQuestio");
            viewString.Append("n_Status, T1.SurveyQuestion_Question, T1.SurveyQuestion_Description, T1.SurveyQu");
            viewString.Append("estion_RepeatPeriod, T1.SurveyQuestion_DisplayQuestion, T1.SurveyQuestion_StartD");
            viewString.Append("ate, T1.SurveyQuestion_EndDate, T1.SurveyQuestion_Approved, T1.SurveyQuestion_Ap");
            viewString.Append("provedByUserID, T1.SurveyQuestion_ApprovalDate, T1.SurveyQuestion_CreationDate, ");
            viewString.Append("T1.SurveyQuestion_ModifiedDate, T1.SurveyQuestion_CreatedBy, T1.SurveyQuestion_M");
            viewString.Append("odifiedBy, T1.SurveyQuestion_LeftPicturePath, T1.SurveyQuestion_RightPicturePath");
            viewString.Append(", T1.SurveyQuestion_DiscountVoucherApplied, T1.SurveyQuestion_VoucherCode, T1.Su");
            viewString.Append("rveyQuestion_DiscountVoucherID, T1.SurveyQuestion_RejectionReason, T1.SurveyQues");
            viewString.Append("tion_ProjectedReach, T1.SurveyQuestion_ResultClicks, T1.SurveyQuestion_AgeRangeS");
            viewString.Append("tart, T1.SurveyQuestion_AgeRangeEnd, T1.SurveyQuestion_Gender, T1.SurveyQuestion");
            viewString.Append("_SubmissionDate, T1.SurveyQuestion_ParentSurveyId, T1.SurveyQuestion_Priority, T");
            viewString.Append("1.SurveyQuestion_CompanyId, T1.SurveyQuestion_AnswerNeeded, T1.SurveyQuestion_Am");
            viewString.Append("ountCharged, T1.SurveyQuestion_IsUseFilter)\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.SqId AS SurveyQuestion_SQID, \r\n            T.LanguageId AS SurveyQuestio");
            viewString.Append("n_LanguageID, \r\n            T.CountryId AS SurveyQuestion_CountryID, \r\n         ");
            viewString.Append("   T.Type AS SurveyQuestion_Type, \r\n            T.UserId AS SurveyQuestion_UserI");
            viewString.Append("D, \r\n            T.Status AS SurveyQuestion_Status, \r\n            T.Question AS ");
            viewString.Append("SurveyQuestion_Question, \r\n            T.Description AS SurveyQuestion_Descripti");
            viewString.Append("on, \r\n            T.RepeatPeriod AS SurveyQuestion_RepeatPeriod, \r\n            T");
            viewString.Append(".DisplayQuestion AS SurveyQuestion_DisplayQuestion, \r\n            T.StartDate AS");
            viewString.Append(" SurveyQuestion_StartDate, \r\n            T.EndDate AS SurveyQuestion_EndDate, \r\n");
            viewString.Append("            T.Approved AS SurveyQuestion_Approved, \r\n            T.ApprovedByUse");
            viewString.Append("rId AS SurveyQuestion_ApprovedByUserID, \r\n            T.ApprovalDate AS SurveyQu");
            viewString.Append("estion_ApprovalDate, \r\n            T.CreationDate AS SurveyQuestion_CreationDate");
            viewString.Append(", \r\n            T.ModifiedDate AS SurveyQuestion_ModifiedDate, \r\n            T.C");
            viewString.Append("reatedBy AS SurveyQuestion_CreatedBy, \r\n            T.ModifiedBy AS SurveyQuesti");
            viewString.Append("on_ModifiedBy, \r\n            T.LeftPicturePath AS SurveyQuestion_LeftPicturePath");
            viewString.Append(", \r\n            T.RightPicturePath AS SurveyQuestion_RightPicturePath, \r\n       ");
            viewString.Append("     T.DiscountVoucherApplied AS SurveyQuestion_DiscountVoucherApplied, \r\n      ");
            viewString.Append("      T.VoucherCode AS SurveyQuestion_VoucherCode, \r\n            T.DiscountVouch");
            viewString.Append("erId AS SurveyQuestion_DiscountVoucherID, \r\n            T.RejectionReason AS Sur");
            viewString.Append("veyQuestion_RejectionReason, \r\n            T.ProjectedReach AS SurveyQuestion_Pr");
            viewString.Append("ojectedReach, \r\n            T.ResultClicks AS SurveyQuestion_ResultClicks, \r\n   ");
            viewString.Append("         T.AgeRangeStart AS SurveyQuestion_AgeRangeStart, \r\n            T.AgeRan");
            viewString.Append("geEnd AS SurveyQuestion_AgeRangeEnd, \r\n            T.Gender AS SurveyQuestion_Ge");
            viewString.Append("nder, \r\n            T.SubmissionDate AS SurveyQuestion_SubmissionDate, \r\n       ");
            viewString.Append("     T.ParentSurveyId AS SurveyQuestion_ParentSurveyId, \r\n            T.Priority");
            viewString.Append(" AS SurveyQuestion_Priority, \r\n            T.CompanyId AS SurveyQuestion_Company");
            viewString.Append("Id, \r\n            T.AnswerNeeded AS SurveyQuestion_AnswerNeeded, \r\n            T");
            viewString.Append(".AmountCharged AS SurveyQuestion_AmountCharged, \r\n            T.IsUseFilter AS S");
            viewString.Append("urveyQuestion_IsUseFilter, \r\n            True AS _from0\r\n        FROM BaseDbCont");
            viewString.Append("ext.SurveyQuestions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestion", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionResponse", @"
    SELECT VALUE -- Constructing SurveyQuestionResponse
        [SMDModel.Store.SurveyQuestionResponse](T1.SurveyQuestionResponse_SQResponseID, T1.SurveyQuestionResponse_SQID, T1.SurveyQuestionResponse_UserID, T1.SurveyQuestionResponse_ResoponseDateTime, T1.SurveyQuestionResponse_UserSelection, T1.SurveyQuestionResponse_SkipCount, T1.SurveyQuestionResponse_CompanyId, T1.SurveyQuestionResponse_ResponseType)
    FROM (
        SELECT 
            T.SqResponseId AS SurveyQuestionResponse_SQResponseID, 
            T.SqId AS SurveyQuestionResponse_SQID, 
            T.UserId AS SurveyQuestionResponse_UserID, 
            T.ResoponseDateTime AS SurveyQuestionResponse_ResoponseDateTime, 
            T.UserSelection AS SurveyQuestionResponse_UserSelection, 
            T.SkipCount AS SurveyQuestionResponse_SkipCount, 
            T.CompanyId AS SurveyQuestionResponse_CompanyId, 
            T.ResponseType AS SurveyQuestionResponse_ResponseType, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionResponses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4444);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AspNetUsers\r\n        [SMDModel.Store.AspNetUs");
            viewString.Append("ers](T1.AspNetUsers_Id, T1.AspNetUsers_Email, T1.AspNetUsers_EmailConfirmed, T1.");
            viewString.Append("AspNetUsers_PasswordHash, T1.AspNetUsers_SecurityStamp, T1.AspNetUsers_PhoneNumb");
            viewString.Append("erConfirmed, T1.AspNetUsers_TwoFactorEnabled, T1.AspNetUsers_LockoutEndDateUtc, ");
            viewString.Append("T1.AspNetUsers_LockoutEnabled, T1.AspNetUsers_AccessFailedCount, T1.AspNetUsers_");
            viewString.Append("UserName, T1.AspNetUsers_FullName, T1.AspNetUsers_AlternateEmail, T1.AspNetUsers");
            viewString.Append("_IsEmailVerified, T1.AspNetUsers_Status, T1.AspNetUsers_CreatedDateTime, T1.AspN");
            viewString.Append("etUsers_ModifiedDateTime, T1.AspNetUsers_LastLoginTime, T1.AspNetUsers_Phone1, T");
            viewString.Append("1.AspNetUsers_Phone2, T1.AspNetUsers_Jobtitle, T1.AspNetUsers_ContactNotes, T1.A");
            viewString.Append("spNetUsers_IsSubscribed, T1.AspNetUsers_AppID, T1.AspNetUsers_IsCompanyRepresent");
            viewString.Append("ative, T1.AspNetUsers_UserTimeZone, T1.AspNetUsers_Gender, T1.AspNetUsers_Langua");
            viewString.Append("geID, T1.AspNetUsers_IndustryID, T1.AspNetUsers_EducationId, T1.AspNetUsers_Prof");
            viewString.Append("ileImage, T1.AspNetUsers_UserCode, T1.AspNetUsers_SmsCode, T1.AspNetUsers_Websit");
            viewString.Append("eLink, T1.AspNetUsers_DOB, T1.AspNetUsers_CompanyId, T1.AspNetUsers_authenticati");
            viewString.Append("onToken, T1.AspNetUsers_DevicePlatform, T1.AspNetUsers_optDealsNearMeEmails, T1.");
            viewString.Append("AspNetUsers_optLatestNewsEmails, T1.AspNetUsers_optMarketingEmails, T1.AspNetUse");
            viewString.Append("rs_PassportNo, T1.AspNetUsers_Title, T1.AspNetUsers_Phone1CodeCountryID, T1.AspN");
            viewString.Append("etUsers_DeleteConfirmationToken, T1.AspNetUsers_LastKnownLocationLat, T1.AspNetU");
            viewString.Append("sers_LastKnownLocationLong, T1.AspNetUsers_LastKnownLocation)\r\n    FROM (\r\n     ");
            viewString.Append("   SELECT \r\n            T.Id AS AspNetUsers_Id, \r\n            T.Email AS AspNetU");
            viewString.Append("sers_Email, \r\n            T.EmailConfirmed AS AspNetUsers_EmailConfirmed, \r\n    ");
            viewString.Append("        T.PasswordHash AS AspNetUsers_PasswordHash, \r\n            T.SecurityStam");
            viewString.Append("p AS AspNetUsers_SecurityStamp, \r\n            T.PhoneNumberConfirmed AS AspNetUs");
            viewString.Append("ers_PhoneNumberConfirmed, \r\n            T.TwoFactorEnabled AS AspNetUsers_TwoFac");
            viewString.Append("torEnabled, \r\n            T.LockoutEndDateUtc AS AspNetUsers_LockoutEndDateUtc, ");
            viewString.Append("\r\n            T.LockoutEnabled AS AspNetUsers_LockoutEnabled, \r\n            T.Ac");
            viewString.Append("cessFailedCount AS AspNetUsers_AccessFailedCount, \r\n            T.UserName AS As");
            viewString.Append("pNetUsers_UserName, \r\n            T.FullName AS AspNetUsers_FullName, \r\n        ");
            viewString.Append("    T.AlternateEmail AS AspNetUsers_AlternateEmail, \r\n            T.IsEmailVerif");
            viewString.Append("ied AS AspNetUsers_IsEmailVerified, \r\n            T.Status AS AspNetUsers_Status");
            viewString.Append(", \r\n            T.CreatedDateTime AS AspNetUsers_CreatedDateTime, \r\n            ");
            viewString.Append("T.ModifiedDateTime AS AspNetUsers_ModifiedDateTime, \r\n            T.LastLoginTim");
            viewString.Append("e AS AspNetUsers_LastLoginTime, \r\n            T.Phone1 AS AspNetUsers_Phone1, \r\n");
            viewString.Append("            T.Phone2 AS AspNetUsers_Phone2, \r\n            T.Jobtitle AS AspNetUs");
            viewString.Append("ers_Jobtitle, \r\n            T.ContactNotes AS AspNetUsers_ContactNotes, \r\n      ");
            viewString.Append("      T.IsSubscribed AS AspNetUsers_IsSubscribed, \r\n            T.AppID AS AspNe");
            viewString.Append("tUsers_AppID, \r\n            T.IsCompanyRepresentative AS AspNetUsers_IsCompanyRe");
            viewString.Append("presentative, \r\n            T.UserTimeZone AS AspNetUsers_UserTimeZone, \r\n      ");
            viewString.Append("      T.Gender AS AspNetUsers_Gender, \r\n            T.LanguageId AS AspNetUsers_");
            viewString.Append("LanguageID, \r\n            T.IndustryId AS AspNetUsers_IndustryID, \r\n            ");
            viewString.Append("T.EducationId AS AspNetUsers_EducationId, \r\n            T.ProfileImage AS AspNet");
            viewString.Append("Users_ProfileImage, \r\n            T.UserCode AS AspNetUsers_UserCode, \r\n        ");
            viewString.Append("    T.SmsCode AS AspNetUsers_SmsCode, \r\n            T.WebsiteLink AS AspNetUsers");
            viewString.Append("_WebsiteLink, \r\n            T.DOB AS AspNetUsers_DOB, \r\n            T.CompanyId ");
            viewString.Append("AS AspNetUsers_CompanyId, \r\n            T.AuthenticationToken AS AspNetUsers_aut");
            viewString.Append("henticationToken, \r\n            T.DevicePlatform AS AspNetUsers_DevicePlatform, ");
            viewString.Append("\r\n            T.optDealsNearMeEmails AS AspNetUsers_optDealsNearMeEmails, \r\n    ");
            viewString.Append("        T.optLatestNewsEmails AS AspNetUsers_optLatestNewsEmails, \r\n            ");
            viewString.Append("T.optMarketingEmails AS AspNetUsers_optMarketingEmails, \r\n            T.Passport");
            viewString.Append("No AS AspNetUsers_PassportNo, \r\n            T.Title AS AspNetUsers_Title, \r\n    ");
            viewString.Append("        T.Phone1CodeCountryID AS AspNetUsers_Phone1CodeCountryID, \r\n            ");
            viewString.Append("T.DeleteConfirmationToken AS AspNetUsers_DeleteConfirmationToken, \r\n            ");
            viewString.Append("T.LastKnownLocationLat AS AspNetUsers_LastKnownLocationLat, \r\n            T.Last");
            viewString.Append("KnownLocationLong AS AspNetUsers_LastKnownLocationLong, \r\n            T.LastKnow");
            viewString.Append("nLocation AS AspNetUsers_LastKnownLocation, \r\n            True AS _from0\r\n      ");
            viewString.Append("  FROM BaseDbContext.Users AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUsers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2176);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaignResponse\r\n        [SMDModel.Store.A");
            viewString.Append("dCampaignResponse](T1.AdCampaignResponse_ResponseID, T1.AdCampaignResponse_Campa");
            viewString.Append("ignID, T1.AdCampaignResponse_CreatedDateTime, T1.AdCampaignResponse_UserID, T1.A");
            viewString.Append("dCampaignResponse_EndUserDollarAmount, T1.AdCampaignResponse_SkipCount, T1.AdCam");
            viewString.Append("paignResponse_UserSelection, T1.AdCampaignResponse_CompanyId, T1.AdCampaignRespo");
            viewString.Append("nse_GameTime, T1.AdCampaignResponse_GameScore, T1.AdCampaignResponse_GameLevel, ");
            viewString.Append("T1.AdCampaignResponse_GameId, T1.AdCampaignResponse_UserQuestionResponse, T1.AdC");
            viewString.Append("ampaignResponse_UserLocationLat, T1.AdCampaignResponse_UserLocationLong, T1.AdCa");
            viewString.Append("mpaignResponse_UserLocationCity, T1.AdCampaignResponse_UserLocationCountry, T1.A");
            viewString.Append("dCampaignResponse_UserLocationAddress, T1.AdCampaignResponse_ResponseType)\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.ResponseId AS AdCampaignResponse_Response");
            viewString.Append("ID, \r\n            T.CampaignId AS AdCampaignResponse_CampaignID, \r\n            T");
            viewString.Append(".CreatedDateTime AS AdCampaignResponse_CreatedDateTime, \r\n            T.UserId A");
            viewString.Append("S AdCampaignResponse_UserID, \r\n            T.EndUserDollarAmount AS AdCampaignRe");
            viewString.Append("sponse_EndUserDollarAmount, \r\n            T.SkipCount AS AdCampaignResponse_Skip");
            viewString.Append("Count, \r\n            T.UserSelection AS AdCampaignResponse_UserSelection, \r\n    ");
            viewString.Append("        T.CompanyId AS AdCampaignResponse_CompanyId, \r\n            T.GameTime AS");
            viewString.Append(" AdCampaignResponse_GameTime, \r\n            T.GameScore AS AdCampaignResponse_Ga");
            viewString.Append("meScore, \r\n            T.GameLevel AS AdCampaignResponse_GameLevel, \r\n          ");
            viewString.Append("  T.GameId AS AdCampaignResponse_GameId, \r\n            T.UserQuestionResponse AS");
            viewString.Append(" AdCampaignResponse_UserQuestionResponse, \r\n            T.UserLocationLat AS AdC");
            viewString.Append("ampaignResponse_UserLocationLat, \r\n            T.UserLocationLong AS AdCampaignR");
            viewString.Append("esponse_UserLocationLong, \r\n            T.UserLocationCity AS AdCampaignResponse");
            viewString.Append("_UserLocationCity, \r\n            T.UserLocationCountry AS AdCampaignResponse_Use");
            viewString.Append("rLocationCountry, \r\n            T.UserLocationAddress AS AdCampaignResponse_User");
            viewString.Append("LocationAddress, \r\n            T.ResponseType AS AdCampaignResponse_ResponseType");
            viewString.Append(", \r\n            True AS _from0\r\n        FROM BaseDbContext.AdCampaignResponses A");
            viewString.Append("S T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignResponse", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CampaignCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CampaignCategories", @"
    SELECT VALUE -- Constructing CampaignCategories
        [SMDModel.Store.CampaignCategories](T1.CampaignCategories_CampaignId, T1.CampaignCategories_CategoryId, T1.CampaignCategories_Id)
    FROM (
        SELECT 
            T.CampaignId AS CampaignCategories_CampaignId, 
            T.CategoryId AS CampaignCategories_CategoryId, 
            T.Id AS CampaignCategories_Id, 
            True AS _from0
        FROM BaseDbContext.CampaignCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CouponCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CouponCategory", @"
    SELECT VALUE -- Constructing CouponCategory
        [SMDModel.Store.CouponCategory](T1.CouponCategory_CategoryId, T1.CouponCategory_Name, T1.CouponCategory_Status, T1.CouponCategory_ImagePath, T1.CouponCategory_SortOrder)
    FROM (
        SELECT 
            T.CategoryId AS CouponCategory_CategoryId, 
            T.Name AS CouponCategory_Name, 
            T.Status AS CouponCategory_Status, 
            T.ImagePath AS CouponCategory_ImagePath, 
            T.SortOrder AS CouponCategory_SortOrder, 
            True AS _from0
        FROM BaseDbContext.CouponCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaign
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(9396);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaign\r\n        [SMDModel.Store.AdCampaig");
            viewString.Append("n](T1.AdCampaign_CampaignID, T1.AdCampaign_LanguageID, T1.AdCampaign_UserID, T1.");
            viewString.Append("AdCampaign_SMDCampaign, T1.AdCampaign_CampaignName, T1.AdCampaign_CampaignDescri");
            viewString.Append("ption, T1.AdCampaign_Status, T1.AdCampaign_Archived, T1.AdCampaign_Approved, T1.");
            viewString.Append("AdCampaign_ApprovedBy, T1.AdCampaign_ApprovalDateTime, T1.AdCampaign_StartDateTi");
            viewString.Append("me, T1.AdCampaign_EndDateTime, T1.AdCampaign_MaxBudget, T1.AdCampaign_Type, T1.A");
            viewString.Append("dCampaign_ClickRate, T1.AdCampaign_SMDCredits, T1.AdCampaign_DisplayTitle, T1.Ad");
            viewString.Append("Campaign_Description, T1.AdCampaign_ImagePath, T1.AdCampaign_LandingPageVideoLin");
            viewString.Append("k, T1.AdCampaign_VerifyQuestion, T1.AdCampaign_Answer1, T1.AdCampaign_Answer2, T");
            viewString.Append("1.AdCampaign_Answer3, T1.AdCampaign_CorrectAnswer, T1.AdCampaign_CreatedDateTime");
            viewString.Append(", T1.AdCampaign_CreatedBy, T1.AdCampaign_ModifiedDateTime, T1.AdCampaign_Modifie");
            viewString.Append("dBy, T1.AdCampaign_AgeRangeStart, T1.AdCampaign_AgeRangeEnd, T1.AdCampaign_Gende");
            viewString.Append("r, T1.AdCampaign_RejectedReason, T1.AdCampaign_ProjectedReach, T1.AdCampaign_Res");
            viewString.Append("ultClicks, T1.AdCampaign_AmountSpent, T1.AdCampaign_RewardType, T1.AdCampaign_Vo");
            viewString.Append("ucher1Heading, T1.AdCampaign_Voucher1Description, T1.AdCampaign_Voucher1Value, T");
            viewString.Append("1.AdCampaign_Voucher2Heading, T1.AdCampaign_Voucher2Description, T1.AdCampaign_V");
            viewString.Append("oucher2Value, T1.AdCampaign_Voucher1ImagePath, T1.AdCampaign_Voucher2ImagePath, ");
            viewString.Append("T1.AdCampaign_VideoUrl, T1.AdCampaign_BuuyItLine1, T1.AdCampaign_BuyItLine2, T1.");
            viewString.Append("AdCampaign_BuyItLine3, T1.AdCampaign_BuyItButtonLabel, T1.AdCampaign_BuyItImageU");
            viewString.Append("rl, T1.AdCampaign_CouponSwapValue, T1.AdCampaign_CouponActualValue, T1.AdCampaig");
            viewString.Append("n_CouponTakenCount, T1.AdCampaign_CouponQuantity, T1.AdCampaign_CompanyId, T1.Ad");
            viewString.Append("Campaign_priority, T1.AdCampaign_couponSmdComission, T1.AdCampaign_couponImage2,");
            viewString.Append(" T1.AdCampaign_CouponImage3, T1.AdCampaign_CouponImage4, T1.AdCampaign_CouponExp");
            viewString.Append("iryLabel, T1.AdCampaign_CouponDiscountValue, T1.AdCampaign_CouponType, T1.AdCamp");
            viewString.Append("aign_DeliveryDays, T1.AdCampaign_IsUseFilter, T1.AdCampaign_LogoUrl, T1.AdCampai");
            viewString.Append("gn_VoucherAdditionalInfo, T1.AdCampaign_CouponId, T1.AdCampaign_IsShowVoucherSet");
            viewString.Append("ting, T1.AdCampaign_VideoLink2, T1.AdCampaign_VoucherHighlightLine1, T1.AdCampai");
            viewString.Append("gn_VoucherHighlightLine2, T1.AdCampaign_VoucherHighlightLine3, T1.AdCampaign_Vou");
            viewString.Append("cherHighlightLine4, T1.AdCampaign_VoucherHighlightLine5, T1.AdCampaign_VoucherFi");
            viewString.Append("nePrintLine1, T1.AdCampaign_VoucherFinePrintLine2, T1.AdCampaign_VoucherFinePrin");
            viewString.Append("tLine3, T1.AdCampaign_VoucherFinePrintLine4, T1.AdCampaign_VoucherFinePrintLine5");
            viewString.Append(", T1.AdCampaign_VoucherLocationLine1, T1.AdCampaign_VoucherLocationLine2, T1.AdC");
            viewString.Append("ampaign_VoucherLocationLine3, T1.AdCampaign_VoucherLocationLine4, T1.AdCampaign_");
            viewString.Append("VoucherLocationLine5, T1.AdCampaign_VoucherHowToRedeemLine1, T1.AdCampaign_Vouch");
            viewString.Append("erHowToRedeemLine2, T1.AdCampaign_VoucherHowToRedeemLine3, T1.AdCampaign_Voucher");
            viewString.Append("HowToRedeemLine4, T1.AdCampaign_VoucherHowToRedeemLine5, T1.AdCampaign_VoucherRe");
            viewString.Append("demptionPhone, T1.AdCampaign_VoucherLocationLAT, T1.AdCampaign_VoucherLocationLO");
            viewString.Append("N, T1.AdCampaign_MaxDailyBudget, T1.AdCampaign_SubmissionDateTime, T1.AdCampaign");
            viewString.Append("_ShowBuyitBtn, T1.AdCampaign_IsPaymentCollected, T1.AdCampaign_PaymentDate)\r\n   ");
            viewString.Append(" FROM (\r\n        SELECT \r\n            T.CampaignId AS AdCampaign_CampaignID, \r\n ");
            viewString.Append("           T.LanguageId AS AdCampaign_LanguageID, \r\n            T.UserId AS AdCa");
            viewString.Append("mpaign_UserID, \r\n            T.SmdCampaign AS AdCampaign_SMDCampaign, \r\n        ");
            viewString.Append("    T.CampaignName AS AdCampaign_CampaignName, \r\n            T.CampaignDescripti");
            viewString.Append("on AS AdCampaign_CampaignDescription, \r\n            T.Status AS AdCampaign_Statu");
            viewString.Append("s, \r\n            T.Archived AS AdCampaign_Archived, \r\n            T.Approved AS ");
            viewString.Append("AdCampaign_Approved, \r\n            T.ApprovedBy AS AdCampaign_ApprovedBy, \r\n    ");
            viewString.Append("        T.ApprovalDateTime AS AdCampaign_ApprovalDateTime, \r\n            T.Start");
            viewString.Append("DateTime AS AdCampaign_StartDateTime, \r\n            T.EndDateTime AS AdCampaign_");
            viewString.Append("EndDateTime, \r\n            T.MaxBudget AS AdCampaign_MaxBudget, \r\n            T.");
            viewString.Append("Type AS AdCampaign_Type, \r\n            T.ClickRate AS AdCampaign_ClickRate, \r\n  ");
            viewString.Append("          T.SmdCredits AS AdCampaign_SMDCredits, \r\n            T.DisplayTitle AS");
            viewString.Append(" AdCampaign_DisplayTitle, \r\n            T.Description AS AdCampaign_Description,");
            viewString.Append(" \r\n            T.ImagePath AS AdCampaign_ImagePath, \r\n            T.LandingPageV");
            viewString.Append("ideoLink AS AdCampaign_LandingPageVideoLink, \r\n            T.VerifyQuestion AS A");
            viewString.Append("dCampaign_VerifyQuestion, \r\n            T.Answer1 AS AdCampaign_Answer1, \r\n     ");
            viewString.Append("       T.Answer2 AS AdCampaign_Answer2, \r\n            T.Answer3 AS AdCampaign_An");
            viewString.Append("swer3, \r\n            T.CorrectAnswer AS AdCampaign_CorrectAnswer, \r\n            ");
            viewString.Append("T.CreatedDateTime AS AdCampaign_CreatedDateTime, \r\n            T.CreatedBy AS Ad");
            viewString.Append("Campaign_CreatedBy, \r\n            T.ModifiedDateTime AS AdCampaign_ModifiedDateT");
            viewString.Append("ime, \r\n            T.ModifiedBy AS AdCampaign_ModifiedBy, \r\n            T.AgeRan");
            viewString.Append("geStart AS AdCampaign_AgeRangeStart, \r\n            T.AgeRangeEnd AS AdCampaign_A");
            viewString.Append("geRangeEnd, \r\n            T.Gender AS AdCampaign_Gender, \r\n            T.Rejecte");
            viewString.Append("dReason AS AdCampaign_RejectedReason, \r\n            T.ProjectedReach AS AdCampai");
            viewString.Append("gn_ProjectedReach, \r\n            T.ResultClicks AS AdCampaign_ResultClicks, \r\n  ");
            viewString.Append("          T.AmountSpent AS AdCampaign_AmountSpent, \r\n            T.RewardType AS");
            viewString.Append(" AdCampaign_RewardType, \r\n            T.Voucher1Heading AS AdCampaign_Voucher1He");
            viewString.Append("ading, \r\n            T.Voucher1Description AS AdCampaign_Voucher1Description, \r\n");
            viewString.Append("            T.Voucher1Value AS AdCampaign_Voucher1Value, \r\n            T.Voucher");
            viewString.Append("2Heading AS AdCampaign_Voucher2Heading, \r\n            T.Voucher2Description AS A");
            viewString.Append("dCampaign_Voucher2Description, \r\n            T.Voucher2Value AS AdCampaign_Vouch");
            viewString.Append("er2Value, \r\n            T.Voucher1ImagePath AS AdCampaign_Voucher1ImagePath, \r\n ");
            viewString.Append("           T.Voucher2ImagePath AS AdCampaign_Voucher2ImagePath, \r\n            T.");
            viewString.Append("VideoUrl AS AdCampaign_VideoUrl, \r\n            T.BuuyItLine1 AS AdCampaign_BuuyI");
            viewString.Append("tLine1, \r\n            T.BuyItLine2 AS AdCampaign_BuyItLine2, \r\n            T.Buy");
            viewString.Append("ItLine3 AS AdCampaign_BuyItLine3, \r\n            T.BuyItButtonLabel AS AdCampaign");
            viewString.Append("_BuyItButtonLabel, \r\n            T.BuyItImageUrl AS AdCampaign_BuyItImageUrl, \r\n");
            viewString.Append("            T.CouponSwapValue AS AdCampaign_CouponSwapValue, \r\n            T.Cou");
            viewString.Append("ponActualValue AS AdCampaign_CouponActualValue, \r\n            T.CouponTakenCount");
            viewString.Append(" AS AdCampaign_CouponTakenCount, \r\n            T.CouponQuantity AS AdCampaign_Co");
            viewString.Append("uponQuantity, \r\n            T.CompanyId AS AdCampaign_CompanyId, \r\n            T");
            viewString.Append(".priority AS AdCampaign_priority, \r\n            T.couponSmdComission AS AdCampai");
            viewString.Append("gn_couponSmdComission, \r\n            T.couponImage2 AS AdCampaign_couponImage2, ");
            viewString.Append("\r\n            T.CouponImage3 AS AdCampaign_CouponImage3, \r\n            T.CouponI");
            viewString.Append("mage4 AS AdCampaign_CouponImage4, \r\n            T.CouponExpiryLabel AS AdCampaig");
            viewString.Append("n_CouponExpiryLabel, \r\n            T.CouponDiscountValue AS AdCampaign_CouponDis");
            viewString.Append("countValue, \r\n            T.CouponType AS AdCampaign_CouponType, \r\n            T");
            viewString.Append(".DeliveryDays AS AdCampaign_DeliveryDays, \r\n            T.IsUseFilter AS AdCampa");
            viewString.Append("ign_IsUseFilter, \r\n            T.LogoUrl AS AdCampaign_LogoUrl, \r\n            T.");
            viewString.Append("VoucherAdditionalInfo AS AdCampaign_VoucherAdditionalInfo, \r\n            T.Coupo");
            viewString.Append("nId AS AdCampaign_CouponId, \r\n            T.IsShowVoucherSetting AS AdCampaign_I");
            viewString.Append("sShowVoucherSetting, \r\n            T.VideoLink2 AS AdCampaign_VideoLink2, \r\n    ");
            viewString.Append("        T.VoucherHighlightLine1 AS AdCampaign_VoucherHighlightLine1, \r\n         ");
            viewString.Append("   T.VoucherHighlightLine2 AS AdCampaign_VoucherHighlightLine2, \r\n            T.");
            viewString.Append("VoucherHighlightLine3 AS AdCampaign_VoucherHighlightLine3, \r\n            T.Vouch");
            viewString.Append("erHighlightLine4 AS AdCampaign_VoucherHighlightLine4, \r\n            T.VoucherHig");
            viewString.Append("hlightLine5 AS AdCampaign_VoucherHighlightLine5, \r\n            T.VoucherFinePrin");
            viewString.Append("tLine1 AS AdCampaign_VoucherFinePrintLine1, \r\n            T.VoucherFinePrintLine");
            viewString.Append("2 AS AdCampaign_VoucherFinePrintLine2, \r\n            T.VoucherFinePrintLine3 AS ");
            viewString.Append("AdCampaign_VoucherFinePrintLine3, \r\n            T.VoucherFinePrintLine4 AS AdCam");
            viewString.Append("paign_VoucherFinePrintLine4, \r\n            T.VoucherFinePrintLine5 AS AdCampaign");
            viewString.Append("_VoucherFinePrintLine5, \r\n            T.VoucherLocationLine1 AS AdCampaign_Vouch");
            viewString.Append("erLocationLine1, \r\n            T.VoucherLocationLine2 AS AdCampaign_VoucherLocat");
            viewString.Append("ionLine2, \r\n            T.VoucherLocationLine3 AS AdCampaign_VoucherLocationLine");
            viewString.Append("3, \r\n            T.VoucherLocationLine4 AS AdCampaign_VoucherLocationLine4, \r\n  ");
            viewString.Append("          T.VoucherLocationLine5 AS AdCampaign_VoucherLocationLine5, \r\n         ");
            viewString.Append("   T.VoucherHowToRedeemLine1 AS AdCampaign_VoucherHowToRedeemLine1, \r\n          ");
            viewString.Append("  T.VoucherHowToRedeemLine2 AS AdCampaign_VoucherHowToRedeemLine2, \r\n           ");
            viewString.Append(" T.VoucherHowToRedeemLine3 AS AdCampaign_VoucherHowToRedeemLine3, \r\n            ");
            viewString.Append("T.VoucherHowToRedeemLine4 AS AdCampaign_VoucherHowToRedeemLine4, \r\n            T");
            viewString.Append(".VoucherHowToRedeemLine5 AS AdCampaign_VoucherHowToRedeemLine5, \r\n            T.");
            viewString.Append("VoucherRedemptionPhone AS AdCampaign_VoucherRedemptionPhone, \r\n            T.Vou");
            viewString.Append("cherLocationLAT AS AdCampaign_VoucherLocationLAT, \r\n            T.VoucherLocatio");
            viewString.Append("nLON AS AdCampaign_VoucherLocationLON, \r\n            T.MaxDailyBudget AS AdCampa");
            viewString.Append("ign_MaxDailyBudget, \r\n            T.SubmissionDateTime AS AdCampaign_SubmissionD");
            viewString.Append("ateTime, \r\n            T.ShowBuyitBtn AS AdCampaign_ShowBuyitBtn, \r\n            ");
            viewString.Append("T.IsPaymentCollected AS AdCampaign_IsPaymentCollected, \r\n            T.PaymentDa");
            viewString.Append("te AS AdCampaign_PaymentDate, \r\n            True AS _from0\r\n        FROM BaseDbC");
            viewString.Append("ontext.AdCampaigns AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaign", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignTargetCriteria", "\r\n    SELECT VALUE -- Constructing AdCampaignTargetCriteria\r\n        [SMDModel.St" +
                    "ore.AdCampaignTargetCriteria](T1.AdCampaignTargetCriteria_CriteriaID, T1.AdCampa" +
                    "ignTargetCriteria_CampaignID, T1.AdCampaignTargetCriteria_Type, T1.AdCampaignTar" +
                    "getCriteria_PQID, T1.AdCampaignTargetCriteria_PQAnswerID, T1.AdCampaignTargetCri" +
                    "teria_SQID, T1.AdCampaignTargetCriteria_SQAnswer, T1.AdCampaignTargetCriteria_In" +
                    "cludeorExclude, T1.AdCampaignTargetCriteria_LanguageID, T1.AdCampaignTargetCrite" +
                    "ria_IndustryID, T1.AdCampaignTargetCriteria_EducationID, T1.AdCampaignTargetCrit" +
                    "eria_QuizCampaignId, T1.AdCampaignTargetCriteria_QuizAnswerId)\r\n    FROM (\r\n    " +
                    "    SELECT \r\n            T.CriteriaId AS AdCampaignTargetCriteria_CriteriaID, \r\n" +
                    "            T.CampaignId AS AdCampaignTargetCriteria_CampaignID, \r\n            T" +
                    ".Type AS AdCampaignTargetCriteria_Type, \r\n            T.PqId AS AdCampaignTarget" +
                    "Criteria_PQID, \r\n            T.PqAnswerId AS AdCampaignTargetCriteria_PQAnswerID" +
                    ", \r\n            T.SqId AS AdCampaignTargetCriteria_SQID, \r\n            T.SqAnswe" +
                    "r AS AdCampaignTargetCriteria_SQAnswer, \r\n            T.IncludeorExclude AS AdCa" +
                    "mpaignTargetCriteria_IncludeorExclude, \r\n            T.LanguageId AS AdCampaignT" +
                    "argetCriteria_LanguageID, \r\n            T.IndustryId AS AdCampaignTargetCriteria" +
                    "_IndustryID, \r\n            T.EducationId AS AdCampaignTargetCriteria_EducationID" +
                    ", \r\n            T.QuizCampaignId AS AdCampaignTargetCriteria_QuizCampaignId, \r\n " +
                    "           T.QuizAnswerId AS AdCampaignTargetCriteria_QuizAnswerId, \r\n          " +
                    "  True AS _from0\r\n        FROM BaseDbContext.AdCampaignTargetCriterias AS T\r\n   " +
                    " ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CompaniesAspNetUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CompaniesAspNetUsers", @"
    SELECT VALUE -- Constructing CompaniesAspNetUsers
        [SMDModel.Store.CompaniesAspNetUsers](T1.CompaniesAspNetUsers_Id, T1.CompaniesAspNetUsers_CompanyId, T1.CompaniesAspNetUsers_UserId, T1.CompaniesAspNetUsers_CreatedOn, T1.CompaniesAspNetUsers_Status, T1.CompaniesAspNetUsers_InvitationCode, T1.CompaniesAspNetUsers_RoleId, T1.CompaniesAspNetUsers_InvitationEmail)
    FROM (
        SELECT 
            T.Id AS CompaniesAspNetUsers_Id, 
            T.CompanyId AS CompaniesAspNetUsers_CompanyId, 
            T.UserId AS CompaniesAspNetUsers_UserId, 
            T.CreatedOn AS CompaniesAspNetUsers_CreatedOn, 
            T.Status AS CompaniesAspNetUsers_Status, 
            T.InvitationCode AS CompaniesAspNetUsers_InvitationCode, 
            T.RoleId AS CompaniesAspNetUsers_RoleId, 
            T.InvitationEmail AS CompaniesAspNetUsers_InvitationEmail, 
            True AS _from0
        FROM BaseDbContext.CompaniesAspNetUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.BranchCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.BranchCategory", @"
    SELECT VALUE -- Constructing BranchCategory
        [SMDModel.Store.BranchCategory](T1.BranchCategory_BranchCategoryId, T1.BranchCategory_BranchCategoryName, T1.BranchCategory_CompanyId)
    FROM (
        SELECT 
            T.BranchCategoryId AS BranchCategory_BranchCategoryId, 
            T.BranchCategoryName AS BranchCategory_BranchCategoryName, 
            T.CompanyId AS BranchCategory_CompanyId, 
            True AS _from0
        FROM BaseDbContext.BranchCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CompanyBranch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CompanyBranch", "\r\n    SELECT VALUE -- Constructing CompanyBranch\r\n        [SMDModel.Store.Company" +
                    "Branch](T1.CompanyBranch_BranchId, T1.CompanyBranch_BranchTitle, T1.CompanyBranc" +
                    "h_BranchAddressLine1, T1.CompanyBranch_BranchAddressLine2, T1.CompanyBranch_Bran" +
                    "chCity, T1.CompanyBranch_BranchState, T1.CompanyBranch_BranchZipCode, T1.Company" +
                    "Branch_BranchPhone, T1.CompanyBranch_BranchLocationLat, T1.CompanyBranch_BranchL" +
                    "ocationLong, T1.CompanyBranch_BranchCategoryId, T1.CompanyBranch_CompanyId, T1.C" +
                    "ompanyBranch_CountryId, T1.CompanyBranch_IsDefault)\r\n    FROM (\r\n        SELECT " +
                    "\r\n            T.BranchId AS CompanyBranch_BranchId, \r\n            T.BranchTitle " +
                    "AS CompanyBranch_BranchTitle, \r\n            T.BranchAddressLine1 AS CompanyBranc" +
                    "h_BranchAddressLine1, \r\n            T.BranchAddressLine2 AS CompanyBranch_Branch" +
                    "AddressLine2, \r\n            T.BranchCity AS CompanyBranch_BranchCity, \r\n        " +
                    "    T.BranchState AS CompanyBranch_BranchState, \r\n            T.BranchZipCode AS" +
                    " CompanyBranch_BranchZipCode, \r\n            T.BranchPhone AS CompanyBranch_Branc" +
                    "hPhone, \r\n            T.BranchLocationLat AS CompanyBranch_BranchLocationLat, \r\n" +
                    "            T.BranchLocationLong AS CompanyBranch_BranchLocationLong, \r\n        " +
                    "    T.BranchCategoryId AS CompanyBranch_BranchCategoryId, \r\n            T.Compan" +
                    "yId AS CompanyBranch_CompanyId, \r\n            T.CountryId AS CompanyBranch_Count" +
                    "ryId, \r\n            T.IsDefault AS CompanyBranch_IsDefault, \r\n            True A" +
                    "S _from0\r\n        FROM BaseDbContext.CompanyBranches AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Coupon
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(7523);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Coupon\r\n        [SMDModel.Store.Coupon](T1.Co");
            viewString.Append("upon_CouponId, T1.Coupon_LanguageId, T1.Coupon_UserId, T1.Coupon_CouponTitle, T1");
            viewString.Append(".Coupon_SearchKeywords, T1.Coupon_Status, T1.Coupon_Archived, T1.Coupon_Approved");
            viewString.Append(", T1.Coupon_ApprovedBy, T1.Coupon_ApprovalDateTime, T1.Coupon_CreatedDateTime, T");
            viewString.Append("1.Coupon_CreatedBy, T1.Coupon_ModifiedDateTime, T1.Coupon_ModifiedBy, T1.Coupon_");
            viewString.Append("RejectedReason, T1.Coupon_Rejecteddatetime, T1.Coupon_RejectedBy, T1.Coupon_Curr");
            viewString.Append("encyId, T1.Coupon_Price, T1.Coupon_Savings, T1.Coupon_SwapCost, T1.Coupon_Coupon");
            viewString.Append("ViewCount, T1.Coupon_CouponIssuedCount, T1.Coupon_CouponRedeemedCount, T1.Coupon");
            viewString.Append("_CouponQtyPerUser, T1.Coupon_CouponListingMode, T1.Coupon_CompanyId, T1.Coupon_C");
            viewString.Append("ouponActiveMonth, T1.Coupon_CouponActiveYear, T1.Coupon_CouponExpirydate, T1.Cou");
            viewString.Append("pon_couponImage1, T1.Coupon_CouponImage2, T1.Coupon_CouponImage3, T1.Coupon_Logo");
            viewString.Append("Url, T1.Coupon_HighlightLine1, T1.Coupon_HighlightLine2, T1.Coupon_HighlightLine");
            viewString.Append("3, T1.Coupon_HighlightLine4, T1.Coupon_HighlightLine5, T1.Coupon_FinePrintLine1,");
            viewString.Append(" T1.Coupon_FinePrintLine2, T1.Coupon_FinePrintLine3, T1.Coupon_FinePrintLine4, T");
            viewString.Append("1.Coupon_FinePrintLine5, T1.Coupon_LocationBranchId, T1.Coupon_LocationTitle, T1");
            viewString.Append(".Coupon_LocationLine1, T1.Coupon_LocationLine2, T1.Coupon_LocationCity, T1.Coupo");
            viewString.Append("n_LocationState, T1.Coupon_LocationZipCode, T1.Coupon_LocationLAT, T1.Coupon_Loc");
            viewString.Append("ationLON, T1.Coupon_LocationPhone, T1.Coupon_GeographyColumn, T1.Coupon_HowToRed");
            viewString.Append("eemLine1, T1.Coupon_HowToRedeemLine2, T1.Coupon_HowToRedeemLine3, T1.Coupon_HowT");
            viewString.Append("oRedeemLine4, T1.Coupon_HowToRedeemLine5, T1.Coupon_SubmissionDateTime, T1.Coupo");
            viewString.Append("n_LocationCountryId, T1.Coupon_CouponStartDate, T1.Coupon_CouponEndDate, T1.Coup");
            viewString.Append("on_Priority, T1.Coupon_ShowBuyitBtn, T1.Coupon_BuyitLandingPageUrl, T1.Coupon_Bu");
            viewString.Append("yitBtnLabel, T1.Coupon_YoutubeLink, T1.Coupon_CouponImage4, T1.Coupon_CouponImag");
            viewString.Append("e5, T1.Coupon_CouponImage6, T1.Coupon_IsPaymentCollected, T1.Coupon_PaymentDate,");
            viewString.Append(" T1.Coupon_IsShowReviews, T1.Coupon_IsShowAddress, T1.Coupon_IsShowPhoneNo, T1.C");
            viewString.Append("oupon_IsShowMap, T1.Coupon_IsShowyouTube, T1.Coupon_IsShowAboutUs, T1.Coupon_IsM");
            viewString.Append("arketingStories, T1.Coupon_IsPerSaving3days, T1.Coupon_IsPerSaving2days, T1.Coup");
            viewString.Append("on_IsPerSavingLastday, T1.Coupon_IsDollarSaving3days, T1.Coupon_IsDollarSaving2d");
            viewString.Append("ays, T1.Coupon_IsDollarSavingLastday, T1.Coupon_isSaveBtnLable, T1.Coupon_DealFi");
            viewString.Append("rstDiscountType, T1.Coupon_DealEndingDiscountType)\r\n    FROM (\r\n        SELECT \r");
            viewString.Append("\n            T.CouponId AS Coupon_CouponId, \r\n            T.LanguageId AS Coupon");
            viewString.Append("_LanguageId, \r\n            T.UserId AS Coupon_UserId, \r\n            T.CouponTitl");
            viewString.Append("e AS Coupon_CouponTitle, \r\n            T.SearchKeywords AS Coupon_SearchKeywords");
            viewString.Append(", \r\n            T.Status AS Coupon_Status, \r\n            T.Archived AS Coupon_Ar");
            viewString.Append("chived, \r\n            T.Approved AS Coupon_Approved, \r\n            T.ApprovedBy ");
            viewString.Append("AS Coupon_ApprovedBy, \r\n            T.ApprovalDateTime AS Coupon_ApprovalDateTim");
            viewString.Append("e, \r\n            T.CreatedDateTime AS Coupon_CreatedDateTime, \r\n            T.Cr");
            viewString.Append("eatedBy AS Coupon_CreatedBy, \r\n            T.ModifiedDateTime AS Coupon_Modified");
            viewString.Append("DateTime, \r\n            T.ModifiedBy AS Coupon_ModifiedBy, \r\n            T.Rejec");
            viewString.Append("tedReason AS Coupon_RejectedReason, \r\n            T.Rejecteddatetime AS Coupon_R");
            viewString.Append("ejecteddatetime, \r\n            T.RejectedBy AS Coupon_RejectedBy, \r\n            ");
            viewString.Append("T.CurrencyId AS Coupon_CurrencyId, \r\n            T.Price AS Coupon_Price, \r\n    ");
            viewString.Append("        T.Savings AS Coupon_Savings, \r\n            T.SwapCost AS Coupon_SwapCost");
            viewString.Append(", \r\n            T.CouponViewCount AS Coupon_CouponViewCount, \r\n            T.Cou");
            viewString.Append("ponIssuedCount AS Coupon_CouponIssuedCount, \r\n            T.CouponRedeemedCount ");
            viewString.Append("AS Coupon_CouponRedeemedCount, \r\n            T.CouponQtyPerUser AS Coupon_Coupon");
            viewString.Append("QtyPerUser, \r\n            T.CouponListingMode AS Coupon_CouponListingMode, \r\n   ");
            viewString.Append("         T.CompanyId AS Coupon_CompanyId, \r\n            T.CouponActiveMonth AS C");
            viewString.Append("oupon_CouponActiveMonth, \r\n            T.CouponActiveYear AS Coupon_CouponActive");
            viewString.Append("Year, \r\n            T.CouponExpirydate AS Coupon_CouponExpirydate, \r\n           ");
            viewString.Append(" T.couponImage1 AS Coupon_couponImage1, \r\n            T.CouponImage2 AS Coupon_C");
            viewString.Append("ouponImage2, \r\n            T.CouponImage3 AS Coupon_CouponImage3, \r\n            ");
            viewString.Append("T.LogoUrl AS Coupon_LogoUrl, \r\n            T.HighlightLine1 AS Coupon_HighlightL");
            viewString.Append("ine1, \r\n            T.HighlightLine2 AS Coupon_HighlightLine2, \r\n            T.H");
            viewString.Append("ighlightLine3 AS Coupon_HighlightLine3, \r\n            T.HighlightLine4 AS Coupon");
            viewString.Append("_HighlightLine4, \r\n            T.HighlightLine5 AS Coupon_HighlightLine5, \r\n    ");
            viewString.Append("        T.FinePrintLine1 AS Coupon_FinePrintLine1, \r\n            T.FinePrintLine");
            viewString.Append("2 AS Coupon_FinePrintLine2, \r\n            T.FinePrintLine3 AS Coupon_FinePrintLi");
            viewString.Append("ne3, \r\n            T.FinePrintLine4 AS Coupon_FinePrintLine4, \r\n            T.Fi");
            viewString.Append("nePrintLine5 AS Coupon_FinePrintLine5, \r\n            T.LocationBranchId AS Coupo");
            viewString.Append("n_LocationBranchId, \r\n            T.LocationTitle AS Coupon_LocationTitle, \r\n   ");
            viewString.Append("         T.LocationLine1 AS Coupon_LocationLine1, \r\n            T.LocationLine2 ");
            viewString.Append("AS Coupon_LocationLine2, \r\n            T.LocationCity AS Coupon_LocationCity, \r\n");
            viewString.Append("            T.LocationState AS Coupon_LocationState, \r\n            T.LocationZip");
            viewString.Append("Code AS Coupon_LocationZipCode, \r\n            T.LocationLAT AS Coupon_LocationLA");
            viewString.Append("T, \r\n            T.LocationLON AS Coupon_LocationLON, \r\n            T.LocationPh");
            viewString.Append("one AS Coupon_LocationPhone, \r\n            T.GeographyColumn AS Coupon_Geography");
            viewString.Append("Column, \r\n            T.HowToRedeemLine1 AS Coupon_HowToRedeemLine1, \r\n         ");
            viewString.Append("   T.HowToRedeemLine2 AS Coupon_HowToRedeemLine2, \r\n            T.HowToRedeemLin");
            viewString.Append("e3 AS Coupon_HowToRedeemLine3, \r\n            T.HowToRedeemLine4 AS Coupon_HowToR");
            viewString.Append("edeemLine4, \r\n            T.HowToRedeemLine5 AS Coupon_HowToRedeemLine5, \r\n     ");
            viewString.Append("       T.SubmissionDateTime AS Coupon_SubmissionDateTime, \r\n            T.Locati");
            viewString.Append("onCountryId AS Coupon_LocationCountryId, \r\n            T.CouponStartDate AS Coup");
            viewString.Append("on_CouponStartDate, \r\n            T.CouponEndDate AS Coupon_CouponEndDate, \r\n   ");
            viewString.Append("         T.Priority AS Coupon_Priority, \r\n            T.ShowBuyitBtn AS Coupon_S");
            viewString.Append("howBuyitBtn, \r\n            T.BuyitLandingPageUrl AS Coupon_BuyitLandingPageUrl, ");
            viewString.Append("\r\n            T.BuyitBtnLabel AS Coupon_BuyitBtnLabel, \r\n            T.YoutubeLi");
            viewString.Append("nk AS Coupon_YoutubeLink, \r\n            T.CouponImage4 AS Coupon_CouponImage4, \r");
            viewString.Append("\n            T.CouponImage5 AS Coupon_CouponImage5, \r\n            T.CouponImage6");
            viewString.Append(" AS Coupon_CouponImage6, \r\n            T.IsPaymentCollected AS Coupon_IsPaymentC");
            viewString.Append("ollected, \r\n            T.PaymentDate AS Coupon_PaymentDate, \r\n            T.IsS");
            viewString.Append("howReviews AS Coupon_IsShowReviews, \r\n            T.IsShowAddress AS Coupon_IsSh");
            viewString.Append("owAddress, \r\n            T.IsShowPhoneNo AS Coupon_IsShowPhoneNo, \r\n            ");
            viewString.Append("T.IsShowMap AS Coupon_IsShowMap, \r\n            T.IsShowyouTube AS Coupon_IsShowy");
            viewString.Append("ouTube, \r\n            T.IsShowAboutUs AS Coupon_IsShowAboutUs, \r\n            T.I");
            viewString.Append("sMarketingStories AS Coupon_IsMarketingStories, \r\n            T.IsPerSaving3days");
            viewString.Append(" AS Coupon_IsPerSaving3days, \r\n            T.IsPerSaving2days AS Coupon_IsPerSav");
            viewString.Append("ing2days, \r\n            T.IsPerSavingLastday AS Coupon_IsPerSavingLastday, \r\n   ");
            viewString.Append("         T.IsDollarSaving3days AS Coupon_IsDollarSaving3days, \r\n            T.Is");
            viewString.Append("DollarSaving2days AS Coupon_IsDollarSaving2days, \r\n            T.IsDollarSavingL");
            viewString.Append("astday AS Coupon_IsDollarSavingLastday, \r\n            T.isSaveBtnLable AS Coupon");
            viewString.Append("_isSaveBtnLable, \r\n            T.DealFirstDiscountType AS Coupon_DealFirstDiscou");
            viewString.Append("ntType, \r\n            T.DealEndingDiscountType AS Coupon_DealEndingDiscountType,");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM BaseDbContext.Coupons AS T\r\n    ) AS");
            viewString.Append(" T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Coupon", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CouponCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CouponCategories", @"
    SELECT VALUE -- Constructing CouponCategories
        [SMDModel.Store.CouponCategories](T1.CouponCategories_Id, T1.CouponCategories_CategoryId, T1.CouponCategories_CouponId)
    FROM (
        SELECT 
            T.Id AS CouponCategories_Id, 
            T.CategoryId AS CouponCategories_CategoryId, 
            T.CouponId AS CouponCategories_CouponId, 
            True AS _from0
        FROM BaseDbContext.CouponCategories1 AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.UserPurchasedCoupon
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.UserPurchasedCoupon", @"
    SELECT VALUE -- Constructing UserPurchasedCoupon
        [SMDModel.Store.UserPurchasedCoupon](T1.UserPurchasedCoupon_CouponPurchaseId, T1.UserPurchasedCoupon_CouponId, T1.UserPurchasedCoupon_PurchaseDateTime, T1.UserPurchasedCoupon_PurchaseAmount, T1.UserPurchasedCoupon_UserId, T1.UserPurchasedCoupon_IsRedeemed, T1.UserPurchasedCoupon_RedemptionDateTime, T1.UserPurchasedCoupon_RedemptionOperator, T1.UserPurchasedCoupon_ResponseType)
    FROM (
        SELECT 
            T.CouponPurchaseId AS UserPurchasedCoupon_CouponPurchaseId, 
            T.CouponId AS UserPurchasedCoupon_CouponId, 
            T.PurchaseDateTime AS UserPurchasedCoupon_PurchaseDateTime, 
            T.PurchaseAmount AS UserPurchasedCoupon_PurchaseAmount, 
            T.UserId AS UserPurchasedCoupon_UserId, 
            T.IsRedeemed AS UserPurchasedCoupon_IsRedeemed, 
            T.RedemptionDateTime AS UserPurchasedCoupon_RedemptionDateTime, 
            T.RedemptionOperator AS UserPurchasedCoupon_RedemptionOperator, 
            T.ResponseType AS UserPurchasedCoupon_ResponseType, 
            True AS _from0
        FROM BaseDbContext.UserPurchasedCoupons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.DamImages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.DamImages", @"
    SELECT VALUE -- Constructing DamImages
        [SMDModel.Store.DamImages](T1.DamImages_ImageId, T1.DamImages_ImageTitle, T1.DamImages_ImageFileName, T1.DamImages_ImageCategory, T1.DamImages_CreatedDateTime, T1.DamImages_CompanyId)
    FROM (
        SELECT 
            T.ImageId AS DamImages_ImageId, 
            T.ImageTitle AS DamImages_ImageTitle, 
            T.ImageFileName AS DamImages_ImageFileName, 
            T.ImageCategory AS DamImages_ImageCategory, 
            T.CreatedDateTime AS DamImages_CreatedDateTime, 
            T.CompanyId AS DamImages_CompanyId, 
            True AS _from0
        FROM BaseDbContext.DamImages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionTargetCriteria", "\r\n    SELECT VALUE -- Constructing ProfileQuestionTargetCriteria\r\n        [SMDMod" +
                    "el.Store.ProfileQuestionTargetCriteria](T1.ProfileQuestionTargetCriteria_ID, T1." +
                    "ProfileQuestionTargetCriteria_PQID, T1.ProfileQuestionTargetCriteria_Type, T1.Pr" +
                    "ofileQuestionTargetCriteria_SQID, T1.ProfileQuestionTargetCriteria_PQAnswerID, T" +
                    "1.ProfileQuestionTargetCriteria_LinkedSQID, T1.ProfileQuestionTargetCriteria_Lin" +
                    "kedSQAnswer, T1.ProfileQuestionTargetCriteria_IncludeorExclude, T1.ProfileQuesti" +
                    "onTargetCriteria_LanguageID, T1.ProfileQuestionTargetCriteria_IndustryID, T1.Pro" +
                    "fileQuestionTargetCriteria_EducationID, T1.ProfileQuestionTargetCriteria_AdCampa" +
                    "ignID, T1.ProfileQuestionTargetCriteria_AdCampaignAnswer, T1.ProfileQuestionTarg" +
                    "etCriteria_PQQuestionID)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS Profi" +
                    "leQuestionTargetCriteria_ID, \r\n            T.PQID AS ProfileQuestionTargetCriter" +
                    "ia_PQID, \r\n            T.Type AS ProfileQuestionTargetCriteria_Type, \r\n         " +
                    "   T.SQID AS ProfileQuestionTargetCriteria_SQID, \r\n            T.PQAnswerID AS P" +
                    "rofileQuestionTargetCriteria_PQAnswerID, \r\n            T.LinkedSQID AS ProfileQu" +
                    "estionTargetCriteria_LinkedSQID, \r\n            T.LinkedSQAnswer AS ProfileQuesti" +
                    "onTargetCriteria_LinkedSQAnswer, \r\n            T.IncludeorExclude AS ProfileQues" +
                    "tionTargetCriteria_IncludeorExclude, \r\n            T.LanguageID AS ProfileQuesti" +
                    "onTargetCriteria_LanguageID, \r\n            T.IndustryID AS ProfileQuestionTarget" +
                    "Criteria_IndustryID, \r\n            T.EducationID AS ProfileQuestionTargetCriteri" +
                    "a_EducationID, \r\n            T.AdCampaignID AS ProfileQuestionTargetCriteria_AdC" +
                    "ampaignID, \r\n            T.AdCampaignAnswer AS ProfileQuestionTargetCriteria_AdC" +
                    "ampaignAnswer, \r\n            T.PQQuestionID AS ProfileQuestionTargetCriteria_PQQ" +
                    "uestionID, \r\n            True AS _from0\r\n        FROM BaseDbContext.ProfileQuest" +
                    "ionTargetCriterias AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionTargetLocation", @"
    SELECT VALUE -- Constructing ProfileQuestionTargetLocation
        [SMDModel.Store.ProfileQuestionTargetLocation](T1.ProfileQuestionTargetLocation_ID, T1.ProfileQuestionTargetLocation_PQID, T1.ProfileQuestionTargetLocation_CountryID, T1.ProfileQuestionTargetLocation_CityID, T1.ProfileQuestionTargetLocation_Radius, T1.ProfileQuestionTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS ProfileQuestionTargetLocation_ID, 
            T.PQID AS ProfileQuestionTargetLocation_PQID, 
            T.CountryID AS ProfileQuestionTargetLocation_CountryID, 
            T.CityID AS ProfileQuestionTargetLocation_CityID, 
            T.Radius AS ProfileQuestionTargetLocation_Radius, 
            T.IncludeorExclude AS ProfileQuestionTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CouponPriceOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CouponPriceOption", @"
    SELECT VALUE -- Constructing CouponPriceOption
        [SMDModel.Store.CouponPriceOption](T1.CouponPriceOption_CouponPriceOptionId, T1.CouponPriceOption_CouponId, T1.CouponPriceOption_Description, T1.CouponPriceOption_Price, T1.CouponPriceOption_Savings, T1.CouponPriceOption_VoucherCode, T1.CouponPriceOption_OptionUrl, T1.CouponPriceOption_ExpiryDate, T1.CouponPriceOption_URL, T1.CouponPriceOption_VoucherCode2, T1.CouponPriceOption_VoucherCode3, T1.CouponPriceOption_VoucherCode4)
    FROM (
        SELECT 
            T.CouponPriceOptionId AS CouponPriceOption_CouponPriceOptionId, 
            T.CouponId AS CouponPriceOption_CouponId, 
            T.Description AS CouponPriceOption_Description, 
            T.Price AS CouponPriceOption_Price, 
            T.Savings AS CouponPriceOption_Savings, 
            T.VoucherCode AS CouponPriceOption_VoucherCode, 
            T.OptionUrl AS CouponPriceOption_OptionUrl, 
            T.ExpiryDate AS CouponPriceOption_ExpiryDate, 
            T.URL AS CouponPriceOption_URL, 
            T.VoucherCode2 AS CouponPriceOption_VoucherCode2, 
            T.VoucherCode3 AS CouponPriceOption_VoucherCode3, 
            T.VoucherCode4 AS CouponPriceOption_VoucherCode4, 
            True AS _from0
        FROM BaseDbContext.CouponPriceOptions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4522);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Company\r\n        [SMDModel.Store.Company](T1.");
            viewString.Append("Company_CompanyId, T1.Company_CompanyName, T1.Company_ReplyEmail, T1.Company_Tel");
            viewString.Append("1, T1.Company_Tel2, T1.Company_AddressLine1, T1.Company_AddressLine2, T1.Company");
            viewString.Append("_State, T1.Company_CountryId, T1.Company_ZipCode, T1.Company_TimeZone, T1.Compan");
            viewString.Append("y_Logo, T1.Company_StripeCustomerId, T1.Company_RegisteredViaReferral, T1.Compan");
            viewString.Append("y_ReferringCompanyID, T1.Company_PaypalCustomerId, T1.Company_GoogleWalletCustom");
            viewString.Append("erId, T1.Company_PreferredPayoutAccount, T1.Company_SalesEmail, T1.Company_Refer");
            viewString.Append("ralCode, T1.Company_AfilliatianStatus, T1.Company_WebsiteLink, T1.Company_Compan");
            viewString.Append("yType, T1.Company_BillingAddressLine1, T1.Company_BillingAddressLine2, T1.Compan");
            viewString.Append("y_BillingState, T1.Company_BillingCountryId, T1.Company_BillingZipCode, T1.Compa");
            viewString.Append("ny_BillingPhone, T1.Company_BillingEmail, T1.Company_TwitterHandle, T1.Company_F");
            viewString.Append("acebookHandle, T1.Company_InstagramHandle, T1.Company_PinterestHandle, T1.Compan");
            viewString.Append("y_VoucherSecretKey, T1.Company_City, T1.Company_BillingCity, T1.Company_AboutUsD");
            viewString.Append("escription, T1.Company_Status, T1.Company_PaymentMethodStatus, T1.Company_LastPa");
            viewString.Append("ymentMethodErrorDate, T1.Company_LastPaymentMethodError, T1.Company_CompanyRegNo");
            viewString.Append(", T1.Company_TaxRegNo, T1.Company_CreationDateTime, T1.Company_NoOfBranches, T1.");
            viewString.Append("Company_BillingAddressName, T1.Company_IsDeleted, T1.Company_DeleteDate, T1.Comp");
            viewString.Append("any_IsSpecialAccount, T1.Company_StripeSubscriptionId, T1.Company_StripeSubscrip");
            viewString.Append("tionStatus)\r\n    FROM (\r\n        SELECT \r\n            T.CompanyId AS Company_Com");
            viewString.Append("panyId, \r\n            T.CompanyName AS Company_CompanyName, \r\n            T.Repl");
            viewString.Append("yEmail AS Company_ReplyEmail, \r\n            T.Tel1 AS Company_Tel1, \r\n          ");
            viewString.Append("  T.Tel2 AS Company_Tel2, \r\n            T.AddressLine1 AS Company_AddressLine1, ");
            viewString.Append("\r\n            T.AddressLine2 AS Company_AddressLine2, \r\n            T.State AS C");
            viewString.Append("ompany_State, \r\n            T.CountryId AS Company_CountryId, \r\n            T.Zi");
            viewString.Append("pCode AS Company_ZipCode, \r\n            T.TimeZone AS Company_TimeZone, \r\n      ");
            viewString.Append("      T.Logo AS Company_Logo, \r\n            T.StripeCustomerId AS Company_Stripe");
            viewString.Append("CustomerId, \r\n            T.RegisteredViaReferral AS Company_RegisteredViaReferr");
            viewString.Append("al, \r\n            T.ReferringCompanyID AS Company_ReferringCompanyID, \r\n        ");
            viewString.Append("    T.PaypalCustomerId AS Company_PaypalCustomerId, \r\n            T.GoogleWallet");
            viewString.Append("CustomerId AS Company_GoogleWalletCustomerId, \r\n            T.PreferredPayoutAcc");
            viewString.Append("ount AS Company_PreferredPayoutAccount, \r\n            T.SalesEmail AS Company_Sa");
            viewString.Append("lesEmail, \r\n            T.ReferralCode AS Company_ReferralCode, \r\n            T.");
            viewString.Append("AfilliatianStatus AS Company_AfilliatianStatus, \r\n            T.WebsiteLink AS C");
            viewString.Append("ompany_WebsiteLink, \r\n            T.CompanyType AS Company_CompanyType, \r\n      ");
            viewString.Append("      T.BillingAddressLine1 AS Company_BillingAddressLine1, \r\n            T.Bill");
            viewString.Append("ingAddressLine2 AS Company_BillingAddressLine2, \r\n            T.BillingState AS ");
            viewString.Append("Company_BillingState, \r\n            T.BillingCountryId AS Company_BillingCountry");
            viewString.Append("Id, \r\n            T.BillingZipCode AS Company_BillingZipCode, \r\n            T.Bi");
            viewString.Append("llingPhone AS Company_BillingPhone, \r\n            T.BillingEmail AS Company_Bill");
            viewString.Append("ingEmail, \r\n            T.TwitterHandle AS Company_TwitterHandle, \r\n            ");
            viewString.Append("T.FacebookHandle AS Company_FacebookHandle, \r\n            T.InstagramHandle AS C");
            viewString.Append("ompany_InstagramHandle, \r\n            T.PinterestHandle AS Company_PinterestHand");
            viewString.Append("le, \r\n            T.VoucherSecretKey AS Company_VoucherSecretKey, \r\n            ");
            viewString.Append("T.City AS Company_City, \r\n            T.BillingCity AS Company_BillingCity, \r\n  ");
            viewString.Append("          T.AboutUsDescription AS Company_AboutUsDescription, \r\n            T.St");
            viewString.Append("atus AS Company_Status, \r\n            T.PaymentMethodStatus AS Company_PaymentMe");
            viewString.Append("thodStatus, \r\n            T.LastPaymentMethodErrorDate AS Company_LastPaymentMet");
            viewString.Append("hodErrorDate, \r\n            T.LastPaymentMethodError AS Company_LastPaymentMetho");
            viewString.Append("dError, \r\n            T.CompanyRegNo AS Company_CompanyRegNo, \r\n            T.Ta");
            viewString.Append("xRegNo AS Company_TaxRegNo, \r\n            T.CreationDateTime AS Company_Creation");
            viewString.Append("DateTime, \r\n            T.NoOfBranches AS Company_NoOfBranches, \r\n            T.");
            viewString.Append("BillingAddressName AS Company_BillingAddressName, \r\n            T.IsDeleted AS C");
            viewString.Append("ompany_IsDeleted, \r\n            T.DeleteDate AS Company_DeleteDate, \r\n          ");
            viewString.Append("  T.IsSpecialAccount AS Company_IsSpecialAccount, \r\n            T.StripeSubscrip");
            viewString.Append("tionId AS Company_StripeSubscriptionId, \r\n            T.StripeSubscriptionStatus");
            viewString.Append(" AS Company_StripeSubscriptionStatus, \r\n            True AS _from0\r\n        FROM");
            viewString.Append(" BaseDbContext.Companies AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Company", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.City
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.City", @"
    SELECT VALUE -- Constructing City
        [SMDModel.Store.City](T1.City_CityId, T1.City_CityName, T1.City_IsCapital, T1.City_CountryId, T1.City_GeoLONG, T1.City_GeoLAT)
    FROM (
        SELECT 
            T.CityId AS City_CityId, 
            T.CityName AS City_CityName, 
            T.IsCapital AS City_IsCapital, 
            T.CountryId AS City_CountryId, 
            T.GeoLONG AS City_GeoLONG, 
            T.GeoLAT AS City_GeoLAT, 
            True AS _from0
        FROM BaseDbContext.Cities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CampaignEventHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CampaignEventHistory", @"
    SELECT VALUE -- Constructing CampaignEventHistory
        [SMDModel.Store.CampaignEventHistory](T1.CampaignEventHistory_EventId, T1.CampaignEventHistory_EventStatusId, T1.CampaignEventHistory_CampaignID, T1.CampaignEventHistory_EventDateTime, T1.CampaignEventHistory_CouponId, T1.CampaignEventHistory_SQID, T1.CampaignEventHistory_PQID)
    FROM (
        SELECT 
            T.EventId AS CampaignEventHistory_EventId, 
            T.EventStatusId AS CampaignEventHistory_EventStatusId, 
            T.CampaignID AS CampaignEventHistory_CampaignID, 
            T.EventDateTime AS CampaignEventHistory_EventDateTime, 
            T.CouponId AS CampaignEventHistory_CouponId, 
            T.SQID AS CampaignEventHistory_SQID, 
            T.PQID AS CampaignEventHistory_PQID, 
            True AS _from0
        FROM BaseDbContext.CampaignEventHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.EventStatuses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.EventStatuses", @"
    SELECT VALUE -- Constructing EventStatuses
        [SMDModel.Store.EventStatuses](T1.EventStatuses_EventStatusId, T1.EventStatuses_EventName)
    FROM (
        SELECT 
            T.EventStatusId AS EventStatuses_EventStatusId, 
            T.EventName AS EventStatuses_EventName, 
            True AS _from0
        FROM BaseDbContext.EventStatuses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignClickRateHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignClickRateHistory", @"
    SELECT VALUE -- Constructing AdCampaignClickRateHistory
        [SMDModel.Store.AdCampaignClickRateHistory](T1.AdCampaignClickRateHistory_ClickRateId, T1.AdCampaignClickRateHistory_CampaignID, T1.AdCampaignClickRateHistory_ClickRate, T1.AdCampaignClickRateHistory_RateChangeDateTime)
    FROM (
        SELECT 
            T.ClickRateId AS AdCampaignClickRateHistory_ClickRateId, 
            T.CampaignID AS AdCampaignClickRateHistory_CampaignID, 
            T.ClickRate AS AdCampaignClickRateHistory_ClickRate, 
            T.RateChangeDateTime AS AdCampaignClickRateHistory_RateChangeDateTime, 
            True AS _from0
        FROM BaseDbContext.AdCampaignClickRateHistories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.PayOutHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.PayOutHistory", "\r\n    SELECT VALUE -- Constructing PayOutHistory\r\n        [SMDModel.Store.PayOutH" +
                    "istory](T1.PayOutHistory_PayOutId, T1.PayOutHistory_CompanyId, T1.PayOutHistory_" +
                    "RequestDateTime, T1.PayOutHistory_CentzAmount, T1.PayOutHistory_DollarAmount, T1" +
                    ".PayOutHistory_StageOneStatus, T1.PayOutHistory_StageOneRejectionReason, T1.PayO" +
                    "utHistory_StageOneEventDate, T1.PayOutHistory_StageOneUserId, T1.PayOutHistory_S" +
                    "tageTwoStatus, T1.PayOutHistory_StageTwoRejectionReason, T1.PayOutHistory_StageT" +
                    "woEventDate, T1.PayOutHistory_StageTwoUserId, T1.PayOutHistory_TargetPayoutAccou" +
                    "nt)\r\n    FROM (\r\n        SELECT \r\n            T.PayOutId AS PayOutHistory_PayOut" +
                    "Id, \r\n            T.CompanyId AS PayOutHistory_CompanyId, \r\n            T.Reques" +
                    "tDateTime AS PayOutHistory_RequestDateTime, \r\n            T.CentzAmount AS PayOu" +
                    "tHistory_CentzAmount, \r\n            T.DollarAmount AS PayOutHistory_DollarAmount" +
                    ", \r\n            T.StageOneStatus AS PayOutHistory_StageOneStatus, \r\n            " +
                    "T.StageOneRejectionReason AS PayOutHistory_StageOneRejectionReason, \r\n          " +
                    "  T.StageOneEventDate AS PayOutHistory_StageOneEventDate, \r\n            T.StageO" +
                    "neUserId AS PayOutHistory_StageOneUserId, \r\n            T.StageTwoStatus AS PayO" +
                    "utHistory_StageTwoStatus, \r\n            T.StageTwoRejectionReason AS PayOutHisto" +
                    "ry_StageTwoRejectionReason, \r\n            T.StageTwoEventDate AS PayOutHistory_S" +
                    "tageTwoEventDate, \r\n            T.StageTwoUserId AS PayOutHistory_StageTwoUserId" +
                    ", \r\n            T.TargetPayoutAccount AS PayOutHistory_TargetPayoutAccount, \r\n  " +
                    "          True AS _from0\r\n        FROM BaseDbContext.PayOutHistories AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionUserAnswer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionUserAnswer", @"
    SELECT VALUE -- Constructing ProfileQuestionUserAnswer
        [SMDModel.Store.ProfileQuestionUserAnswer](T1.ProfileQuestionUserAnswer_PQUAnswerID, T1.ProfileQuestionUserAnswer_PQID, T1.ProfileQuestionUserAnswer_UserID, T1.ProfileQuestionUserAnswer_AnswerDateTime, T1.ProfileQuestionUserAnswer_PQAnswerID, T1.ProfileQuestionUserAnswer_CompanyId, T1.ProfileQuestionUserAnswer_ResponseType)
    FROM (
        SELECT 
            T.PQUAnswerID AS ProfileQuestionUserAnswer_PQUAnswerID, 
            T.PQID AS ProfileQuestionUserAnswer_PQID, 
            T.UserID AS ProfileQuestionUserAnswer_UserID, 
            T.AnswerDateTime AS ProfileQuestionUserAnswer_AnswerDateTime, 
            T.PQAnswerID AS ProfileQuestionUserAnswer_PQAnswerID, 
            T.CompanyId AS ProfileQuestionUserAnswer_CompanyId, 
            T.ResponseType AS ProfileQuestionUserAnswer_ResponseType, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionUserAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CouponRatingReview
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CouponRatingReview", @"
    SELECT VALUE -- Constructing CouponRatingReview
        [SMDModel.Store.CouponRatingReview](T1.CouponRatingReview_CouponReviewId, T1.CouponRatingReview_CouponId, T1.CouponRatingReview_StarRating, T1.CouponRatingReview_Review, T1.CouponRatingReview_RatingDateTime, T1.CouponRatingReview_UserId, T1.CouponRatingReview_CompanyId, T1.CouponRatingReview_Status, T1.CouponRatingReview_ReviewImage1, T1.CouponRatingReview_ReviewImage2, T1.CouponRatingReview_Reviewimage3)
    FROM (
        SELECT 
            T.CouponReviewId AS CouponRatingReview_CouponReviewId, 
            T.CouponId AS CouponRatingReview_CouponId, 
            T.StarRating AS CouponRatingReview_StarRating, 
            T.Review AS CouponRatingReview_Review, 
            T.RatingDateTime AS CouponRatingReview_RatingDateTime, 
            T.UserId AS CouponRatingReview_UserId, 
            T.CompanyId AS CouponRatingReview_CompanyId, 
            T.Status AS CouponRatingReview_Status, 
            T.ReviewImage1 AS CouponRatingReview_ReviewImage1, 
            T.ReviewImage2 AS CouponRatingReview_ReviewImage2, 
            T.Reviewimage3 AS CouponRatingReview_Reviewimage3, 
            True AS _from0
        FROM BaseDbContext.CouponRatingReviews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.UserGameResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.UserGameResponse", @"
    SELECT VALUE -- Constructing UserGameResponse
        [SMDModel.Store.UserGameResponse](T1.UserGameResponse_UserGameResponseId, T1.UserGameResponse_UserId, T1.UserGameResponse_GameId, T1.UserGameResponse_ResponseDateTime, T1.UserGameResponse_PlayTime, T1.UserGameResponse_Score, T1.UserGameResponse_Accuracy, T1.UserGameResponse_AdCampaignResponseID)
    FROM (
        SELECT 
            T.UserGameResponseId AS UserGameResponse_UserGameResponseId, 
            T.UserId AS UserGameResponse_UserId, 
            T.GameId AS UserGameResponse_GameId, 
            T.ResponseDateTime AS UserGameResponse_ResponseDateTime, 
            T.PlayTime AS UserGameResponse_PlayTime, 
            T.Score AS UserGameResponse_Score, 
            T.Accuracy AS UserGameResponse_Accuracy, 
            T.AdCampaignResponseID AS UserGameResponse_AdCampaignResponseID, 
            True AS _from0
        FROM BaseDbContext.UserGameResponses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.UserCouponCategoryClicks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.UserCouponCategoryClicks", @"
    SELECT VALUE -- Constructing UserCouponCategoryClicks
        [SMDModel.Store.UserCouponCategoryClicks](T1.UserCouponCategoryClicks_UserCouponCategoryClick, T1.UserCouponCategoryClicks_CouponCategoryId, T1.UserCouponCategoryClicks_UserId, T1.UserCouponCategoryClicks_ClickDateTime)
    FROM (
        SELECT 
            T.UserCouponCategoryClick1 AS UserCouponCategoryClicks_UserCouponCategoryClick, 
            T.CouponCategoryId AS UserCouponCategoryClicks_CouponCategoryId, 
            T.UserId AS UserCouponCategoryClicks_UserId, 
            T.ClickDateTime AS UserCouponCategoryClicks_ClickDateTime, 
            True AS _from0
        FROM BaseDbContext.UserCouponCategoryClicks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserRoles", @"
    SELECT VALUE -- Constructing AspNetUserRoles
        [SMDModel.Store.AspNetUserRoles](T1.AspNetUserRoles_UserId, T1.AspNetUserRoles_RoleId)
    FROM (
        SELECT 
            Key(T.AspNetUser).Id AS AspNetUserRoles_UserId, 
            Key(T.Role).Id AS AspNetUserRoles_RoleId, 
            True AS _from0
        FROM BaseDbContext.AspNetUserRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Roles", @"
    SELECT VALUE -- Constructing Roles
        [DomainModels.Role](T1.Role_Id, T1.Role_Name)
    FROM (
        SELECT 
            T.Id AS Role_Id, 
            T.Name AS Role_Name, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserLogins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserLogins", @"
    SELECT VALUE -- Constructing UserLogins
        [DomainModels.UserLogin](T1.UserLogin_LoginProvider, T1.UserLogin_ProviderKey, T1.UserLogin_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS UserLogin_LoginProvider, 
            T.ProviderKey AS UserLogin_ProviderKey, 
            T.UserId AS UserLogin_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetUserLogins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3059);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProfileQuestions\r\n        [DomainModels.Profi");
            viewString.Append("leQuestion](T1.ProfileQuestion_PqId, T1.ProfileQuestion_LanguageId, T1.ProfileQu");
            viewString.Append("estion_CountryId, T1.ProfileQuestion_ProfileGroupId, T1.ProfileQuestion_Priority");
            viewString.Append(", T1.ProfileQuestion_Type, T1.ProfileQuestion_Question, T1.ProfileQuestion_Refre");
            viewString.Append("shTime, T1.ProfileQuestion_SkippedCount, T1.ProfileQuestion_CreationDate, T1.Pro");
            viewString.Append("fileQuestion_CreatedBy, T1.ProfileQuestion_ModifiedDate, T1.ProfileQuestion_Modi");
            viewString.Append("fiedBy, T1.ProfileQuestion_HasLinkedQuestions, T1.ProfileQuestion_PenalityForNot");
            viewString.Append("Answering, T1.ProfileQuestion_Status, T1.ProfileQuestion_CompanyId, T1.ProfileQu");
            viewString.Append("estion_AnswerNeeded, T1.ProfileQuestion_AsnswerCount, T1.ProfileQuestion_Submiss");
            viewString.Append("ionDateTime, T1.ProfileQuestion_AgeRangeStart, T1.ProfileQuestion_AgeRangeEnd, T");
            viewString.Append("1.ProfileQuestion_Gender, T1.ProfileQuestion_Approved, T1.ProfileQuestion_Approv");
            viewString.Append("edByUserID, T1.ProfileQuestion_ApprovalDate, T1.ProfileQuestion_RejectionReason,");
            viewString.Append(" T1.ProfileQuestion_UserID, T1.ProfileQuestion_AmountCharged, T1.ProfileQuestion");
            viewString.Append("_StartDate, T1.ProfileQuestion_EndDate)\r\n    FROM (\r\n        SELECT \r\n          ");
            viewString.Append("  T.PQID AS ProfileQuestion_PqId, \r\n            T.LanguageID AS ProfileQuestion_");
            viewString.Append("LanguageId, \r\n            T.CountryID AS ProfileQuestion_CountryId, \r\n          ");
            viewString.Append("  T.ProfileGroupID AS ProfileQuestion_ProfileGroupId, \r\n            T.Priority A");
            viewString.Append("S ProfileQuestion_Priority, \r\n            T.Type AS ProfileQuestion_Type, \r\n    ");
            viewString.Append("        T.Question AS ProfileQuestion_Question, \r\n            T.RefreshTime AS P");
            viewString.Append("rofileQuestion_RefreshTime, \r\n            T.SkippedCount AS ProfileQuestion_Skip");
            viewString.Append("pedCount, \r\n            T.CreationDate AS ProfileQuestion_CreationDate, \r\n      ");
            viewString.Append("      T.CreatedBy AS ProfileQuestion_CreatedBy, \r\n            T.ModifiedDate AS ");
            viewString.Append("ProfileQuestion_ModifiedDate, \r\n            T.ModifiedBy AS ProfileQuestion_Modi");
            viewString.Append("fiedBy, \r\n            T.HasLinkedQuestions AS ProfileQuestion_HasLinkedQuestions");
            viewString.Append(", \r\n            T.PenalityForNotAnswering AS ProfileQuestion_PenalityForNotAnswe");
            viewString.Append("ring, \r\n            T.Status AS ProfileQuestion_Status, \r\n            T.CompanyI");
            viewString.Append("d AS ProfileQuestion_CompanyId, \r\n            T.AnswerNeeded AS ProfileQuestion_");
            viewString.Append("AnswerNeeded, \r\n            T.AsnswerCount AS ProfileQuestion_AsnswerCount, \r\n  ");
            viewString.Append("          T.SubmissionDateTime AS ProfileQuestion_SubmissionDateTime, \r\n        ");
            viewString.Append("    T.AgeRangeStart AS ProfileQuestion_AgeRangeStart, \r\n            T.AgeRangeEn");
            viewString.Append("d AS ProfileQuestion_AgeRangeEnd, \r\n            T.Gender AS ProfileQuestion_Gend");
            viewString.Append("er, \r\n            T.Approved AS ProfileQuestion_Approved, \r\n            T.Approv");
            viewString.Append("edByUserID AS ProfileQuestion_ApprovedByUserID, \r\n            T.ApprovalDate AS ");
            viewString.Append("ProfileQuestion_ApprovalDate, \r\n            T.RejectionReason AS ProfileQuestion");
            viewString.Append("_RejectionReason, \r\n            T.UserID AS ProfileQuestion_UserID, \r\n          ");
            viewString.Append("  T.AmountCharged AS ProfileQuestion_AmountCharged, \r\n            T.StartDate AS");
            viewString.Append(" ProfileQuestion_StartDate, \r\n            T.EndDate AS ProfileQuestion_EndDate, ");
            viewString.Append("\r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.ProfileQuestio");
            viewString.Append("n AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionAnswers", "\r\n    SELECT VALUE -- Constructing ProfileQuestionAnswers\r\n        [DomainModels." +
                    "ProfileQuestionAnswer](T1.ProfileQuestionAnswer_PqAnswerId, T1.ProfileQuestionAn" +
                    "swer_PqId, T1.ProfileQuestionAnswer_Type, T1.ProfileQuestionAnswer_AnswerString," +
                    " T1.ProfileQuestionAnswer_ImagePath, T1.ProfileQuestionAnswer_SortOrder, T1.Prof" +
                    "ileQuestionAnswer_LinkedQuestion1Id, T1.ProfileQuestionAnswer_LinkedQuestion2Id," +
                    " T1.ProfileQuestionAnswer_LinkedQuestion3Id, T1.ProfileQuestionAnswer_LinkedQues" +
                    "tion4Id, T1.ProfileQuestionAnswer_LinkedQuestion5Id, T1.ProfileQuestionAnswer_Li" +
                    "nkedQuestion6Id, T1.ProfileQuestionAnswer_Status)\r\n    FROM (\r\n        SELECT \r\n" +
                    "            T.PQAnswerID AS ProfileQuestionAnswer_PqAnswerId, \r\n            T.PQ" +
                    "ID AS ProfileQuestionAnswer_PqId, \r\n            T.type AS ProfileQuestionAnswer_" +
                    "Type, \r\n            T.AnswerString AS ProfileQuestionAnswer_AnswerString, \r\n    " +
                    "        T.ImagePath AS ProfileQuestionAnswer_ImagePath, \r\n            T.SortOrde" +
                    "r AS ProfileQuestionAnswer_SortOrder, \r\n            T.LinkedQuestion1ID AS Profi" +
                    "leQuestionAnswer_LinkedQuestion1Id, \r\n            T.LinkedQuestion2ID AS Profile" +
                    "QuestionAnswer_LinkedQuestion2Id, \r\n            T.LinkedQuestion3ID AS ProfileQu" +
                    "estionAnswer_LinkedQuestion3Id, \r\n            T.LinkedQuestion4ID AS ProfileQues" +
                    "tionAnswer_LinkedQuestion4Id, \r\n            T.LinkedQuestion5ID AS ProfileQuesti" +
                    "onAnswer_LinkedQuestion5Id, \r\n            T.LinkedQuestion6ID AS ProfileQuestion" +
                    "Answer_LinkedQuestion6Id, \r\n            T.Status AS ProfileQuestionAnswer_Status" +
                    ", \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.ProfileQuest" +
                    "ionAnswer AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionGroups", @"
    SELECT VALUE -- Constructing ProfileQuestionGroups
        [DomainModels.ProfileQuestionGroup](T1.ProfileQuestionGroup_ProfileGroupId, T1.ProfileQuestionGroup_ProfileGroupName, T1.ProfileQuestionGroup_ImagePath, T1.ProfileQuestionGroup_LangaugeId, T1.ProfileQuestionGroup_CountryId)
    FROM (
        SELECT 
            T.ProfileGroupID AS ProfileQuestionGroup_ProfileGroupId, 
            T.ProfileGroupName AS ProfileQuestionGroup_ProfileGroupName, 
            T.ImagePath AS ProfileQuestionGroup_ImagePath, 
            T.LangaugeID AS ProfileQuestionGroup_LangaugeId, 
            T.CountryID AS ProfileQuestionGroup_CountryId, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserClaims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserClaims", @"
    SELECT VALUE -- Constructing UserClaims
        [DomainModels.UserClaim](T1.UserClaim_Id, T1.UserClaim_UserId, T1.UserClaim_ClaimType, T1.UserClaim_ClaimValue)
    FROM (
        SELECT 
            T.Id AS UserClaim_Id, 
            T.UserId AS UserClaim_UserId, 
            T.ClaimType AS UserClaim_ClaimType, 
            T.ClaimValue AS UserClaim_ClaimValue, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetUserClaims AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Countries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Countries", @"
    SELECT VALUE -- Constructing Countries
        [DomainModels.Country](T1.Country_CountryId, T1.Country_CountryName, T1.Country_CountryCode, T1.Country_CurrencyID, T1.Country_CountryPhoneCode)
    FROM (
        SELECT 
            T.CountryID AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            T.CountryCode AS Country_CountryCode, 
            T.CurrencyID AS Country_CurrencyID, 
            T.CountryPhoneCode AS Country_CountryPhoneCode, 
            True AS _from0
        FROM SMDModelStoreContainer.Country AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Languages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Languages", @"
    SELECT VALUE -- Constructing Languages
        [DomainModels.Language](T1.Language_LanguageId, T1.Language_LanguageName, T1.Language_NativeName)
    FROM (
        SELECT 
            T.LanguageID AS Language_LanguageId, 
            T.LanguageName AS Language_LanguageName, 
            T.NativeName AS Language_NativeName, 
            True AS _from0
        FROM SMDModelStoreContainer.Language AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignTargetLocations", @"
    SELECT VALUE -- Constructing AdCampaignTargetLocations
        [DomainModels.AdCampaignTargetLocation](T1.AdCampaignTargetLocation_Id, T1.AdCampaignTargetLocation_CampaignId, T1.AdCampaignTargetLocation_CountryId, T1.AdCampaignTargetLocation_CityId, T1.AdCampaignTargetLocation_Radius, T1.AdCampaignTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS AdCampaignTargetLocation_Id, 
            T.CampaignID AS AdCampaignTargetLocation_CampaignId, 
            T.CountryID AS AdCampaignTargetLocation_CountryId, 
            T.CityID AS AdCampaignTargetLocation_CityId, 
            T.Radius AS AdCampaignTargetLocation_Radius, 
            T.IncludeorExclude AS AdCampaignTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionTargetCriterias", "\r\n    SELECT VALUE -- Constructing SurveyQuestionTargetCriterias\r\n        [Domain" +
                    "Models.SurveyQuestionTargetCriteria](T1.SurveyQuestionTargetCriteria_Id, T1.Surv" +
                    "eyQuestionTargetCriteria_SqId, T1.SurveyQuestionTargetCriteria_Type, T1.SurveyQu" +
                    "estionTargetCriteria_PqId, T1.SurveyQuestionTargetCriteria_PqAnswerId, T1.Survey" +
                    "QuestionTargetCriteria_LinkedSqId, T1.SurveyQuestionTargetCriteria_LinkedSqAnswe" +
                    "r, T1.SurveyQuestionTargetCriteria_IncludeorExclude, T1.SurveyQuestionTargetCrit" +
                    "eria_LanguageId, T1.SurveyQuestionTargetCriteria_IndustryId, T1.SurveyQuestionTa" +
                    "rgetCriteria_EducationId, T1.SurveyQuestionTargetCriteria_QuizCampaignId, T1.Sur" +
                    "veyQuestionTargetCriteria_QuizAnswerId)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.ID AS SurveyQuestionTargetCriteria_Id, \r\n            T.SQID AS SurveyQuestio" +
                    "nTargetCriteria_SqId, \r\n            T.Type AS SurveyQuestionTargetCriteria_Type," +
                    " \r\n            T.PQID AS SurveyQuestionTargetCriteria_PqId, \r\n            T.PQAn" +
                    "swerID AS SurveyQuestionTargetCriteria_PqAnswerId, \r\n            T.LinkedSQID AS" +
                    " SurveyQuestionTargetCriteria_LinkedSqId, \r\n            T.LinkedSQAnswer AS Surv" +
                    "eyQuestionTargetCriteria_LinkedSqAnswer, \r\n            T.IncludeorExclude AS Sur" +
                    "veyQuestionTargetCriteria_IncludeorExclude, \r\n            T.LanguageID AS Survey" +
                    "QuestionTargetCriteria_LanguageId, \r\n            T.IndustryID AS SurveyQuestionT" +
                    "argetCriteria_IndustryId, \r\n            T.EducationID AS SurveyQuestionTargetCri" +
                    "teria_EducationId, \r\n            T.QuizCampaignId AS SurveyQuestionTargetCriteri" +
                    "a_QuizCampaignId, \r\n            T.QuizAnswerId AS SurveyQuestionTargetCriteria_Q" +
                    "uizAnswerId, \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.S" +
                    "urveyQuestionTargetCriteria AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionTargetLocations", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetLocations
        [DomainModels.SurveyQuestionTargetLocation](T1.SurveyQuestionTargetLocation_Id, T1.SurveyQuestionTargetLocation_SqId, T1.SurveyQuestionTargetLocation_CountryId, T1.SurveyQuestionTargetLocation_CityId, T1.SurveyQuestionTargetLocation_Radius, T1.SurveyQuestionTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS SurveyQuestionTargetLocation_Id, 
            T.SQID AS SurveyQuestionTargetLocation_SqId, 
            T.CountryID AS SurveyQuestionTargetLocation_CountryId, 
            T.CityID AS SurveyQuestionTargetLocation_CityId, 
            T.Radius AS SurveyQuestionTargetLocation_Radius, 
            T.IncludeorExclude AS SurveyQuestionTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Industries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Industries", @"
    SELECT VALUE -- Constructing Industries
        [DomainModels.Industry](T1.Industry_IndustryId, T1.Industry_IndustryName, T1.Industry_Status)
    FROM (
        SELECT 
            T.IndustryID AS Industry_IndustryId, 
            T.IndustryName AS Industry_IndustryName, 
            T.Status AS Industry_Status, 
            True AS _from0
        FROM SMDModelStoreContainer.Industry AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Currencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Currencies", @"
    SELECT VALUE -- Constructing Currencies
        [DomainModels.Currency](T1.Currency_CurrencyId, T1.Currency_Name, T1.Currency_CurrencyCode, T1.Currency_SMDCreditRatio, T1.Currency_CurrencySymbol)
    FROM (
        SELECT 
            T.CurrencyID AS Currency_CurrencyId, 
            T.Name AS Currency_Name, 
            T.CurrencyCode AS Currency_CurrencyCode, 
            T.SMDCreditRatio AS Currency_SMDCreditRatio, 
            T.CurrencySymbol AS Currency_CurrencySymbol, 
            True AS _from0
        FROM SMDModelStoreContainer.Currency AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Transactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Transactions", "\r\n    SELECT VALUE -- Constructing Transactions\r\n        [DomainModels.Transactio" +
                    "n](T1.Transaction_TxId, T1.Transaction_TransactionDate, T1.Transaction_Type, T1." +
                    "Transaction_DebitCredit, T1.Transaction_CreditAmount, T1.Transaction_DebitAmount" +
                    ", T1.Transaction_AccountId, T1.Transaction_TaxPerc, T1.Transaction_TaxValue, T1." +
                    "Transaction_AdCampaignId, T1.Transaction_SQId, T1.Transaction_isProcessed, T1.Tr" +
                    "ansaction_CurrencyId, T1.Transaction_CurrencyRateId, T1.Transaction_Sequence, T1" +
                    ".Transaction_AccountBalance, T1.Transaction_CouponId, T1.Transaction_PQID)\r\n    " +
                    "FROM (\r\n        SELECT \r\n            T.TxID AS Transaction_TxId, \r\n            T" +
                    ".TransactionDate AS Transaction_TransactionDate, \r\n            T.Type AS Transac" +
                    "tion_Type, \r\n            T.DebitCredit AS Transaction_DebitCredit, \r\n           " +
                    " T.CreditAmount AS Transaction_CreditAmount, \r\n            T.DebitAmount AS Tran" +
                    "saction_DebitAmount, \r\n            T.AccountID AS Transaction_AccountId, \r\n     " +
                    "       T.TaxPerc AS Transaction_TaxPerc, \r\n            T.TaxValue AS Transaction" +
                    "_TaxValue, \r\n            T.AdCampaignID AS Transaction_AdCampaignId, \r\n         " +
                    "   T.SQID AS Transaction_SQId, \r\n            T.isProcessed AS Transaction_isProc" +
                    "essed, \r\n            T.CurrencyID AS Transaction_CurrencyId, \r\n            T.Cur" +
                    "rencyRateID AS Transaction_CurrencyRateId, \r\n            T.Sequence AS Transacti" +
                    "on_Sequence, \r\n            T.AccountBalance AS Transaction_AccountBalance, \r\n   " +
                    "         T.CouponId AS Transaction_CouponId, \r\n            T.PQID AS Transaction" +
                    "_PQID, \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.Transac" +
                    "tion AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.InvoiceDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.InvoiceDetails", @"
    SELECT VALUE -- Constructing InvoiceDetails
        [DomainModels.InvoiceDetail](T1.InvoiceDetail_InvoiceDetailId, T1.InvoiceDetail_InvoiceId, T1.InvoiceDetail_ItemName, T1.InvoiceDetail_ItemTax, T1.InvoiceDetail_ItemAmount, T1.InvoiceDetail_ItemGrossAmount, T1.InvoiceDetail_ItemDescription, T1.InvoiceDetail_CampaignId, T1.InvoiceDetail_SqId, T1.InvoiceDetail_ProductId, T1.InvoiceDetail_PQID, T1.InvoiceDetail_CouponID)
    FROM (
        SELECT 
            T.InvoiceDetailId AS InvoiceDetail_InvoiceDetailId, 
            T.InvoiceId AS InvoiceDetail_InvoiceId, 
            T.ItemName AS InvoiceDetail_ItemName, 
            T.ItemTax AS InvoiceDetail_ItemTax, 
            T.ItemAmount AS InvoiceDetail_ItemAmount, 
            T.ItemGrossAmount AS InvoiceDetail_ItemGrossAmount, 
            T.ItemDescription AS InvoiceDetail_ItemDescription, 
            T.CampaignId AS InvoiceDetail_CampaignId, 
            T.SQId AS InvoiceDetail_SqId, 
            T.ProductId AS InvoiceDetail_ProductId, 
            T.PQID AS InvoiceDetail_PQID, 
            T.CouponID AS InvoiceDetail_CouponID, 
            True AS _from0
        FROM SMDModelStoreContainer.InvoiceDetail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Taxes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Taxes", @"
    SELECT VALUE -- Constructing Taxes
        [DomainModels.Tax](T1.Tax_TaxId, T1.Tax_TaxName, T1.Tax_TaxValue, T1.Tax_CountryId)
    FROM (
        SELECT 
            T.TaxId AS Tax_TaxId, 
            T.TaxName AS Tax_TaxName, 
            T.TaxValue AS Tax_TaxValue, 
            T.CountryId AS Tax_CountryId, 
            True AS _from0
        FROM SMDModelStoreContainer.Tax AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Educations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Educations", @"
    SELECT VALUE -- Constructing Educations
        [DomainModels.Education](T1.Education_EducationId, T1.Education_Title, T1.Education_Status)
    FROM (
        SELECT 
            T.EducationId AS Education_EducationId, 
            T.Title AS Education_Title, 
            T.Status AS Education_Status, 
            True AS _from0
        FROM SMDModelStoreContainer.Education AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2140);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Products\r\n        [DomainModels.Product](T1.P");
            viewString.Append("roduct_ProductId, T1.Product_CountryId, T1.Product_CurrencyId, T1.Product_Produc");
            viewString.Append("tName, T1.Product_IsActive, T1.Product_SetupPrice, T1.Product_ClickFeePercentage");
            viewString.Append(", T1.Product_AgeClausePrice, T1.Product_AffiliatePercentage, T1.Product_ProductC");
            viewString.Append("ode, T1.Product_GenderClausePrice, T1.Product_LocationClausePrice, T1.Product_Ot");
            viewString.Append("herClausePrice, T1.Product_ProfessionClausePrice, T1.Product_EducationClausePric");
            viewString.Append("e, T1.Product_BuyItClausePrice, T1.Product_QuizQuestionClausePrice, T1.Product_T");
            viewString.Append("enDayDeliveryClausePrice, T1.Product_FiveDayDeliveryClausePrice, T1.Product_Thre");
            viewString.Append("eDayDeliveryClausePrice, T1.Product_VoucherClausePrice)\r\n    FROM (\r\n        SEL");
            viewString.Append("ECT \r\n            T.ProductID AS Product_ProductId, \r\n            T.CountryID AS");
            viewString.Append(" Product_CountryId, \r\n            T.CurrencyID AS Product_CurrencyId, \r\n        ");
            viewString.Append("    T.ProductName AS Product_ProductName, \r\n            T.IsActive AS Product_Is");
            viewString.Append("Active, \r\n            T.SetupPrice AS Product_SetupPrice, \r\n            T.ClickF");
            viewString.Append("eePercentage AS Product_ClickFeePercentage, \r\n            T.AgeClausePrice AS Pr");
            viewString.Append("oduct_AgeClausePrice, \r\n            T.AffiliatePercentage AS Product_AffiliatePe");
            viewString.Append("rcentage, \r\n            T.ProductCode AS Product_ProductCode, \r\n            T.Ge");
            viewString.Append("nderClausePrice AS Product_GenderClausePrice, \r\n            T.LocationClausePric");
            viewString.Append("e AS Product_LocationClausePrice, \r\n            T.OtherClausePrice AS Product_Ot");
            viewString.Append("herClausePrice, \r\n            T.ProfessionClausePrice AS Product_ProfessionClaus");
            viewString.Append("ePrice, \r\n            T.EducationClausePrice AS Product_EducationClausePrice, \r\n");
            viewString.Append("            T.BuyItClausePrice AS Product_BuyItClausePrice, \r\n            T.Quiz");
            viewString.Append("QuestionClausePrice AS Product_QuizQuestionClausePrice, \r\n            T.TenDayDe");
            viewString.Append("liveryClausePrice AS Product_TenDayDeliveryClausePrice, \r\n            T.FiveDayD");
            viewString.Append("eliveryClausePrice AS Product_FiveDayDeliveryClausePrice, \r\n            T.ThreeD");
            viewString.Append("ayDeliveryClausePrice AS Product_ThreeDayDeliveryClausePrice, \r\n            T.Vo");
            viewString.Append("ucherClausePrice AS Product_VoucherClausePrice, \r\n            True AS _from0\r\n  ");
            viewString.Append("      FROM SMDModelStoreContainer.Products AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Products", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Games
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Games", @"
    SELECT VALUE -- Constructing Games
        [DomainModels.Game](T1.Game_GameId, T1.Game_GameName, T1.Game_Status, T1.Game_AgeRangeStart, T1.Game_AgeRangeEnd, T1.Game_GameType, T1.Game_Complexity, T1.Game_GameUrl, T1.Game_GameSmallImage, T1.Game_GameLargeImage, T1.Game_GameInstructions)
    FROM (
        SELECT 
            T.GameId AS Game_GameId, 
            T.GameName AS Game_GameName, 
            T.Status AS Game_Status, 
            T.AgeRangeStart AS Game_AgeRangeStart, 
            T.AgeRangeEnd AS Game_AgeRangeEnd, 
            T.GameType AS Game_GameType, 
            T.Complexity AS Game_Complexity, 
            T.GameUrl AS Game_GameUrl, 
            T.GameSmallImage AS Game_GameSmallImage, 
            T.GameLargeImage AS Game_GameLargeImage, 
            T.GameInstructions AS Game_GameInstructions, 
            True AS _from0
        FROM SMDModelStoreContainer.Game AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.TransactionLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.TransactionLogs", @"
    SELECT VALUE -- Constructing TransactionLogs
        [DomainModels.TransactionLog](T1.TransactionLog_TransactionLogId, T1.TransactionLog_TxId, T1.TransactionLog_LogDate, T1.TransactionLog_Amount, T1.TransactionLog_Type, T1.TransactionLog_FromUser, T1.TransactionLog_ToUser, T1.TransactionLog_IsCompleted, T1.TransactionLog_Description)
    FROM (
        SELECT 
            T.TransactionLogId AS TransactionLog_TransactionLogId, 
            T.TxId AS TransactionLog_TxId, 
            T.LogDate AS TransactionLog_LogDate, 
            T.Amount AS TransactionLog_Amount, 
            T.Type AS TransactionLog_Type, 
            T.FromUser AS TransactionLog_FromUser, 
            T.ToUser AS TransactionLog_ToUser, 
            T.IsCompleted AS TransactionLog_IsCompleted, 
            T.Description AS TransactionLog_Description, 
            True AS _from0
        FROM SMDModelStoreContainer.TransactionLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Accounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Accounts", @"
    SELECT VALUE -- Constructing Accounts
        [DomainModels.Account](T1.Account_AccountId, T1.Account_AccountName, T1.Account_AccountType, T1.Account_AccountBalance, T1.Account_CompanyId)
    FROM (
        SELECT 
            T.AccountId AS Account_AccountId, 
            T.AccountName AS Account_AccountName, 
            T.AccountType AS Account_AccountType, 
            T.AccountBalance AS Account_AccountBalance, 
            T.CompanyId AS Account_CompanyId, 
            True AS _from0
        FROM SMDModelStoreContainer.Account AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Invoices", @"
    SELECT VALUE -- Constructing Invoices
        [DomainModels.Invoice](T1.Invoice_InvoiceId, T1.Invoice_InvoiceDate, T1.Invoice_InvoiceDueDate, T1.Invoice_TaxPercentage, T1.Invoice_Total, T1.Invoice_NetTotal, T1.Invoice_TaxValue, T1.Invoice_CompanyName, T1.Invoice_Address1, T1.Invoice_Address2, T1.Invoice_City, T1.Invoice_State, T1.Invoice_Country, T1.Invoice_ZipCode, T1.Invoice_CreditCardRef, T1.Invoice_CompanyId, T1.Invoice_StripeReceiptNo, T1.Invoice_StripeInvoiceId)
    FROM (
        SELECT 
            T.InvoiceId AS Invoice_InvoiceId, 
            T.InvoiceDate AS Invoice_InvoiceDate, 
            T.InvoiceDueDate AS Invoice_InvoiceDueDate, 
            T.TaxPercentage AS Invoice_TaxPercentage, 
            T.Total AS Invoice_Total, 
            T.NetTotal AS Invoice_NetTotal, 
            T.TaxValue AS Invoice_TaxValue, 
            T.CompanyName AS Invoice_CompanyName, 
            T.Address1 AS Invoice_Address1, 
            T.Address2 AS Invoice_Address2, 
            T.City AS Invoice_City, 
            T.State AS Invoice_State, 
            T.Country AS Invoice_Country, 
            T.ZipCode AS Invoice_ZipCode, 
            T.CreditCardRef AS Invoice_CreditCardRef, 
            T.CompanyId AS Invoice_CompanyId, 
            T.StripeReceiptNo AS Invoice_StripeReceiptNo, 
            T.StripeInvoiceId AS Invoice_StripeInvoiceId, 
            True AS _from0
        FROM SMDModelStoreContainer.Invoice AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3564);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SurveyQuestions\r\n        [DomainModels.Survey");
            viewString.Append("Question](T1.SurveyQuestion_SqId, T1.SurveyQuestion_LanguageId, T1.SurveyQuestio");
            viewString.Append("n_CountryId, T1.SurveyQuestion_Type, T1.SurveyQuestion_UserId, T1.SurveyQuestion");
            viewString.Append("_Status, T1.SurveyQuestion_Question, T1.SurveyQuestion_Description, T1.SurveyQue");
            viewString.Append("stion_RepeatPeriod, T1.SurveyQuestion_DisplayQuestion, T1.SurveyQuestion_StartDa");
            viewString.Append("te, T1.SurveyQuestion_EndDate, T1.SurveyQuestion_Approved, T1.SurveyQuestion_App");
            viewString.Append("rovedByUserId, T1.SurveyQuestion_ApprovalDate, T1.SurveyQuestion_CreationDate, T");
            viewString.Append("1.SurveyQuestion_ModifiedDate, T1.SurveyQuestion_CreatedBy, T1.SurveyQuestion_Mo");
            viewString.Append("difiedBy, T1.SurveyQuestion_LeftPicturePath, T1.SurveyQuestion_RightPicturePath,");
            viewString.Append(" T1.SurveyQuestion_DiscountVoucherApplied, T1.SurveyQuestion_VoucherCode, T1.Sur");
            viewString.Append("veyQuestion_DiscountVoucherId, T1.SurveyQuestion_RejectionReason, T1.SurveyQuest");
            viewString.Append("ion_ProjectedReach, T1.SurveyQuestion_ResultClicks, T1.SurveyQuestion_AgeRangeSt");
            viewString.Append("art, T1.SurveyQuestion_AgeRangeEnd, T1.SurveyQuestion_Gender, T1.SurveyQuestion_");
            viewString.Append("SubmissionDate, T1.SurveyQuestion_ParentSurveyId, T1.SurveyQuestion_Priority, T1");
            viewString.Append(".SurveyQuestion_CompanyId, T1.SurveyQuestion_AnswerNeeded, T1.SurveyQuestion_Amo");
            viewString.Append("untCharged, T1.SurveyQuestion_IsUseFilter)\r\n    FROM (\r\n        SELECT \r\n       ");
            viewString.Append("     T.SQID AS SurveyQuestion_SqId, \r\n            T.LanguageID AS SurveyQuestion");
            viewString.Append("_LanguageId, \r\n            T.CountryID AS SurveyQuestion_CountryId, \r\n          ");
            viewString.Append("  T.Type AS SurveyQuestion_Type, \r\n            T.UserID AS SurveyQuestion_UserId");
            viewString.Append(", \r\n            T.Status AS SurveyQuestion_Status, \r\n            T.Question AS S");
            viewString.Append("urveyQuestion_Question, \r\n            T.Description AS SurveyQuestion_Descriptio");
            viewString.Append("n, \r\n            T.RepeatPeriod AS SurveyQuestion_RepeatPeriod, \r\n            T.");
            viewString.Append("DisplayQuestion AS SurveyQuestion_DisplayQuestion, \r\n            T.StartDate AS ");
            viewString.Append("SurveyQuestion_StartDate, \r\n            T.EndDate AS SurveyQuestion_EndDate, \r\n ");
            viewString.Append("           T.Approved AS SurveyQuestion_Approved, \r\n            T.ApprovedByUser");
            viewString.Append("ID AS SurveyQuestion_ApprovedByUserId, \r\n            T.ApprovalDate AS SurveyQue");
            viewString.Append("stion_ApprovalDate, \r\n            T.CreationDate AS SurveyQuestion_CreationDate,");
            viewString.Append(" \r\n            T.ModifiedDate AS SurveyQuestion_ModifiedDate, \r\n            T.Cr");
            viewString.Append("eatedBy AS SurveyQuestion_CreatedBy, \r\n            T.ModifiedBy AS SurveyQuestio");
            viewString.Append("n_ModifiedBy, \r\n            T.LeftPicturePath AS SurveyQuestion_LeftPicturePath,");
            viewString.Append(" \r\n            T.RightPicturePath AS SurveyQuestion_RightPicturePath, \r\n        ");
            viewString.Append("    T.DiscountVoucherApplied AS SurveyQuestion_DiscountVoucherApplied, \r\n       ");
            viewString.Append("     T.VoucherCode AS SurveyQuestion_VoucherCode, \r\n            T.DiscountVouche");
            viewString.Append("rID AS SurveyQuestion_DiscountVoucherId, \r\n            T.RejectionReason AS Surv");
            viewString.Append("eyQuestion_RejectionReason, \r\n            T.ProjectedReach AS SurveyQuestion_Pro");
            viewString.Append("jectedReach, \r\n            T.ResultClicks AS SurveyQuestion_ResultClicks, \r\n    ");
            viewString.Append("        T.AgeRangeStart AS SurveyQuestion_AgeRangeStart, \r\n            T.AgeRang");
            viewString.Append("eEnd AS SurveyQuestion_AgeRangeEnd, \r\n            T.Gender AS SurveyQuestion_Gen");
            viewString.Append("der, \r\n            T.SubmissionDate AS SurveyQuestion_SubmissionDate, \r\n        ");
            viewString.Append("    T.ParentSurveyId AS SurveyQuestion_ParentSurveyId, \r\n            T.Priority ");
            viewString.Append("AS SurveyQuestion_Priority, \r\n            T.CompanyId AS SurveyQuestion_CompanyI");
            viewString.Append("d, \r\n            T.AnswerNeeded AS SurveyQuestion_AnswerNeeded, \r\n            T.");
            viewString.Append("AmountCharged AS SurveyQuestion_AmountCharged, \r\n            T.IsUseFilter AS Su");
            viewString.Append("rveyQuestion_IsUseFilter, \r\n            True AS _from0\r\n        FROM SMDModelSto");
            viewString.Append("reContainer.SurveyQuestion AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionResponses", @"
    SELECT VALUE -- Constructing SurveyQuestionResponses
        [DomainModels.SurveyQuestionResponse](T1.SurveyQuestionResponse_SqResponseId, T1.SurveyQuestionResponse_SqId, T1.SurveyQuestionResponse_UserId, T1.SurveyQuestionResponse_ResoponseDateTime, T1.SurveyQuestionResponse_UserSelection, T1.SurveyQuestionResponse_SkipCount, T1.SurveyQuestionResponse_CompanyId, T1.SurveyQuestionResponse_ResponseType)
    FROM (
        SELECT 
            T.SQResponseID AS SurveyQuestionResponse_SqResponseId, 
            T.SQID AS SurveyQuestionResponse_SqId, 
            T.UserID AS SurveyQuestionResponse_UserId, 
            T.ResoponseDateTime AS SurveyQuestionResponse_ResoponseDateTime, 
            T.UserSelection AS SurveyQuestionResponse_UserSelection, 
            T.SkipCount AS SurveyQuestionResponse_SkipCount, 
            T.CompanyId AS SurveyQuestionResponse_CompanyId, 
            T.ResponseType AS SurveyQuestionResponse_ResponseType, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionResponse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3772);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Users\r\n        [DomainModels.User](T1.User_Id");
            viewString.Append(", T1.User_Email, T1.User_EmailConfirmed, T1.User_PasswordHash, T1.User_SecurityS");
            viewString.Append("tamp, T1.User_PhoneNumberConfirmed, T1.User_TwoFactorEnabled, T1.User_LockoutEnd");
            viewString.Append("DateUtc, T1.User_LockoutEnabled, T1.User_AccessFailedCount, T1.User_UserName, T1");
            viewString.Append(".User_FullName, T1.User_AlternateEmail, T1.User_IsEmailVerified, T1.User_Status,");
            viewString.Append(" T1.User_CreatedDateTime, T1.User_ModifiedDateTime, T1.User_LastLoginTime, T1.Us");
            viewString.Append("er_Phone1, T1.User_Phone2, T1.User_Jobtitle, T1.User_ContactNotes, T1.User_IsSub");
            viewString.Append("scribed, T1.User_AppID, T1.User_IsCompanyRepresentative, T1.User_UserTimeZone, T");
            viewString.Append("1.User_Gender, T1.User_LanguageId, T1.User_IndustryId, T1.User_EducationId, T1.U");
            viewString.Append("ser_ProfileImage, T1.User_UserCode, T1.User_SmsCode, T1.User_WebsiteLink, T1.Use");
            viewString.Append("r_DOB, T1.User_CompanyId, T1.User_AuthenticationToken, T1.User_DevicePlatform, T");
            viewString.Append("1.User_optDealsNearMeEmails, T1.User_optLatestNewsEmails, T1.User_optMarketingEm");
            viewString.Append("ails, T1.User_PassportNo, T1.User_Title, T1.User_Phone1CodeCountryID, T1.User_De");
            viewString.Append("leteConfirmationToken, T1.User_LastKnownLocationLat, T1.User_LastKnownLocationLo");
            viewString.Append("ng, T1.User_LastKnownLocation)\r\n    FROM (\r\n        SELECT \r\n            T.Id AS");
            viewString.Append(" User_Id, \r\n            T.Email AS User_Email, \r\n            T.EmailConfirmed AS");
            viewString.Append(" User_EmailConfirmed, \r\n            T.PasswordHash AS User_PasswordHash, \r\n     ");
            viewString.Append("       T.SecurityStamp AS User_SecurityStamp, \r\n            T.PhoneNumberConfirm");
            viewString.Append("ed AS User_PhoneNumberConfirmed, \r\n            T.TwoFactorEnabled AS User_TwoFac");
            viewString.Append("torEnabled, \r\n            T.LockoutEndDateUtc AS User_LockoutEndDateUtc, \r\n     ");
            viewString.Append("       T.LockoutEnabled AS User_LockoutEnabled, \r\n            T.AccessFailedCoun");
            viewString.Append("t AS User_AccessFailedCount, \r\n            T.UserName AS User_UserName, \r\n      ");
            viewString.Append("      T.FullName AS User_FullName, \r\n            T.AlternateEmail AS User_Altern");
            viewString.Append("ateEmail, \r\n            T.IsEmailVerified AS User_IsEmailVerified, \r\n           ");
            viewString.Append(" T.Status AS User_Status, \r\n            T.CreatedDateTime AS User_CreatedDateTim");
            viewString.Append("e, \r\n            T.ModifiedDateTime AS User_ModifiedDateTime, \r\n            T.La");
            viewString.Append("stLoginTime AS User_LastLoginTime, \r\n            T.Phone1 AS User_Phone1, \r\n    ");
            viewString.Append("        T.Phone2 AS User_Phone2, \r\n            T.Jobtitle AS User_Jobtitle, \r\n  ");
            viewString.Append("          T.ContactNotes AS User_ContactNotes, \r\n            T.IsSubscribed AS U");
            viewString.Append("ser_IsSubscribed, \r\n            T.AppID AS User_AppID, \r\n            T.IsCompany");
            viewString.Append("Representative AS User_IsCompanyRepresentative, \r\n            T.UserTimeZone AS ");
            viewString.Append("User_UserTimeZone, \r\n            T.Gender AS User_Gender, \r\n            T.Langua");
            viewString.Append("geID AS User_LanguageId, \r\n            T.IndustryID AS User_IndustryId, \r\n      ");
            viewString.Append("      T.EducationId AS User_EducationId, \r\n            T.ProfileImage AS User_Pr");
            viewString.Append("ofileImage, \r\n            T.UserCode AS User_UserCode, \r\n            T.SmsCode A");
            viewString.Append("S User_SmsCode, \r\n            T.WebsiteLink AS User_WebsiteLink, \r\n            T");
            viewString.Append(".DOB AS User_DOB, \r\n            T.CompanyId AS User_CompanyId, \r\n            T.a");
            viewString.Append("uthenticationToken AS User_AuthenticationToken, \r\n            T.DevicePlatform A");
            viewString.Append("S User_DevicePlatform, \r\n            T.optDealsNearMeEmails AS User_optDealsNear");
            viewString.Append("MeEmails, \r\n            T.optLatestNewsEmails AS User_optLatestNewsEmails, \r\n   ");
            viewString.Append("         T.optMarketingEmails AS User_optMarketingEmails, \r\n            T.Passpo");
            viewString.Append("rtNo AS User_PassportNo, \r\n            T.Title AS User_Title, \r\n            T.Ph");
            viewString.Append("one1CodeCountryID AS User_Phone1CodeCountryID, \r\n            T.DeleteConfirmatio");
            viewString.Append("nToken AS User_DeleteConfirmationToken, \r\n            T.LastKnownLocationLat AS ");
            viewString.Append("User_LastKnownLocationLat, \r\n            T.LastKnownLocationLong AS User_LastKno");
            viewString.Append("wnLocationLong, \r\n            T.LastKnownLocation AS User_LastKnownLocation, \r\n ");
            viewString.Append("           True AS _from0\r\n        FROM SMDModelStoreContainer.AspNetUsers AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Users", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2183);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaignResponses\r\n        [DomainModels.Ad");
            viewString.Append("CampaignResponse](T1.AdCampaignResponse_ResponseId, T1.AdCampaignResponse_Campai");
            viewString.Append("gnId, T1.AdCampaignResponse_CreatedDateTime, T1.AdCampaignResponse_UserId, T1.Ad");
            viewString.Append("CampaignResponse_EndUserDollarAmount, T1.AdCampaignResponse_SkipCount, T1.AdCamp");
            viewString.Append("aignResponse_UserSelection, T1.AdCampaignResponse_CompanyId, T1.AdCampaignRespon");
            viewString.Append("se_GameTime, T1.AdCampaignResponse_GameScore, T1.AdCampaignResponse_GameLevel, T");
            viewString.Append("1.AdCampaignResponse_GameId, T1.AdCampaignResponse_UserQuestionResponse, T1.AdCa");
            viewString.Append("mpaignResponse_UserLocationLat, T1.AdCampaignResponse_UserLocationLong, T1.AdCam");
            viewString.Append("paignResponse_UserLocationCity, T1.AdCampaignResponse_UserLocationCountry, T1.Ad");
            viewString.Append("CampaignResponse_UserLocationAddress, T1.AdCampaignResponse_ResponseType)\r\n    F");
            viewString.Append("ROM (\r\n        SELECT \r\n            T.ResponseID AS AdCampaignResponse_ResponseI");
            viewString.Append("d, \r\n            T.CampaignID AS AdCampaignResponse_CampaignId, \r\n            T.");
            viewString.Append("CreatedDateTime AS AdCampaignResponse_CreatedDateTime, \r\n            T.UserID AS");
            viewString.Append(" AdCampaignResponse_UserId, \r\n            T.EndUserDollarAmount AS AdCampaignRes");
            viewString.Append("ponse_EndUserDollarAmount, \r\n            T.SkipCount AS AdCampaignResponse_SkipC");
            viewString.Append("ount, \r\n            T.UserSelection AS AdCampaignResponse_UserSelection, \r\n     ");
            viewString.Append("       T.CompanyId AS AdCampaignResponse_CompanyId, \r\n            T.GameTime AS ");
            viewString.Append("AdCampaignResponse_GameTime, \r\n            T.GameScore AS AdCampaignResponse_Gam");
            viewString.Append("eScore, \r\n            T.GameLevel AS AdCampaignResponse_GameLevel, \r\n           ");
            viewString.Append(" T.GameId AS AdCampaignResponse_GameId, \r\n            T.UserQuestionResponse AS ");
            viewString.Append("AdCampaignResponse_UserQuestionResponse, \r\n            T.UserLocationLat AS AdCa");
            viewString.Append("mpaignResponse_UserLocationLat, \r\n            T.UserLocationLong AS AdCampaignRe");
            viewString.Append("sponse_UserLocationLong, \r\n            T.UserLocationCity AS AdCampaignResponse_");
            viewString.Append("UserLocationCity, \r\n            T.UserLocationCountry AS AdCampaignResponse_User");
            viewString.Append("LocationCountry, \r\n            T.UserLocationAddress AS AdCampaignResponse_UserL");
            viewString.Append("ocationAddress, \r\n            T.ResponseType AS AdCampaignResponse_ResponseType,");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.AdCampaignRes");
            viewString.Append("ponse AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignResponses", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CampaignCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CampaignCategories", @"
    SELECT VALUE -- Constructing CampaignCategories
        [DomainModels.CampaignCategory](T1.CampaignCategory_CampaignId, T1.CampaignCategory_CategoryId, T1.CampaignCategory_Id)
    FROM (
        SELECT 
            T.CampaignId AS CampaignCategory_CampaignId, 
            T.CategoryId AS CampaignCategory_CategoryId, 
            T.Id AS CampaignCategory_Id, 
            True AS _from0
        FROM SMDModelStoreContainer.CampaignCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CouponCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CouponCategories", @"
    SELECT VALUE -- Constructing CouponCategories
        [DomainModels.CouponCategory](T1.CouponCategory_CategoryId, T1.CouponCategory_Name, T1.CouponCategory_Status, T1.CouponCategory_ImagePath, T1.CouponCategory_SortOrder)
    FROM (
        SELECT 
            T.CategoryId AS CouponCategory_CategoryId, 
            T.Name AS CouponCategory_Name, 
            T.Status AS CouponCategory_Status, 
            T.ImagePath AS CouponCategory_ImagePath, 
            T.SortOrder AS CouponCategory_SortOrder, 
            True AS _from0
        FROM SMDModelStoreContainer.CouponCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaigns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(9403);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaigns\r\n        [DomainModels.AdCampaign");
            viewString.Append("](T1.AdCampaign_CampaignId, T1.AdCampaign_LanguageId, T1.AdCampaign_UserId, T1.A");
            viewString.Append("dCampaign_SmdCampaign, T1.AdCampaign_CampaignName, T1.AdCampaign_CampaignDescrip");
            viewString.Append("tion, T1.AdCampaign_Status, T1.AdCampaign_Archived, T1.AdCampaign_Approved, T1.A");
            viewString.Append("dCampaign_ApprovedBy, T1.AdCampaign_ApprovalDateTime, T1.AdCampaign_StartDateTim");
            viewString.Append("e, T1.AdCampaign_EndDateTime, T1.AdCampaign_MaxBudget, T1.AdCampaign_Type, T1.Ad");
            viewString.Append("Campaign_ClickRate, T1.AdCampaign_SmdCredits, T1.AdCampaign_DisplayTitle, T1.AdC");
            viewString.Append("ampaign_Description, T1.AdCampaign_ImagePath, T1.AdCampaign_LandingPageVideoLink");
            viewString.Append(", T1.AdCampaign_VerifyQuestion, T1.AdCampaign_Answer1, T1.AdCampaign_Answer2, T1");
            viewString.Append(".AdCampaign_Answer3, T1.AdCampaign_CorrectAnswer, T1.AdCampaign_CreatedDateTime,");
            viewString.Append(" T1.AdCampaign_CreatedBy, T1.AdCampaign_ModifiedDateTime, T1.AdCampaign_Modified");
            viewString.Append("By, T1.AdCampaign_AgeRangeStart, T1.AdCampaign_AgeRangeEnd, T1.AdCampaign_Gender");
            viewString.Append(", T1.AdCampaign_RejectedReason, T1.AdCampaign_ProjectedReach, T1.AdCampaign_Resu");
            viewString.Append("ltClicks, T1.AdCampaign_AmountSpent, T1.AdCampaign_RewardType, T1.AdCampaign_Vou");
            viewString.Append("cher1Heading, T1.AdCampaign_Voucher1Description, T1.AdCampaign_Voucher1Value, T1");
            viewString.Append(".AdCampaign_Voucher2Heading, T1.AdCampaign_Voucher2Description, T1.AdCampaign_Vo");
            viewString.Append("ucher2Value, T1.AdCampaign_Voucher1ImagePath, T1.AdCampaign_Voucher2ImagePath, T");
            viewString.Append("1.AdCampaign_VideoUrl, T1.AdCampaign_BuuyItLine1, T1.AdCampaign_BuyItLine2, T1.A");
            viewString.Append("dCampaign_BuyItLine3, T1.AdCampaign_BuyItButtonLabel, T1.AdCampaign_BuyItImageUr");
            viewString.Append("l, T1.AdCampaign_CouponSwapValue, T1.AdCampaign_CouponActualValue, T1.AdCampaign");
            viewString.Append("_CouponTakenCount, T1.AdCampaign_CouponQuantity, T1.AdCampaign_CompanyId, T1.AdC");
            viewString.Append("ampaign_priority, T1.AdCampaign_couponSmdComission, T1.AdCampaign_couponImage2, ");
            viewString.Append("T1.AdCampaign_CouponImage3, T1.AdCampaign_CouponImage4, T1.AdCampaign_CouponExpi");
            viewString.Append("ryLabel, T1.AdCampaign_CouponDiscountValue, T1.AdCampaign_CouponType, T1.AdCampa");
            viewString.Append("ign_DeliveryDays, T1.AdCampaign_IsUseFilter, T1.AdCampaign_LogoUrl, T1.AdCampaig");
            viewString.Append("n_VoucherAdditionalInfo, T1.AdCampaign_CouponId, T1.AdCampaign_IsShowVoucherSett");
            viewString.Append("ing, T1.AdCampaign_VideoLink2, T1.AdCampaign_VoucherHighlightLine1, T1.AdCampaig");
            viewString.Append("n_VoucherHighlightLine2, T1.AdCampaign_VoucherHighlightLine3, T1.AdCampaign_Vouc");
            viewString.Append("herHighlightLine4, T1.AdCampaign_VoucherHighlightLine5, T1.AdCampaign_VoucherFin");
            viewString.Append("ePrintLine1, T1.AdCampaign_VoucherFinePrintLine2, T1.AdCampaign_VoucherFinePrint");
            viewString.Append("Line3, T1.AdCampaign_VoucherFinePrintLine4, T1.AdCampaign_VoucherFinePrintLine5,");
            viewString.Append(" T1.AdCampaign_VoucherLocationLine1, T1.AdCampaign_VoucherLocationLine2, T1.AdCa");
            viewString.Append("mpaign_VoucherLocationLine3, T1.AdCampaign_VoucherLocationLine4, T1.AdCampaign_V");
            viewString.Append("oucherLocationLine5, T1.AdCampaign_VoucherHowToRedeemLine1, T1.AdCampaign_Vouche");
            viewString.Append("rHowToRedeemLine2, T1.AdCampaign_VoucherHowToRedeemLine3, T1.AdCampaign_VoucherH");
            viewString.Append("owToRedeemLine4, T1.AdCampaign_VoucherHowToRedeemLine5, T1.AdCampaign_VoucherRed");
            viewString.Append("emptionPhone, T1.AdCampaign_VoucherLocationLAT, T1.AdCampaign_VoucherLocationLON");
            viewString.Append(", T1.AdCampaign_MaxDailyBudget, T1.AdCampaign_SubmissionDateTime, T1.AdCampaign_");
            viewString.Append("ShowBuyitBtn, T1.AdCampaign_IsPaymentCollected, T1.AdCampaign_PaymentDate)\r\n    ");
            viewString.Append("FROM (\r\n        SELECT \r\n            T.CampaignID AS AdCampaign_CampaignId, \r\n  ");
            viewString.Append("          T.LanguageID AS AdCampaign_LanguageId, \r\n            T.UserID AS AdCam");
            viewString.Append("paign_UserId, \r\n            T.SMDCampaign AS AdCampaign_SmdCampaign, \r\n         ");
            viewString.Append("   T.CampaignName AS AdCampaign_CampaignName, \r\n            T.CampaignDescriptio");
            viewString.Append("n AS AdCampaign_CampaignDescription, \r\n            T.Status AS AdCampaign_Status");
            viewString.Append(", \r\n            T.Archived AS AdCampaign_Archived, \r\n            T.Approved AS A");
            viewString.Append("dCampaign_Approved, \r\n            T.ApprovedBy AS AdCampaign_ApprovedBy, \r\n     ");
            viewString.Append("       T.ApprovalDateTime AS AdCampaign_ApprovalDateTime, \r\n            T.StartD");
            viewString.Append("ateTime AS AdCampaign_StartDateTime, \r\n            T.EndDateTime AS AdCampaign_E");
            viewString.Append("ndDateTime, \r\n            T.MaxBudget AS AdCampaign_MaxBudget, \r\n            T.T");
            viewString.Append("ype AS AdCampaign_Type, \r\n            T.ClickRate AS AdCampaign_ClickRate, \r\n   ");
            viewString.Append("         T.SMDCredits AS AdCampaign_SmdCredits, \r\n            T.DisplayTitle AS ");
            viewString.Append("AdCampaign_DisplayTitle, \r\n            T.Description AS AdCampaign_Description, ");
            viewString.Append("\r\n            T.ImagePath AS AdCampaign_ImagePath, \r\n            T.LandingPageVi");
            viewString.Append("deoLink AS AdCampaign_LandingPageVideoLink, \r\n            T.VerifyQuestion AS Ad");
            viewString.Append("Campaign_VerifyQuestion, \r\n            T.Answer1 AS AdCampaign_Answer1, \r\n      ");
            viewString.Append("      T.Answer2 AS AdCampaign_Answer2, \r\n            T.Answer3 AS AdCampaign_Ans");
            viewString.Append("wer3, \r\n            T.CorrectAnswer AS AdCampaign_CorrectAnswer, \r\n            T");
            viewString.Append(".CreatedDateTime AS AdCampaign_CreatedDateTime, \r\n            T.CreatedBy AS AdC");
            viewString.Append("ampaign_CreatedBy, \r\n            T.ModifiedDateTime AS AdCampaign_ModifiedDateTi");
            viewString.Append("me, \r\n            T.ModifiedBy AS AdCampaign_ModifiedBy, \r\n            T.AgeRang");
            viewString.Append("eStart AS AdCampaign_AgeRangeStart, \r\n            T.AgeRangeEnd AS AdCampaign_Ag");
            viewString.Append("eRangeEnd, \r\n            T.Gender AS AdCampaign_Gender, \r\n            T.Rejected");
            viewString.Append("Reason AS AdCampaign_RejectedReason, \r\n            T.ProjectedReach AS AdCampaig");
            viewString.Append("n_ProjectedReach, \r\n            T.ResultClicks AS AdCampaign_ResultClicks, \r\n   ");
            viewString.Append("         T.AmountSpent AS AdCampaign_AmountSpent, \r\n            T.RewardType AS ");
            viewString.Append("AdCampaign_RewardType, \r\n            T.Voucher1Heading AS AdCampaign_Voucher1Hea");
            viewString.Append("ding, \r\n            T.Voucher1Description AS AdCampaign_Voucher1Description, \r\n ");
            viewString.Append("           T.Voucher1Value AS AdCampaign_Voucher1Value, \r\n            T.Voucher2");
            viewString.Append("Heading AS AdCampaign_Voucher2Heading, \r\n            T.Voucher2Description AS Ad");
            viewString.Append("Campaign_Voucher2Description, \r\n            T.Voucher2Value AS AdCampaign_Vouche");
            viewString.Append("r2Value, \r\n            T.Voucher1ImagePath AS AdCampaign_Voucher1ImagePath, \r\n  ");
            viewString.Append("          T.Voucher2ImagePath AS AdCampaign_Voucher2ImagePath, \r\n            T.V");
            viewString.Append("ideoUrl AS AdCampaign_VideoUrl, \r\n            T.BuuyItLine1 AS AdCampaign_BuuyIt");
            viewString.Append("Line1, \r\n            T.BuyItLine2 AS AdCampaign_BuyItLine2, \r\n            T.BuyI");
            viewString.Append("tLine3 AS AdCampaign_BuyItLine3, \r\n            T.BuyItButtonLabel AS AdCampaign_");
            viewString.Append("BuyItButtonLabel, \r\n            T.BuyItImageUrl AS AdCampaign_BuyItImageUrl, \r\n ");
            viewString.Append("           T.CouponSwapValue AS AdCampaign_CouponSwapValue, \r\n            T.Coup");
            viewString.Append("onActualValue AS AdCampaign_CouponActualValue, \r\n            T.CouponTakenCount ");
            viewString.Append("AS AdCampaign_CouponTakenCount, \r\n            T.CouponQuantity AS AdCampaign_Cou");
            viewString.Append("ponQuantity, \r\n            T.CompanyId AS AdCampaign_CompanyId, \r\n            T.");
            viewString.Append("priority AS AdCampaign_priority, \r\n            T.couponSmdComission AS AdCampaig");
            viewString.Append("n_couponSmdComission, \r\n            T.couponImage2 AS AdCampaign_couponImage2, \r");
            viewString.Append("\n            T.CouponImage3 AS AdCampaign_CouponImage3, \r\n            T.CouponIm");
            viewString.Append("age4 AS AdCampaign_CouponImage4, \r\n            T.CouponExpiryLabel AS AdCampaign");
            viewString.Append("_CouponExpiryLabel, \r\n            T.CouponDiscountValue AS AdCampaign_CouponDisc");
            viewString.Append("ountValue, \r\n            T.CouponType AS AdCampaign_CouponType, \r\n            T.");
            viewString.Append("DeliveryDays AS AdCampaign_DeliveryDays, \r\n            T.IsUseFilter AS AdCampai");
            viewString.Append("gn_IsUseFilter, \r\n            T.LogoUrl AS AdCampaign_LogoUrl, \r\n            T.V");
            viewString.Append("oucherAdditionalInfo AS AdCampaign_VoucherAdditionalInfo, \r\n            T.Coupon");
            viewString.Append("Id AS AdCampaign_CouponId, \r\n            T.IsShowVoucherSetting AS AdCampaign_Is");
            viewString.Append("ShowVoucherSetting, \r\n            T.VideoLink2 AS AdCampaign_VideoLink2, \r\n     ");
            viewString.Append("       T.VoucherHighlightLine1 AS AdCampaign_VoucherHighlightLine1, \r\n          ");
            viewString.Append("  T.VoucherHighlightLine2 AS AdCampaign_VoucherHighlightLine2, \r\n            T.V");
            viewString.Append("oucherHighlightLine3 AS AdCampaign_VoucherHighlightLine3, \r\n            T.Vouche");
            viewString.Append("rHighlightLine4 AS AdCampaign_VoucherHighlightLine4, \r\n            T.VoucherHigh");
            viewString.Append("lightLine5 AS AdCampaign_VoucherHighlightLine5, \r\n            T.VoucherFinePrint");
            viewString.Append("Line1 AS AdCampaign_VoucherFinePrintLine1, \r\n            T.VoucherFinePrintLine2");
            viewString.Append(" AS AdCampaign_VoucherFinePrintLine2, \r\n            T.VoucherFinePrintLine3 AS A");
            viewString.Append("dCampaign_VoucherFinePrintLine3, \r\n            T.VoucherFinePrintLine4 AS AdCamp");
            viewString.Append("aign_VoucherFinePrintLine4, \r\n            T.VoucherFinePrintLine5 AS AdCampaign_");
            viewString.Append("VoucherFinePrintLine5, \r\n            T.VoucherLocationLine1 AS AdCampaign_Vouche");
            viewString.Append("rLocationLine1, \r\n            T.VoucherLocationLine2 AS AdCampaign_VoucherLocati");
            viewString.Append("onLine2, \r\n            T.VoucherLocationLine3 AS AdCampaign_VoucherLocationLine3");
            viewString.Append(", \r\n            T.VoucherLocationLine4 AS AdCampaign_VoucherLocationLine4, \r\n   ");
            viewString.Append("         T.VoucherLocationLine5 AS AdCampaign_VoucherLocationLine5, \r\n          ");
            viewString.Append("  T.VoucherHowToRedeemLine1 AS AdCampaign_VoucherHowToRedeemLine1, \r\n           ");
            viewString.Append(" T.VoucherHowToRedeemLine2 AS AdCampaign_VoucherHowToRedeemLine2, \r\n            ");
            viewString.Append("T.VoucherHowToRedeemLine3 AS AdCampaign_VoucherHowToRedeemLine3, \r\n            T");
            viewString.Append(".VoucherHowToRedeemLine4 AS AdCampaign_VoucherHowToRedeemLine4, \r\n            T.");
            viewString.Append("VoucherHowToRedeemLine5 AS AdCampaign_VoucherHowToRedeemLine5, \r\n            T.V");
            viewString.Append("oucherRedemptionPhone AS AdCampaign_VoucherRedemptionPhone, \r\n            T.Vouc");
            viewString.Append("herLocationLAT AS AdCampaign_VoucherLocationLAT, \r\n            T.VoucherLocation");
            viewString.Append("LON AS AdCampaign_VoucherLocationLON, \r\n            T.MaxDailyBudget AS AdCampai");
            viewString.Append("gn_MaxDailyBudget, \r\n            T.SubmissionDateTime AS AdCampaign_SubmissionDa");
            viewString.Append("teTime, \r\n            T.ShowBuyitBtn AS AdCampaign_ShowBuyitBtn, \r\n            T");
            viewString.Append(".IsPaymentCollected AS AdCampaign_IsPaymentCollected, \r\n            T.PaymentDat");
            viewString.Append("e AS AdCampaign_PaymentDate, \r\n            True AS _from0\r\n        FROM SMDModel");
            viewString.Append("StoreContainer.AdCampaign AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaigns", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignTargetCriterias", "\r\n    SELECT VALUE -- Constructing AdCampaignTargetCriterias\r\n        [DomainMode" +
                    "ls.AdCampaignTargetCriteria](T1.AdCampaignTargetCriteria_CriteriaId, T1.AdCampai" +
                    "gnTargetCriteria_CampaignId, T1.AdCampaignTargetCriteria_Type, T1.AdCampaignTarg" +
                    "etCriteria_PqId, T1.AdCampaignTargetCriteria_PqAnswerId, T1.AdCampaignTargetCrit" +
                    "eria_SqId, T1.AdCampaignTargetCriteria_SqAnswer, T1.AdCampaignTargetCriteria_Inc" +
                    "ludeorExclude, T1.AdCampaignTargetCriteria_LanguageId, T1.AdCampaignTargetCriter" +
                    "ia_IndustryId, T1.AdCampaignTargetCriteria_EducationId, T1.AdCampaignTargetCrite" +
                    "ria_QuizCampaignId, T1.AdCampaignTargetCriteria_QuizAnswerId)\r\n    FROM (\r\n     " +
                    "   SELECT \r\n            T.CriteriaID AS AdCampaignTargetCriteria_CriteriaId, \r\n " +
                    "           T.CampaignID AS AdCampaignTargetCriteria_CampaignId, \r\n            T." +
                    "Type AS AdCampaignTargetCriteria_Type, \r\n            T.PQID AS AdCampaignTargetC" +
                    "riteria_PqId, \r\n            T.PQAnswerID AS AdCampaignTargetCriteria_PqAnswerId," +
                    " \r\n            T.SQID AS AdCampaignTargetCriteria_SqId, \r\n            T.SQAnswer" +
                    " AS AdCampaignTargetCriteria_SqAnswer, \r\n            T.IncludeorExclude AS AdCam" +
                    "paignTargetCriteria_IncludeorExclude, \r\n            T.LanguageID AS AdCampaignTa" +
                    "rgetCriteria_LanguageId, \r\n            T.IndustryID AS AdCampaignTargetCriteria_" +
                    "IndustryId, \r\n            T.EducationID AS AdCampaignTargetCriteria_EducationId," +
                    " \r\n            T.QuizCampaignId AS AdCampaignTargetCriteria_QuizCampaignId, \r\n  " +
                    "          T.QuizAnswerId AS AdCampaignTargetCriteria_QuizAnswerId, \r\n           " +
                    " True AS _from0\r\n        FROM SMDModelStoreContainer.AdCampaignTargetCriteria AS" +
                    " T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CompaniesAspNetUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CompaniesAspNetUsers", @"
    SELECT VALUE -- Constructing CompaniesAspNetUsers
        [DomainModels.CompaniesAspNetUser](T1.CompaniesAspNetUser_Id, T1.CompaniesAspNetUser_CompanyId, T1.CompaniesAspNetUser_UserId, T1.CompaniesAspNetUser_CreatedOn, T1.CompaniesAspNetUser_Status, T1.CompaniesAspNetUser_InvitationCode, T1.CompaniesAspNetUser_RoleId, T1.CompaniesAspNetUser_InvitationEmail)
    FROM (
        SELECT 
            T.Id AS CompaniesAspNetUser_Id, 
            T.CompanyId AS CompaniesAspNetUser_CompanyId, 
            T.UserId AS CompaniesAspNetUser_UserId, 
            T.CreatedOn AS CompaniesAspNetUser_CreatedOn, 
            T.Status AS CompaniesAspNetUser_Status, 
            T.InvitationCode AS CompaniesAspNetUser_InvitationCode, 
            T.RoleId AS CompaniesAspNetUser_RoleId, 
            T.InvitationEmail AS CompaniesAspNetUser_InvitationEmail, 
            True AS _from0
        FROM SMDModelStoreContainer.CompaniesAspNetUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.BranchCategories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.BranchCategories", @"
    SELECT VALUE -- Constructing BranchCategories
        [DomainModels.BranchCategory](T1.BranchCategory_BranchCategoryId, T1.BranchCategory_BranchCategoryName, T1.BranchCategory_CompanyId)
    FROM (
        SELECT 
            T.BranchCategoryId AS BranchCategory_BranchCategoryId, 
            T.BranchCategoryName AS BranchCategory_BranchCategoryName, 
            T.CompanyId AS BranchCategory_CompanyId, 
            True AS _from0
        FROM SMDModelStoreContainer.BranchCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CompanyBranches
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CompanyBranches", "\r\n    SELECT VALUE -- Constructing CompanyBranches\r\n        [DomainModels.Company" +
                    "Branch](T1.CompanyBranch_BranchId, T1.CompanyBranch_BranchTitle, T1.CompanyBranc" +
                    "h_BranchAddressLine1, T1.CompanyBranch_BranchAddressLine2, T1.CompanyBranch_Bran" +
                    "chCity, T1.CompanyBranch_BranchState, T1.CompanyBranch_BranchZipCode, T1.Company" +
                    "Branch_BranchPhone, T1.CompanyBranch_BranchLocationLat, T1.CompanyBranch_BranchL" +
                    "ocationLong, T1.CompanyBranch_BranchCategoryId, T1.CompanyBranch_CompanyId, T1.C" +
                    "ompanyBranch_CountryId, T1.CompanyBranch_IsDefault)\r\n    FROM (\r\n        SELECT " +
                    "\r\n            T.BranchId AS CompanyBranch_BranchId, \r\n            T.BranchTitle " +
                    "AS CompanyBranch_BranchTitle, \r\n            T.BranchAddressLine1 AS CompanyBranc" +
                    "h_BranchAddressLine1, \r\n            T.BranchAddressLine2 AS CompanyBranch_Branch" +
                    "AddressLine2, \r\n            T.BranchCity AS CompanyBranch_BranchCity, \r\n        " +
                    "    T.BranchState AS CompanyBranch_BranchState, \r\n            T.BranchZipCode AS" +
                    " CompanyBranch_BranchZipCode, \r\n            T.BranchPhone AS CompanyBranch_Branc" +
                    "hPhone, \r\n            T.BranchLocationLat AS CompanyBranch_BranchLocationLat, \r\n" +
                    "            T.BranchLocationLong AS CompanyBranch_BranchLocationLong, \r\n        " +
                    "    T.BranchCategoryId AS CompanyBranch_BranchCategoryId, \r\n            T.Compan" +
                    "yId AS CompanyBranch_CompanyId, \r\n            T.CountryId AS CompanyBranch_Count" +
                    "ryId, \r\n            T.IsDefault AS CompanyBranch_IsDefault, \r\n            True A" +
                    "S _from0\r\n        FROM SMDModelStoreContainer.CompanyBranch AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Coupons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(7530);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Coupons\r\n        [DomainModels.Coupon](T1.Cou");
            viewString.Append("pon_CouponId, T1.Coupon_LanguageId, T1.Coupon_UserId, T1.Coupon_CouponTitle, T1.");
            viewString.Append("Coupon_SearchKeywords, T1.Coupon_Status, T1.Coupon_Archived, T1.Coupon_Approved,");
            viewString.Append(" T1.Coupon_ApprovedBy, T1.Coupon_ApprovalDateTime, T1.Coupon_CreatedDateTime, T1");
            viewString.Append(".Coupon_CreatedBy, T1.Coupon_ModifiedDateTime, T1.Coupon_ModifiedBy, T1.Coupon_R");
            viewString.Append("ejectedReason, T1.Coupon_Rejecteddatetime, T1.Coupon_RejectedBy, T1.Coupon_Curre");
            viewString.Append("ncyId, T1.Coupon_Price, T1.Coupon_Savings, T1.Coupon_SwapCost, T1.Coupon_CouponV");
            viewString.Append("iewCount, T1.Coupon_CouponIssuedCount, T1.Coupon_CouponRedeemedCount, T1.Coupon_");
            viewString.Append("CouponQtyPerUser, T1.Coupon_CouponListingMode, T1.Coupon_CompanyId, T1.Coupon_Co");
            viewString.Append("uponActiveMonth, T1.Coupon_CouponActiveYear, T1.Coupon_CouponExpirydate, T1.Coup");
            viewString.Append("on_couponImage1, T1.Coupon_CouponImage2, T1.Coupon_CouponImage3, T1.Coupon_LogoU");
            viewString.Append("rl, T1.Coupon_HighlightLine1, T1.Coupon_HighlightLine2, T1.Coupon_HighlightLine3");
            viewString.Append(", T1.Coupon_HighlightLine4, T1.Coupon_HighlightLine5, T1.Coupon_FinePrintLine1, ");
            viewString.Append("T1.Coupon_FinePrintLine2, T1.Coupon_FinePrintLine3, T1.Coupon_FinePrintLine4, T1");
            viewString.Append(".Coupon_FinePrintLine5, T1.Coupon_LocationBranchId, T1.Coupon_LocationTitle, T1.");
            viewString.Append("Coupon_LocationLine1, T1.Coupon_LocationLine2, T1.Coupon_LocationCity, T1.Coupon");
            viewString.Append("_LocationState, T1.Coupon_LocationZipCode, T1.Coupon_LocationLAT, T1.Coupon_Loca");
            viewString.Append("tionLON, T1.Coupon_LocationPhone, T1.Coupon_GeographyColumn, T1.Coupon_HowToRede");
            viewString.Append("emLine1, T1.Coupon_HowToRedeemLine2, T1.Coupon_HowToRedeemLine3, T1.Coupon_HowTo");
            viewString.Append("RedeemLine4, T1.Coupon_HowToRedeemLine5, T1.Coupon_SubmissionDateTime, T1.Coupon");
            viewString.Append("_LocationCountryId, T1.Coupon_CouponStartDate, T1.Coupon_CouponEndDate, T1.Coupo");
            viewString.Append("n_Priority, T1.Coupon_ShowBuyitBtn, T1.Coupon_BuyitLandingPageUrl, T1.Coupon_Buy");
            viewString.Append("itBtnLabel, T1.Coupon_YoutubeLink, T1.Coupon_CouponImage4, T1.Coupon_CouponImage");
            viewString.Append("5, T1.Coupon_CouponImage6, T1.Coupon_IsPaymentCollected, T1.Coupon_PaymentDate, ");
            viewString.Append("T1.Coupon_IsShowReviews, T1.Coupon_IsShowAddress, T1.Coupon_IsShowPhoneNo, T1.Co");
            viewString.Append("upon_IsShowMap, T1.Coupon_IsShowyouTube, T1.Coupon_IsShowAboutUs, T1.Coupon_IsMa");
            viewString.Append("rketingStories, T1.Coupon_IsPerSaving3days, T1.Coupon_IsPerSaving2days, T1.Coupo");
            viewString.Append("n_IsPerSavingLastday, T1.Coupon_IsDollarSaving3days, T1.Coupon_IsDollarSaving2da");
            viewString.Append("ys, T1.Coupon_IsDollarSavingLastday, T1.Coupon_isSaveBtnLable, T1.Coupon_DealFir");
            viewString.Append("stDiscountType, T1.Coupon_DealEndingDiscountType)\r\n    FROM (\r\n        SELECT \r\n");
            viewString.Append("            T.CouponId AS Coupon_CouponId, \r\n            T.LanguageId AS Coupon_");
            viewString.Append("LanguageId, \r\n            T.UserId AS Coupon_UserId, \r\n            T.CouponTitle");
            viewString.Append(" AS Coupon_CouponTitle, \r\n            T.SearchKeywords AS Coupon_SearchKeywords,");
            viewString.Append(" \r\n            T.Status AS Coupon_Status, \r\n            T.Archived AS Coupon_Arc");
            viewString.Append("hived, \r\n            T.Approved AS Coupon_Approved, \r\n            T.ApprovedBy A");
            viewString.Append("S Coupon_ApprovedBy, \r\n            T.ApprovalDateTime AS Coupon_ApprovalDateTime");
            viewString.Append(", \r\n            T.CreatedDateTime AS Coupon_CreatedDateTime, \r\n            T.Cre");
            viewString.Append("atedBy AS Coupon_CreatedBy, \r\n            T.ModifiedDateTime AS Coupon_ModifiedD");
            viewString.Append("ateTime, \r\n            T.ModifiedBy AS Coupon_ModifiedBy, \r\n            T.Reject");
            viewString.Append("edReason AS Coupon_RejectedReason, \r\n            T.Rejecteddatetime AS Coupon_Re");
            viewString.Append("jecteddatetime, \r\n            T.RejectedBy AS Coupon_RejectedBy, \r\n            T");
            viewString.Append(".CurrencyId AS Coupon_CurrencyId, \r\n            T.Price AS Coupon_Price, \r\n     ");
            viewString.Append("       T.Savings AS Coupon_Savings, \r\n            T.SwapCost AS Coupon_SwapCost,");
            viewString.Append(" \r\n            T.CouponViewCount AS Coupon_CouponViewCount, \r\n            T.Coup");
            viewString.Append("onIssuedCount AS Coupon_CouponIssuedCount, \r\n            T.CouponRedeemedCount A");
            viewString.Append("S Coupon_CouponRedeemedCount, \r\n            T.CouponQtyPerUser AS Coupon_CouponQ");
            viewString.Append("tyPerUser, \r\n            T.CouponListingMode AS Coupon_CouponListingMode, \r\n    ");
            viewString.Append("        T.CompanyId AS Coupon_CompanyId, \r\n            T.CouponActiveMonth AS Co");
            viewString.Append("upon_CouponActiveMonth, \r\n            T.CouponActiveYear AS Coupon_CouponActiveY");
            viewString.Append("ear, \r\n            T.CouponExpirydate AS Coupon_CouponExpirydate, \r\n            ");
            viewString.Append("T.couponImage1 AS Coupon_couponImage1, \r\n            T.CouponImage2 AS Coupon_Co");
            viewString.Append("uponImage2, \r\n            T.CouponImage3 AS Coupon_CouponImage3, \r\n            T");
            viewString.Append(".LogoUrl AS Coupon_LogoUrl, \r\n            T.HighlightLine1 AS Coupon_HighlightLi");
            viewString.Append("ne1, \r\n            T.HighlightLine2 AS Coupon_HighlightLine2, \r\n            T.Hi");
            viewString.Append("ghlightLine3 AS Coupon_HighlightLine3, \r\n            T.HighlightLine4 AS Coupon_");
            viewString.Append("HighlightLine4, \r\n            T.HighlightLine5 AS Coupon_HighlightLine5, \r\n     ");
            viewString.Append("       T.FinePrintLine1 AS Coupon_FinePrintLine1, \r\n            T.FinePrintLine2");
            viewString.Append(" AS Coupon_FinePrintLine2, \r\n            T.FinePrintLine3 AS Coupon_FinePrintLin");
            viewString.Append("e3, \r\n            T.FinePrintLine4 AS Coupon_FinePrintLine4, \r\n            T.Fin");
            viewString.Append("ePrintLine5 AS Coupon_FinePrintLine5, \r\n            T.LocationBranchId AS Coupon");
            viewString.Append("_LocationBranchId, \r\n            T.LocationTitle AS Coupon_LocationTitle, \r\n    ");
            viewString.Append("        T.LocationLine1 AS Coupon_LocationLine1, \r\n            T.LocationLine2 A");
            viewString.Append("S Coupon_LocationLine2, \r\n            T.LocationCity AS Coupon_LocationCity, \r\n ");
            viewString.Append("           T.LocationState AS Coupon_LocationState, \r\n            T.LocationZipC");
            viewString.Append("ode AS Coupon_LocationZipCode, \r\n            T.LocationLAT AS Coupon_LocationLAT");
            viewString.Append(", \r\n            T.LocationLON AS Coupon_LocationLON, \r\n            T.LocationPho");
            viewString.Append("ne AS Coupon_LocationPhone, \r\n            T.GeographyColumn AS Coupon_GeographyC");
            viewString.Append("olumn, \r\n            T.HowToRedeemLine1 AS Coupon_HowToRedeemLine1, \r\n          ");
            viewString.Append("  T.HowToRedeemLine2 AS Coupon_HowToRedeemLine2, \r\n            T.HowToRedeemLine");
            viewString.Append("3 AS Coupon_HowToRedeemLine3, \r\n            T.HowToRedeemLine4 AS Coupon_HowToRe");
            viewString.Append("deemLine4, \r\n            T.HowToRedeemLine5 AS Coupon_HowToRedeemLine5, \r\n      ");
            viewString.Append("      T.SubmissionDateTime AS Coupon_SubmissionDateTime, \r\n            T.Locatio");
            viewString.Append("nCountryId AS Coupon_LocationCountryId, \r\n            T.CouponStartDate AS Coupo");
            viewString.Append("n_CouponStartDate, \r\n            T.CouponEndDate AS Coupon_CouponEndDate, \r\n    ");
            viewString.Append("        T.Priority AS Coupon_Priority, \r\n            T.ShowBuyitBtn AS Coupon_Sh");
            viewString.Append("owBuyitBtn, \r\n            T.BuyitLandingPageUrl AS Coupon_BuyitLandingPageUrl, \r");
            viewString.Append("\n            T.BuyitBtnLabel AS Coupon_BuyitBtnLabel, \r\n            T.YoutubeLin");
            viewString.Append("k AS Coupon_YoutubeLink, \r\n            T.CouponImage4 AS Coupon_CouponImage4, \r\n");
            viewString.Append("            T.CouponImage5 AS Coupon_CouponImage5, \r\n            T.CouponImage6 ");
            viewString.Append("AS Coupon_CouponImage6, \r\n            T.IsPaymentCollected AS Coupon_IsPaymentCo");
            viewString.Append("llected, \r\n            T.PaymentDate AS Coupon_PaymentDate, \r\n            T.IsSh");
            viewString.Append("owReviews AS Coupon_IsShowReviews, \r\n            T.IsShowAddress AS Coupon_IsSho");
            viewString.Append("wAddress, \r\n            T.IsShowPhoneNo AS Coupon_IsShowPhoneNo, \r\n            T");
            viewString.Append(".IsShowMap AS Coupon_IsShowMap, \r\n            T.IsShowyouTube AS Coupon_IsShowyo");
            viewString.Append("uTube, \r\n            T.IsShowAboutUs AS Coupon_IsShowAboutUs, \r\n            T.Is");
            viewString.Append("MarketingStories AS Coupon_IsMarketingStories, \r\n            T.IsPerSaving3days ");
            viewString.Append("AS Coupon_IsPerSaving3days, \r\n            T.IsPerSaving2days AS Coupon_IsPerSavi");
            viewString.Append("ng2days, \r\n            T.IsPerSavingLastday AS Coupon_IsPerSavingLastday, \r\n    ");
            viewString.Append("        T.IsDollarSaving3days AS Coupon_IsDollarSaving3days, \r\n            T.IsD");
            viewString.Append("ollarSaving2days AS Coupon_IsDollarSaving2days, \r\n            T.IsDollarSavingLa");
            viewString.Append("stday AS Coupon_IsDollarSavingLastday, \r\n            T.isSaveBtnLable AS Coupon_");
            viewString.Append("isSaveBtnLable, \r\n            T.DealFirstDiscountType AS Coupon_DealFirstDiscoun");
            viewString.Append("tType, \r\n            T.DealEndingDiscountType AS Coupon_DealEndingDiscountType, ");
            viewString.Append("\r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.Coupon AS T\r\n ");
            viewString.Append("   ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Coupons", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CouponCategories1
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CouponCategories1", @"
    SELECT VALUE -- Constructing CouponCategories1
        [DomainModels.CouponCategories](T1.CouponCategories_Id, T1.CouponCategories_CategoryId, T1.CouponCategories_CouponId)
    FROM (
        SELECT 
            T.Id AS CouponCategories_Id, 
            T.CategoryId AS CouponCategories_CategoryId, 
            T.CouponId AS CouponCategories_CouponId, 
            True AS _from0
        FROM SMDModelStoreContainer.CouponCategories AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserPurchasedCoupons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserPurchasedCoupons", @"
    SELECT VALUE -- Constructing UserPurchasedCoupons
        [DomainModels.UserPurchasedCoupon](T1.UserPurchasedCoupon_CouponPurchaseId, T1.UserPurchasedCoupon_CouponId, T1.UserPurchasedCoupon_PurchaseDateTime, T1.UserPurchasedCoupon_PurchaseAmount, T1.UserPurchasedCoupon_UserId, T1.UserPurchasedCoupon_IsRedeemed, T1.UserPurchasedCoupon_RedemptionDateTime, T1.UserPurchasedCoupon_RedemptionOperator, T1.UserPurchasedCoupon_ResponseType)
    FROM (
        SELECT 
            T.CouponPurchaseId AS UserPurchasedCoupon_CouponPurchaseId, 
            T.CouponId AS UserPurchasedCoupon_CouponId, 
            T.PurchaseDateTime AS UserPurchasedCoupon_PurchaseDateTime, 
            T.PurchaseAmount AS UserPurchasedCoupon_PurchaseAmount, 
            T.UserId AS UserPurchasedCoupon_UserId, 
            T.IsRedeemed AS UserPurchasedCoupon_IsRedeemed, 
            T.RedemptionDateTime AS UserPurchasedCoupon_RedemptionDateTime, 
            T.RedemptionOperator AS UserPurchasedCoupon_RedemptionOperator, 
            T.ResponseType AS UserPurchasedCoupon_ResponseType, 
            True AS _from0
        FROM SMDModelStoreContainer.UserPurchasedCoupon AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.DamImages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.DamImages", @"
    SELECT VALUE -- Constructing DamImages
        [DomainModels.DamImage](T1.DamImage_ImageId, T1.DamImage_ImageTitle, T1.DamImage_ImageFileName, T1.DamImage_ImageCategory, T1.DamImage_CreatedDateTime, T1.DamImage_CompanyId)
    FROM (
        SELECT 
            T.ImageId AS DamImage_ImageId, 
            T.ImageTitle AS DamImage_ImageTitle, 
            T.ImageFileName AS DamImage_ImageFileName, 
            T.ImageCategory AS DamImage_ImageCategory, 
            T.CreatedDateTime AS DamImage_CreatedDateTime, 
            T.CompanyId AS DamImage_CompanyId, 
            True AS _from0
        FROM SMDModelStoreContainer.DamImages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionTargetCriterias", "\r\n    SELECT VALUE -- Constructing ProfileQuestionTargetCriterias\r\n        [Domai" +
                    "nModels.ProfileQuestionTargetCriteria](T1.ProfileQuestionTargetCriteria_ID, T1.P" +
                    "rofileQuestionTargetCriteria_PQID, T1.ProfileQuestionTargetCriteria_Type, T1.Pro" +
                    "fileQuestionTargetCriteria_SQID, T1.ProfileQuestionTargetCriteria_PQAnswerID, T1" +
                    ".ProfileQuestionTargetCriteria_LinkedSQID, T1.ProfileQuestionTargetCriteria_Link" +
                    "edSQAnswer, T1.ProfileQuestionTargetCriteria_IncludeorExclude, T1.ProfileQuestio" +
                    "nTargetCriteria_LanguageID, T1.ProfileQuestionTargetCriteria_IndustryID, T1.Prof" +
                    "ileQuestionTargetCriteria_EducationID, T1.ProfileQuestionTargetCriteria_AdCampai" +
                    "gnID, T1.ProfileQuestionTargetCriteria_AdCampaignAnswer, T1.ProfileQuestionTarge" +
                    "tCriteria_PQQuestionID)\r\n    FROM (\r\n        SELECT \r\n            T.ID AS Profil" +
                    "eQuestionTargetCriteria_ID, \r\n            T.PQID AS ProfileQuestionTargetCriteri" +
                    "a_PQID, \r\n            T.Type AS ProfileQuestionTargetCriteria_Type, \r\n          " +
                    "  T.SQID AS ProfileQuestionTargetCriteria_SQID, \r\n            T.PQAnswerID AS Pr" +
                    "ofileQuestionTargetCriteria_PQAnswerID, \r\n            T.LinkedSQID AS ProfileQue" +
                    "stionTargetCriteria_LinkedSQID, \r\n            T.LinkedSQAnswer AS ProfileQuestio" +
                    "nTargetCriteria_LinkedSQAnswer, \r\n            T.IncludeorExclude AS ProfileQuest" +
                    "ionTargetCriteria_IncludeorExclude, \r\n            T.LanguageID AS ProfileQuestio" +
                    "nTargetCriteria_LanguageID, \r\n            T.IndustryID AS ProfileQuestionTargetC" +
                    "riteria_IndustryID, \r\n            T.EducationID AS ProfileQuestionTargetCriteria" +
                    "_EducationID, \r\n            T.AdCampaignID AS ProfileQuestionTargetCriteria_AdCa" +
                    "mpaignID, \r\n            T.AdCampaignAnswer AS ProfileQuestionTargetCriteria_AdCa" +
                    "mpaignAnswer, \r\n            T.PQQuestionID AS ProfileQuestionTargetCriteria_PQQu" +
                    "estionID, \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.Prof" +
                    "ileQuestionTargetCriteria AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionTargetLocations", @"
    SELECT VALUE -- Constructing ProfileQuestionTargetLocations
        [DomainModels.ProfileQuestionTargetLocation](T1.ProfileQuestionTargetLocation_ID, T1.ProfileQuestionTargetLocation_PQID, T1.ProfileQuestionTargetLocation_CountryID, T1.ProfileQuestionTargetLocation_CityID, T1.ProfileQuestionTargetLocation_Radius, T1.ProfileQuestionTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS ProfileQuestionTargetLocation_ID, 
            T.PQID AS ProfileQuestionTargetLocation_PQID, 
            T.CountryID AS ProfileQuestionTargetLocation_CountryID, 
            T.CityID AS ProfileQuestionTargetLocation_CityID, 
            T.Radius AS ProfileQuestionTargetLocation_Radius, 
            T.IncludeorExclude AS ProfileQuestionTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CouponPriceOptions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CouponPriceOptions", @"
    SELECT VALUE -- Constructing CouponPriceOptions
        [DomainModels.CouponPriceOption](T1.CouponPriceOption_CouponPriceOptionId, T1.CouponPriceOption_CouponId, T1.CouponPriceOption_Description, T1.CouponPriceOption_Price, T1.CouponPriceOption_Savings, T1.CouponPriceOption_OptionUrl, T1.CouponPriceOption_VoucherCode, T1.CouponPriceOption_ExpiryDate, T1.CouponPriceOption_URL, T1.CouponPriceOption_VoucherCode2, T1.CouponPriceOption_VoucherCode3, T1.CouponPriceOption_VoucherCode4)
    FROM (
        SELECT 
            T.CouponPriceOptionId AS CouponPriceOption_CouponPriceOptionId, 
            T.CouponId AS CouponPriceOption_CouponId, 
            T.Description AS CouponPriceOption_Description, 
            T.Price AS CouponPriceOption_Price, 
            T.Savings AS CouponPriceOption_Savings, 
            T.OptionUrl AS CouponPriceOption_OptionUrl, 
            T.VoucherCode AS CouponPriceOption_VoucherCode, 
            T.ExpiryDate AS CouponPriceOption_ExpiryDate, 
            T.URL AS CouponPriceOption_URL, 
            T.VoucherCode2 AS CouponPriceOption_VoucherCode2, 
            T.VoucherCode3 AS CouponPriceOption_VoucherCode3, 
            T.VoucherCode4 AS CouponPriceOption_VoucherCode4, 
            True AS _from0
        FROM SMDModelStoreContainer.CouponPriceOption AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Companies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4529);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Companies\r\n        [DomainModels.Company](T1.");
            viewString.Append("Company_CompanyId, T1.Company_CompanyName, T1.Company_ReplyEmail, T1.Company_Tel");
            viewString.Append("1, T1.Company_Tel2, T1.Company_AddressLine1, T1.Company_AddressLine2, T1.Company");
            viewString.Append("_State, T1.Company_CountryId, T1.Company_ZipCode, T1.Company_TimeZone, T1.Compan");
            viewString.Append("y_Logo, T1.Company_StripeCustomerId, T1.Company_RegisteredViaReferral, T1.Compan");
            viewString.Append("y_ReferringCompanyID, T1.Company_PaypalCustomerId, T1.Company_GoogleWalletCustom");
            viewString.Append("erId, T1.Company_PreferredPayoutAccount, T1.Company_SalesEmail, T1.Company_Refer");
            viewString.Append("ralCode, T1.Company_AfilliatianStatus, T1.Company_WebsiteLink, T1.Company_Compan");
            viewString.Append("yType, T1.Company_BillingAddressLine1, T1.Company_BillingAddressLine2, T1.Compan");
            viewString.Append("y_BillingState, T1.Company_BillingCountryId, T1.Company_BillingZipCode, T1.Compa");
            viewString.Append("ny_BillingPhone, T1.Company_BillingEmail, T1.Company_TwitterHandle, T1.Company_F");
            viewString.Append("acebookHandle, T1.Company_InstagramHandle, T1.Company_PinterestHandle, T1.Compan");
            viewString.Append("y_VoucherSecretKey, T1.Company_City, T1.Company_BillingCity, T1.Company_AboutUsD");
            viewString.Append("escription, T1.Company_Status, T1.Company_PaymentMethodStatus, T1.Company_LastPa");
            viewString.Append("ymentMethodErrorDate, T1.Company_LastPaymentMethodError, T1.Company_CompanyRegNo");
            viewString.Append(", T1.Company_TaxRegNo, T1.Company_CreationDateTime, T1.Company_NoOfBranches, T1.");
            viewString.Append("Company_BillingAddressName, T1.Company_IsDeleted, T1.Company_DeleteDate, T1.Comp");
            viewString.Append("any_IsSpecialAccount, T1.Company_StripeSubscriptionId, T1.Company_StripeSubscrip");
            viewString.Append("tionStatus)\r\n    FROM (\r\n        SELECT \r\n            T.CompanyId AS Company_Com");
            viewString.Append("panyId, \r\n            T.CompanyName AS Company_CompanyName, \r\n            T.Repl");
            viewString.Append("yEmail AS Company_ReplyEmail, \r\n            T.Tel1 AS Company_Tel1, \r\n          ");
            viewString.Append("  T.Tel2 AS Company_Tel2, \r\n            T.AddressLine1 AS Company_AddressLine1, ");
            viewString.Append("\r\n            T.AddressLine2 AS Company_AddressLine2, \r\n            T.State AS C");
            viewString.Append("ompany_State, \r\n            T.CountryId AS Company_CountryId, \r\n            T.Zi");
            viewString.Append("pCode AS Company_ZipCode, \r\n            T.TimeZone AS Company_TimeZone, \r\n      ");
            viewString.Append("      T.Logo AS Company_Logo, \r\n            T.StripeCustomerId AS Company_Stripe");
            viewString.Append("CustomerId, \r\n            T.RegisteredViaReferral AS Company_RegisteredViaReferr");
            viewString.Append("al, \r\n            T.ReferringCompanyID AS Company_ReferringCompanyID, \r\n        ");
            viewString.Append("    T.PaypalCustomerId AS Company_PaypalCustomerId, \r\n            T.GoogleWallet");
            viewString.Append("CustomerId AS Company_GoogleWalletCustomerId, \r\n            T.PreferredPayoutAcc");
            viewString.Append("ount AS Company_PreferredPayoutAccount, \r\n            T.SalesEmail AS Company_Sa");
            viewString.Append("lesEmail, \r\n            T.ReferralCode AS Company_ReferralCode, \r\n            T.");
            viewString.Append("AfilliatianStatus AS Company_AfilliatianStatus, \r\n            T.WebsiteLink AS C");
            viewString.Append("ompany_WebsiteLink, \r\n            T.CompanyType AS Company_CompanyType, \r\n      ");
            viewString.Append("      T.BillingAddressLine1 AS Company_BillingAddressLine1, \r\n            T.Bill");
            viewString.Append("ingAddressLine2 AS Company_BillingAddressLine2, \r\n            T.BillingState AS ");
            viewString.Append("Company_BillingState, \r\n            T.BillingCountryId AS Company_BillingCountry");
            viewString.Append("Id, \r\n            T.BillingZipCode AS Company_BillingZipCode, \r\n            T.Bi");
            viewString.Append("llingPhone AS Company_BillingPhone, \r\n            T.BillingEmail AS Company_Bill");
            viewString.Append("ingEmail, \r\n            T.TwitterHandle AS Company_TwitterHandle, \r\n            ");
            viewString.Append("T.FacebookHandle AS Company_FacebookHandle, \r\n            T.InstagramHandle AS C");
            viewString.Append("ompany_InstagramHandle, \r\n            T.PinterestHandle AS Company_PinterestHand");
            viewString.Append("le, \r\n            T.VoucherSecretKey AS Company_VoucherSecretKey, \r\n            ");
            viewString.Append("T.City AS Company_City, \r\n            T.BillingCity AS Company_BillingCity, \r\n  ");
            viewString.Append("          T.AboutUsDescription AS Company_AboutUsDescription, \r\n            T.St");
            viewString.Append("atus AS Company_Status, \r\n            T.PaymentMethodStatus AS Company_PaymentMe");
            viewString.Append("thodStatus, \r\n            T.LastPaymentMethodErrorDate AS Company_LastPaymentMet");
            viewString.Append("hodErrorDate, \r\n            T.LastPaymentMethodError AS Company_LastPaymentMetho");
            viewString.Append("dError, \r\n            T.CompanyRegNo AS Company_CompanyRegNo, \r\n            T.Ta");
            viewString.Append("xRegNo AS Company_TaxRegNo, \r\n            T.CreationDateTime AS Company_Creation");
            viewString.Append("DateTime, \r\n            T.NoOfBranches AS Company_NoOfBranches, \r\n            T.");
            viewString.Append("BillingAddressName AS Company_BillingAddressName, \r\n            T.IsDeleted AS C");
            viewString.Append("ompany_IsDeleted, \r\n            T.DeleteDate AS Company_DeleteDate, \r\n          ");
            viewString.Append("  T.IsSpecialAccount AS Company_IsSpecialAccount, \r\n            T.StripeSubscrip");
            viewString.Append("tionId AS Company_StripeSubscriptionId, \r\n            T.StripeSubscriptionStatus");
            viewString.Append(" AS Company_StripeSubscriptionStatus, \r\n            True AS _from0\r\n        FROM");
            viewString.Append(" SMDModelStoreContainer.Company AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Companies", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Cities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Cities", @"
    SELECT VALUE -- Constructing Cities
        [DomainModels.City](T1.City_CityId, T1.City_CityName, T1.City_IsCapital, T1.City_CountryId, T1.City_GeoLONG, T1.City_GeoLAT)
    FROM (
        SELECT 
            T.CityId AS City_CityId, 
            T.CityName AS City_CityName, 
            T.IsCapital AS City_IsCapital, 
            T.CountryId AS City_CountryId, 
            T.GeoLONG AS City_GeoLONG, 
            T.GeoLAT AS City_GeoLAT, 
            True AS _from0
        FROM SMDModelStoreContainer.City AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CampaignEventHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CampaignEventHistories", @"
    SELECT VALUE -- Constructing CampaignEventHistories
        [DomainModels.CampaignEventHistory](T1.CampaignEventHistory_EventId, T1.CampaignEventHistory_EventStatusId, T1.CampaignEventHistory_CampaignID, T1.CampaignEventHistory_EventDateTime, T1.CampaignEventHistory_CouponId, T1.CampaignEventHistory_SQID, T1.CampaignEventHistory_PQID)
    FROM (
        SELECT 
            T.EventId AS CampaignEventHistory_EventId, 
            T.EventStatusId AS CampaignEventHistory_EventStatusId, 
            T.CampaignID AS CampaignEventHistory_CampaignID, 
            T.EventDateTime AS CampaignEventHistory_EventDateTime, 
            T.CouponId AS CampaignEventHistory_CouponId, 
            T.SQID AS CampaignEventHistory_SQID, 
            T.PQID AS CampaignEventHistory_PQID, 
            True AS _from0
        FROM SMDModelStoreContainer.CampaignEventHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.EventStatuses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.EventStatuses", @"
    SELECT VALUE -- Constructing EventStatuses
        [DomainModels.EventStatus](T1.EventStatus_EventStatusId, T1.EventStatus_EventName)
    FROM (
        SELECT 
            T.EventStatusId AS EventStatus_EventStatusId, 
            T.EventName AS EventStatus_EventName, 
            True AS _from0
        FROM SMDModelStoreContainer.EventStatuses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignClickRateHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignClickRateHistories", @"
    SELECT VALUE -- Constructing AdCampaignClickRateHistories
        [DomainModels.AdCampaignClickRateHistory](T1.AdCampaignClickRateHistory_ClickRateId, T1.AdCampaignClickRateHistory_CampaignID, T1.AdCampaignClickRateHistory_ClickRate, T1.AdCampaignClickRateHistory_RateChangeDateTime)
    FROM (
        SELECT 
            T.ClickRateId AS AdCampaignClickRateHistory_ClickRateId, 
            T.CampaignID AS AdCampaignClickRateHistory_CampaignID, 
            T.ClickRate AS AdCampaignClickRateHistory_ClickRate, 
            T.RateChangeDateTime AS AdCampaignClickRateHistory_RateChangeDateTime, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignClickRateHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.PayOutHistories
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.PayOutHistories", "\r\n    SELECT VALUE -- Constructing PayOutHistories\r\n        [DomainModels.PayOutH" +
                    "istory](T1.PayOutHistory_PayOutId, T1.PayOutHistory_CompanyId, T1.PayOutHistory_" +
                    "RequestDateTime, T1.PayOutHistory_CentzAmount, T1.PayOutHistory_DollarAmount, T1" +
                    ".PayOutHistory_StageOneStatus, T1.PayOutHistory_StageOneRejectionReason, T1.PayO" +
                    "utHistory_StageOneEventDate, T1.PayOutHistory_StageOneUserId, T1.PayOutHistory_S" +
                    "tageTwoStatus, T1.PayOutHistory_StageTwoRejectionReason, T1.PayOutHistory_StageT" +
                    "woEventDate, T1.PayOutHistory_StageTwoUserId, T1.PayOutHistory_TargetPayoutAccou" +
                    "nt)\r\n    FROM (\r\n        SELECT \r\n            T.PayOutId AS PayOutHistory_PayOut" +
                    "Id, \r\n            T.CompanyId AS PayOutHistory_CompanyId, \r\n            T.Reques" +
                    "tDateTime AS PayOutHistory_RequestDateTime, \r\n            T.CentzAmount AS PayOu" +
                    "tHistory_CentzAmount, \r\n            T.DollarAmount AS PayOutHistory_DollarAmount" +
                    ", \r\n            T.StageOneStatus AS PayOutHistory_StageOneStatus, \r\n            " +
                    "T.StageOneRejectionReason AS PayOutHistory_StageOneRejectionReason, \r\n          " +
                    "  T.StageOneEventDate AS PayOutHistory_StageOneEventDate, \r\n            T.StageO" +
                    "neUserId AS PayOutHistory_StageOneUserId, \r\n            T.StageTwoStatus AS PayO" +
                    "utHistory_StageTwoStatus, \r\n            T.StageTwoRejectionReason AS PayOutHisto" +
                    "ry_StageTwoRejectionReason, \r\n            T.StageTwoEventDate AS PayOutHistory_S" +
                    "tageTwoEventDate, \r\n            T.StageTwoUserId AS PayOutHistory_StageTwoUserId" +
                    ", \r\n            T.TargetPayoutAccount AS PayOutHistory_TargetPayoutAccount, \r\n  " +
                    "          True AS _from0\r\n        FROM SMDModelStoreContainer.PayOutHistory AS T" +
                    "\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionUserAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionUserAnswers", @"
    SELECT VALUE -- Constructing ProfileQuestionUserAnswers
        [DomainModels.ProfileQuestionUserAnswer](T1.ProfileQuestionUserAnswer_PQUAnswerID, T1.ProfileQuestionUserAnswer_PQID, T1.ProfileQuestionUserAnswer_UserID, T1.ProfileQuestionUserAnswer_AnswerDateTime, T1.ProfileQuestionUserAnswer_PQAnswerID, T1.ProfileQuestionUserAnswer_CompanyId, T1.ProfileQuestionUserAnswer_ResponseType)
    FROM (
        SELECT 
            T.PQUAnswerID AS ProfileQuestionUserAnswer_PQUAnswerID, 
            T.PQID AS ProfileQuestionUserAnswer_PQID, 
            T.UserID AS ProfileQuestionUserAnswer_UserID, 
            T.AnswerDateTime AS ProfileQuestionUserAnswer_AnswerDateTime, 
            T.PQAnswerID AS ProfileQuestionUserAnswer_PQAnswerID, 
            T.CompanyId AS ProfileQuestionUserAnswer_CompanyId, 
            T.ResponseType AS ProfileQuestionUserAnswer_ResponseType, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionUserAnswer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CouponRatingReviews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CouponRatingReviews", @"
    SELECT VALUE -- Constructing CouponRatingReviews
        [DomainModels.CouponRatingReview](T1.CouponRatingReview_CouponReviewId, T1.CouponRatingReview_CouponId, T1.CouponRatingReview_StarRating, T1.CouponRatingReview_Review, T1.CouponRatingReview_RatingDateTime, T1.CouponRatingReview_UserId, T1.CouponRatingReview_CompanyId, T1.CouponRatingReview_Status, T1.CouponRatingReview_ReviewImage1, T1.CouponRatingReview_ReviewImage2, T1.CouponRatingReview_Reviewimage3)
    FROM (
        SELECT 
            T.CouponReviewId AS CouponRatingReview_CouponReviewId, 
            T.CouponId AS CouponRatingReview_CouponId, 
            T.StarRating AS CouponRatingReview_StarRating, 
            T.Review AS CouponRatingReview_Review, 
            T.RatingDateTime AS CouponRatingReview_RatingDateTime, 
            T.UserId AS CouponRatingReview_UserId, 
            T.CompanyId AS CouponRatingReview_CompanyId, 
            T.Status AS CouponRatingReview_Status, 
            T.ReviewImage1 AS CouponRatingReview_ReviewImage1, 
            T.ReviewImage2 AS CouponRatingReview_ReviewImage2, 
            T.Reviewimage3 AS CouponRatingReview_Reviewimage3, 
            True AS _from0
        FROM SMDModelStoreContainer.CouponRatingReview AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserGameResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserGameResponses", @"
    SELECT VALUE -- Constructing UserGameResponses
        [DomainModels.UserGameResponse](T1.UserGameResponse_UserGameResponseId, T1.UserGameResponse_UserId, T1.UserGameResponse_GameId, T1.UserGameResponse_ResponseDateTime, T1.UserGameResponse_PlayTime, T1.UserGameResponse_Score, T1.UserGameResponse_Accuracy, T1.UserGameResponse_AdCampaignResponseID)
    FROM (
        SELECT 
            T.UserGameResponseId AS UserGameResponse_UserGameResponseId, 
            T.UserId AS UserGameResponse_UserId, 
            T.GameId AS UserGameResponse_GameId, 
            T.ResponseDateTime AS UserGameResponse_ResponseDateTime, 
            T.PlayTime AS UserGameResponse_PlayTime, 
            T.Score AS UserGameResponse_Score, 
            T.Accuracy AS UserGameResponse_Accuracy, 
            T.AdCampaignResponseID AS UserGameResponse_AdCampaignResponseID, 
            True AS _from0
        FROM SMDModelStoreContainer.UserGameResponse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserCouponCategoryClicks
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserCouponCategoryClicks", @"
    SELECT VALUE -- Constructing UserCouponCategoryClicks
        [DomainModels.UserCouponCategoryClick](T1.UserCouponCategoryClick_UserCouponCategoryClick1, T1.UserCouponCategoryClick_CouponCategoryId, T1.UserCouponCategoryClick_UserId, T1.UserCouponCategoryClick_ClickDateTime)
    FROM (
        SELECT 
            T.UserCouponCategoryClick AS UserCouponCategoryClick_UserCouponCategoryClick1, 
            T.CouponCategoryId AS UserCouponCategoryClick_CouponCategoryId, 
            T.UserId AS UserCouponCategoryClick_UserId, 
            T.ClickDateTime AS UserCouponCategoryClick_ClickDateTime, 
            True AS _from0
        FROM SMDModelStoreContainer.UserCouponCategoryClicks AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AspNetUserRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AspNetUserRoles", @"
    SELECT VALUE -- Constructing AspNetUserRoles
        [DomainModels.AspNetUserRoles](T3.AspNetUserRoles_Role, T3.AspNetUserRoles_AspNetUser)
    FROM (
        SELECT -- Constructing Role
            CreateRef(BaseDbContext.Roles, row(T2.AspNetUserRoles_Role_Id), [DomainModels.Role]) AS AspNetUserRoles_Role, 
            T2.AspNetUserRoles_AspNetUser
        FROM (
            SELECT -- Constructing AspNetUser
                T1.AspNetUserRoles_Role_Id, 
                CreateRef(BaseDbContext.Users, row(T1.AspNetUserRoles_AspNetUser_Id), [DomainModels.User]) AS AspNetUserRoles_AspNetUser
            FROM (
                SELECT 
                    T.RoleId AS AspNetUserRoles_Role_Id, 
                    T.UserId AS AspNetUserRoles_AspNetUser_Id, 
                    True AS _from0
                FROM SMDModelStoreContainer.AspNetUserRoles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SystemMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SystemMails", @"
    SELECT VALUE -- Constructing SystemMails
        [SMDModel.Store.SystemMails](T1.SystemMails_MailID, T1.SystemMails_Title, T1.SystemMails_FromName, T1.SystemMails_fromEmail, T1.SystemMails_Subject, T1.SystemMails_body, T1.SystemMails_EmailTarget)
    FROM (
        SELECT 
            T.MailId AS SystemMails_MailID, 
            T.Title AS SystemMails_Title, 
            T.FromName AS SystemMails_FromName, 
            T.FromEmail AS SystemMails_fromEmail, 
            T.Subject AS SystemMails_Subject, 
            T.Body AS SystemMails_body, 
            T.EmailTarget AS SystemMails_EmailTarget, 
            True AS _from0
        FROM BaseDbContext.SystemMails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SystemMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SystemMails", @"
    SELECT VALUE -- Constructing SystemMails
        [DomainModels.SystemMail](T1.SystemMail_MailId, T1.SystemMail_Title, T1.SystemMail_FromName, T1.SystemMail_FromEmail, T1.SystemMail_Subject, T1.SystemMail_Body, T1.SystemMail_EmailTarget)
    FROM (
        SELECT 
            T.MailID AS SystemMail_MailId, 
            T.Title AS SystemMail_Title, 
            T.FromName AS SystemMail_FromName, 
            T.fromEmail AS SystemMail_FromEmail, 
            T.Subject AS SystemMail_Subject, 
            T.body AS SystemMail_Body, 
            T.EmailTarget AS SystemMail_EmailTarget, 
            True AS _from0
        FROM SMDModelStoreContainer.SystemMails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AuditLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AuditLog", @"
    SELECT VALUE -- Constructing AuditLog
        [SMDModel.Store.AuditLog](T1.AuditLog_ID, T1.AuditLog_AuditType, T1.AuditLog_UserID, T1.AuditLog_AuditDateTime, T1.AuditLog_AuditEntity, T1.AuditLog_AuditEntityDescription, T1.AuditLog_TableName)
    FROM (
        SELECT 
            T.Id AS AuditLog_ID, 
            T.AuditType AS AuditLog_AuditType, 
            T.UserId AS AuditLog_UserID, 
            T.AuditDateTime AS AuditLog_AuditDateTime, 
            T.AuditEntity AS AuditLog_AuditEntity, 
            T.AuditEntityDescription AS AuditLog_AuditEntityDescription, 
            T.TableName AS AuditLog_TableName, 
            True AS _from0
        FROM BaseDbContext.AuditLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AuditLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AuditLogs", @"
    SELECT VALUE -- Constructing AuditLogs
        [DomainModels.AuditLog](T1.AuditLog_Id, T1.AuditLog_AuditType, T1.AuditLog_UserId, T1.AuditLog_AuditDateTime, T1.AuditLog_AuditEntity, T1.AuditLog_AuditEntityDescription, T1.AuditLog_TableName)
    FROM (
        SELECT 
            T.ID AS AuditLog_Id, 
            T.AuditType AS AuditLog_AuditType, 
            T.UserID AS AuditLog_UserId, 
            T.AuditDateTime AS AuditLog_AuditDateTime, 
            T.AuditEntity AS AuditLog_AuditEntity, 
            T.AuditEntityDescription AS AuditLog_AuditEntityDescription, 
            T.TableName AS AuditLog_TableName, 
            True AS _from0
        FROM SMDModelStoreContainer.AuditLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CustomUrl
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CustomUrl", @"
    SELECT VALUE -- Constructing CustomUrl
        [SMDModel.Store.CustomUrl](T1.CustomUrl_UrlId, T1.CustomUrl_ShortUrl, T1.CustomUrl_ActualUrl, T1.CustomUrl_UserId)
    FROM (
        SELECT 
            T.UrlId AS CustomUrl_UrlId, 
            T.ShortUrl AS CustomUrl_ShortUrl, 
            T.ActualUrl AS CustomUrl_ActualUrl, 
            T.UserId AS CustomUrl_UserId, 
            True AS _from0
        FROM BaseDbContext.CustomUrls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CustomUrls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CustomUrls", @"
    SELECT VALUE -- Constructing CustomUrls
        [DomainModels.CustomUrl](T1.CustomUrl_UrlId, T1.CustomUrl_ShortUrl, T1.CustomUrl_ActualUrl, T1.CustomUrl_UserId)
    FROM (
        SELECT 
            T.UrlId AS CustomUrl_UrlId, 
            T.ShortUrl AS CustomUrl_ShortUrl, 
            T.ActualUrl AS CustomUrl_ActualUrl, 
            T.UserId AS CustomUrl_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.CustomUrl AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_GetUserTransactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_GetUserTransactions", @"
    SELECT VALUE -- Constructing vw_GetUserTransactions
        [SMDModel.Store.vw_GetUserTransactions](T1.[vw_GetUserTransactions.tid], T1.[vw_GetUserTransactions.TDate], T1.[vw_GetUserTransactions.Deposit], T1.[vw_GetUserTransactions.Withdrawal], T1.[vw_GetUserTransactions.Transaction], T1.[vw_GetUserTransactions.userId], T1.[vw_GetUserTransactions.AccountBalance], T1.[vw_GetUserTransactions.CurentBalance], T1.[vw_GetUserTransactions.VoucherTitle])
    FROM (
        SELECT 
            T.tid AS [vw_GetUserTransactions.tid], 
            T.TDate AS [vw_GetUserTransactions.TDate], 
            T.Deposit AS [vw_GetUserTransactions.Deposit], 
            T.Withdrawal AS [vw_GetUserTransactions.Withdrawal], 
            T.Transaction AS [vw_GetUserTransactions.Transaction], 
            T.userId AS [vw_GetUserTransactions.userId], 
            T.AccountBalance AS [vw_GetUserTransactions.AccountBalance], 
            T.CurentBalance AS [vw_GetUserTransactions.CurentBalance], 
            T.VoucherTitle AS [vw_GetUserTransactions.VoucherTitle], 
            True AS _from0
        FROM BaseDbContext.vw_GetUserTransactions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_GetUserTransactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_GetUserTransactions", @"
    SELECT VALUE -- Constructing vw_GetUserTransactions
        [DomainModels.vw_GetUserTransactions](T1.[vw_GetUserTransactions.tid], T1.[vw_GetUserTransactions.TDate], T1.[vw_GetUserTransactions.Deposit], T1.[vw_GetUserTransactions.Withdrawal], T1.[vw_GetUserTransactions.Transaction], T1.[vw_GetUserTransactions.userId], T1.[vw_GetUserTransactions.AccountBalance], T1.[vw_GetUserTransactions.CurentBalance], T1.[vw_GetUserTransactions.VoucherTitle])
    FROM (
        SELECT 
            T.tid AS [vw_GetUserTransactions.tid], 
            T.TDate AS [vw_GetUserTransactions.TDate], 
            T.Deposit AS [vw_GetUserTransactions.Deposit], 
            T.Withdrawal AS [vw_GetUserTransactions.Withdrawal], 
            T.Transaction AS [vw_GetUserTransactions.Transaction], 
            T.userId AS [vw_GetUserTransactions.userId], 
            T.AccountBalance AS [vw_GetUserTransactions.AccountBalance], 
            T.CurentBalance AS [vw_GetUserTransactions.CurentBalance], 
            T.VoucherTitle AS [vw_GetUserTransactions.VoucherTitle], 
            True AS _from0
        FROM SMDModelStoreContainer.vw_GetUserTransactions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.EmailQueue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.EmailQueue", "\r\n    SELECT VALUE -- Constructing EmailQueue\r\n        [SMDModel.Store.EmailQueue" +
                    "](T1.EmailQueue_EmailQueueId, T1.EmailQueue_To, T1.EmailQueue_Cc, T1.EmailQueue_" +
                    "EmailFrom, T1.EmailQueue_Type, T1.EmailQueue_Subject, T1.EmailQueue_Body, T1.Ema" +
                    "ilQueue_Images, T1.EmailQueue_SendDateTime, T1.EmailQueue_IsDeliverd, T1.EmailQu" +
                    "eue_SMTPUserName, T1.EmailQueue_SMTPPassword, T1.EmailQueue_SMTPServer, T1.Email" +
                    "Queue_ErrorResponse, T1.EmailQueue_FileAttachment, T1.EmailQueue_AttemptCount, T" +
                    "1.EmailQueue_ToName, T1.EmailQueue_FromName)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.EmailQueueId AS EmailQueue_EmailQueueId, \r\n            T.To AS EmailQue" +
                    "ue_To, \r\n            T.Cc AS EmailQueue_Cc, \r\n            T.EmailFrom AS EmailQu" +
                    "eue_EmailFrom, \r\n            T.Type AS EmailQueue_Type, \r\n            T.Subject " +
                    "AS EmailQueue_Subject, \r\n            T.Body AS EmailQueue_Body, \r\n            T." +
                    "Images AS EmailQueue_Images, \r\n            T.SendDateTime AS EmailQueue_SendDate" +
                    "Time, \r\n            T.IsDeliverd AS EmailQueue_IsDeliverd, \r\n            T.SMTPU" +
                    "serName AS EmailQueue_SMTPUserName, \r\n            T.SMTPPassword AS EmailQueue_S" +
                    "MTPPassword, \r\n            T.SMTPServer AS EmailQueue_SMTPServer, \r\n            " +
                    "T.ErrorResponse AS EmailQueue_ErrorResponse, \r\n            T.FileAttachment AS E" +
                    "mailQueue_FileAttachment, \r\n            T.AttemptCount AS EmailQueue_AttemptCoun" +
                    "t, \r\n            T.ToName AS EmailQueue_ToName, \r\n            T.FromName AS Emai" +
                    "lQueue_FromName, \r\n            True AS _from0\r\n        FROM BaseDbContext.EmailQ" +
                    "ueues AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.EmailQueues
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.EmailQueues", "\r\n    SELECT VALUE -- Constructing EmailQueues\r\n        [DomainModels.EmailQueue]" +
                    "(T1.EmailQueue_EmailQueueId, T1.EmailQueue_To, T1.EmailQueue_Cc, T1.EmailQueue_E" +
                    "mailFrom, T1.EmailQueue_Type, T1.EmailQueue_Subject, T1.EmailQueue_Body, T1.Emai" +
                    "lQueue_Images, T1.EmailQueue_SendDateTime, T1.EmailQueue_IsDeliverd, T1.EmailQue" +
                    "ue_SMTPUserName, T1.EmailQueue_SMTPPassword, T1.EmailQueue_SMTPServer, T1.EmailQ" +
                    "ueue_ErrorResponse, T1.EmailQueue_FileAttachment, T1.EmailQueue_AttemptCount, T1" +
                    ".EmailQueue_ToName, T1.EmailQueue_FromName)\r\n    FROM (\r\n        SELECT \r\n      " +
                    "      T.EmailQueueId AS EmailQueue_EmailQueueId, \r\n            T.To AS EmailQueu" +
                    "e_To, \r\n            T.Cc AS EmailQueue_Cc, \r\n            T.EmailFrom AS EmailQue" +
                    "ue_EmailFrom, \r\n            T.Type AS EmailQueue_Type, \r\n            T.Subject A" +
                    "S EmailQueue_Subject, \r\n            T.Body AS EmailQueue_Body, \r\n            T.I" +
                    "mages AS EmailQueue_Images, \r\n            T.SendDateTime AS EmailQueue_SendDateT" +
                    "ime, \r\n            T.IsDeliverd AS EmailQueue_IsDeliverd, \r\n            T.SMTPUs" +
                    "erName AS EmailQueue_SMTPUserName, \r\n            T.SMTPPassword AS EmailQueue_SM" +
                    "TPPassword, \r\n            T.SMTPServer AS EmailQueue_SMTPServer, \r\n            T" +
                    ".ErrorResponse AS EmailQueue_ErrorResponse, \r\n            T.FileAttachment AS Em" +
                    "ailQueue_FileAttachment, \r\n            T.AttemptCount AS EmailQueue_AttemptCount" +
                    ", \r\n            T.ToName AS EmailQueue_ToName, \r\n            T.FromName AS Email" +
                    "Queue_FromName, \r\n            True AS _from0\r\n        FROM SMDModelStoreContaine" +
                    "r.EmailQueue AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_PublisherTransaction
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_PublisherTransaction", @"
    SELECT VALUE -- Constructing vw_PublisherTransaction
        [SMDModel.Store.vw_PublisherTransaction](T1.[vw_PublisherTransaction.tid], T1.[vw_PublisherTransaction.TDate], T1.[vw_PublisherTransaction.Deposit], T1.[vw_PublisherTransaction.Withdrawal], T1.[vw_PublisherTransaction.Transaction], T1.[vw_PublisherTransaction.userId], T1.[vw_PublisherTransaction.ownerCompanyId], T1.[vw_PublisherTransaction.CurentBalance], T1.[vw_PublisherTransaction.CampaignID], T1.[vw_PublisherTransaction.Email])
    FROM (
        SELECT 
            T.tid AS [vw_PublisherTransaction.tid], 
            T.TDate AS [vw_PublisherTransaction.TDate], 
            T.Deposit AS [vw_PublisherTransaction.Deposit], 
            T.Withdrawal AS [vw_PublisherTransaction.Withdrawal], 
            T.Transaction AS [vw_PublisherTransaction.Transaction], 
            T.userId AS [vw_PublisherTransaction.userId], 
            T.ownerCompanyId AS [vw_PublisherTransaction.ownerCompanyId], 
            T.CurentBalance AS [vw_PublisherTransaction.CurentBalance], 
            T.CampaignID AS [vw_PublisherTransaction.CampaignID], 
            T.Email AS [vw_PublisherTransaction.Email], 
            True AS _from0
        FROM BaseDbContext.vw_PublisherTransaction AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_PublisherTransaction
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_PublisherTransaction", @"
    SELECT VALUE -- Constructing vw_PublisherTransaction
        [DomainModels.vw_PublisherTransaction](T1.[vw_PublisherTransaction.tid], T1.[vw_PublisherTransaction.TDate], T1.[vw_PublisherTransaction.Deposit], T1.[vw_PublisherTransaction.Withdrawal], T1.[vw_PublisherTransaction.Transaction], T1.[vw_PublisherTransaction.userId], T1.[vw_PublisherTransaction.ownerCompanyId], T1.[vw_PublisherTransaction.CurentBalance], T1.[vw_PublisherTransaction.CampaignID], T1.[vw_PublisherTransaction.Email])
    FROM (
        SELECT 
            T.tid AS [vw_PublisherTransaction.tid], 
            T.TDate AS [vw_PublisherTransaction.TDate], 
            T.Deposit AS [vw_PublisherTransaction.Deposit], 
            T.Withdrawal AS [vw_PublisherTransaction.Withdrawal], 
            T.Transaction AS [vw_PublisherTransaction.Transaction], 
            T.userId AS [vw_PublisherTransaction.userId], 
            T.ownerCompanyId AS [vw_PublisherTransaction.ownerCompanyId], 
            T.CurentBalance AS [vw_PublisherTransaction.CurentBalance], 
            T.CampaignID AS [vw_PublisherTransaction.CampaignID], 
            T.Email AS [vw_PublisherTransaction.Email], 
            True AS _from0
        FROM SMDModelStoreContainer.vw_PublisherTransaction AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_Cash4AdsReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_Cash4AdsReport", @"
    SELECT VALUE -- Constructing vw_Cash4AdsReport
        [SMDModel.Store.vw_Cash4AdsReport](T1.[vw_Cash4AdsReport.tid], T1.[vw_Cash4AdsReport.TDate], T1.[vw_Cash4AdsReport.Deposit], T1.[vw_Cash4AdsReport.Withdrawal], T1.[vw_Cash4AdsReport.Transaction], T1.[vw_Cash4AdsReport.userId], T1.[vw_Cash4AdsReport.AccountBalance], T1.[vw_Cash4AdsReport.CurentBalance], T1.[vw_Cash4AdsReport.CampaignID], T1.[vw_Cash4AdsReport.VoucherTitle], T1.[vw_Cash4AdsReport.Email])
    FROM (
        SELECT 
            T.tid AS [vw_Cash4AdsReport.tid], 
            T.TDate AS [vw_Cash4AdsReport.TDate], 
            T.Deposit AS [vw_Cash4AdsReport.Deposit], 
            T.Withdrawal AS [vw_Cash4AdsReport.Withdrawal], 
            T.Transaction AS [vw_Cash4AdsReport.Transaction], 
            T.userId AS [vw_Cash4AdsReport.userId], 
            T.AccountBalance AS [vw_Cash4AdsReport.AccountBalance], 
            T.CurentBalance AS [vw_Cash4AdsReport.CurentBalance], 
            T.CampaignID AS [vw_Cash4AdsReport.CampaignID], 
            T.VoucherTitle AS [vw_Cash4AdsReport.VoucherTitle], 
            T.Email AS [vw_Cash4AdsReport.Email], 
            True AS _from0
        FROM BaseDbContext.vw_Cash4AdsReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_Cash4AdsReport
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_Cash4AdsReport", @"
    SELECT VALUE -- Constructing vw_Cash4AdsReport
        [DomainModels.vw_Cash4AdsReport](T1.[vw_Cash4AdsReport.tid], T1.[vw_Cash4AdsReport.TDate], T1.[vw_Cash4AdsReport.Deposit], T1.[vw_Cash4AdsReport.Withdrawal], T1.[vw_Cash4AdsReport.Transaction], T1.[vw_Cash4AdsReport.userId], T1.[vw_Cash4AdsReport.AccountBalance], T1.[vw_Cash4AdsReport.CurentBalance], T1.[vw_Cash4AdsReport.CampaignID], T1.[vw_Cash4AdsReport.VoucherTitle], T1.[vw_Cash4AdsReport.Email])
    FROM (
        SELECT 
            T.tid AS [vw_Cash4AdsReport.tid], 
            T.TDate AS [vw_Cash4AdsReport.TDate], 
            T.Deposit AS [vw_Cash4AdsReport.Deposit], 
            T.Withdrawal AS [vw_Cash4AdsReport.Withdrawal], 
            T.Transaction AS [vw_Cash4AdsReport.Transaction], 
            T.userId AS [vw_Cash4AdsReport.userId], 
            T.AccountBalance AS [vw_Cash4AdsReport.AccountBalance], 
            T.CurentBalance AS [vw_Cash4AdsReport.CurentBalance], 
            T.CampaignID AS [vw_Cash4AdsReport.CampaignID], 
            T.VoucherTitle AS [vw_Cash4AdsReport.VoucherTitle], 
            T.Email AS [vw_Cash4AdsReport.Email], 
            True AS _from0
        FROM SMDModelStoreContainer.vw_Cash4AdsReport AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.UserFavouriteCoupon
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.UserFavouriteCoupon", @"
    SELECT VALUE -- Constructing UserFavouriteCoupon
        [SMDModel.Store.UserFavouriteCoupon](T1.UserFavouriteCoupon_FavouriteCouponId, T1.UserFavouriteCoupon_CouponId, T1.UserFavouriteCoupon_UserId)
    FROM (
        SELECT 
            T.FavouriteCouponId AS UserFavouriteCoupon_FavouriteCouponId, 
            T.CouponId AS UserFavouriteCoupon_CouponId, 
            T.UserId AS UserFavouriteCoupon_UserId, 
            True AS _from0
        FROM BaseDbContext.UserFavouriteCoupons AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserFavouriteCoupons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserFavouriteCoupons", @"
    SELECT VALUE -- Constructing UserFavouriteCoupons
        [DomainModels.UserFavouriteCoupon](T1.UserFavouriteCoupon_FavouriteCouponId, T1.UserFavouriteCoupon_CouponId, T1.UserFavouriteCoupon_UserId)
    FROM (
        SELECT 
            T.FavouriteCouponId AS UserFavouriteCoupon_FavouriteCouponId, 
            T.CouponId AS UserFavouriteCoupon_CouponId, 
            T.UserId AS UserFavouriteCoupon_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.UserFavouriteCoupon AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_CompanyUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_CompanyUsers", @"
    SELECT VALUE -- Constructing vw_CompanyUsers
        [SMDModel.Store.vw_CompanyUsers](T1.[vw_CompanyUsers.id], T1.[vw_CompanyUsers.UserId], T1.[vw_CompanyUsers.email], T1.[vw_CompanyUsers.FullName], T1.[vw_CompanyUsers.RoleName], T1.[vw_CompanyUsers.CreatedOn], T1.[vw_CompanyUsers.status], T1.[vw_CompanyUsers.companyid], T1.[vw_CompanyUsers.CompanyName], T1.[vw_CompanyUsers.RoleId], T1.[vw_CompanyUsers.Logo])
    FROM (
        SELECT 
            T.id AS [vw_CompanyUsers.id], 
            T.UserId AS [vw_CompanyUsers.UserId], 
            T.email AS [vw_CompanyUsers.email], 
            T.FullName AS [vw_CompanyUsers.FullName], 
            T.RoleName AS [vw_CompanyUsers.RoleName], 
            T.CreatedOn AS [vw_CompanyUsers.CreatedOn], 
            T.status AS [vw_CompanyUsers.status], 
            T.companyid AS [vw_CompanyUsers.companyid], 
            T.CompanyName AS [vw_CompanyUsers.CompanyName], 
            T.RoleId AS [vw_CompanyUsers.RoleId], 
            T.Logo AS [vw_CompanyUsers.Logo], 
            True AS _from0
        FROM BaseDbContext.vw_CompanyUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_CompanyUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_CompanyUsers", @"
    SELECT VALUE -- Constructing vw_CompanyUsers
        [DomainModels.vw_CompanyUsers](T1.[vw_CompanyUsers.id], T1.[vw_CompanyUsers.UserId], T1.[vw_CompanyUsers.email], T1.[vw_CompanyUsers.FullName], T1.[vw_CompanyUsers.RoleName], T1.[vw_CompanyUsers.CreatedOn], T1.[vw_CompanyUsers.status], T1.[vw_CompanyUsers.companyid], T1.[vw_CompanyUsers.CompanyName], T1.[vw_CompanyUsers.RoleId], T1.[vw_CompanyUsers.Logo])
    FROM (
        SELECT 
            T.id AS [vw_CompanyUsers.id], 
            T.UserId AS [vw_CompanyUsers.UserId], 
            T.email AS [vw_CompanyUsers.email], 
            T.FullName AS [vw_CompanyUsers.FullName], 
            T.RoleName AS [vw_CompanyUsers.RoleName], 
            T.CreatedOn AS [vw_CompanyUsers.CreatedOn], 
            T.status AS [vw_CompanyUsers.status], 
            T.companyid AS [vw_CompanyUsers.companyid], 
            T.CompanyName AS [vw_CompanyUsers.CompanyName], 
            T.RoleId AS [vw_CompanyUsers.RoleId], 
            T.Logo AS [vw_CompanyUsers.Logo], 
            True AS _from0
        FROM SMDModelStoreContainer.vw_CompanyUsers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Phrase
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Phrase", @"
    SELECT VALUE -- Constructing Phrase
        [SMDModel.Store.Phrase](T1.Phrase_PhraseId, T1.Phrase_PhraseName, T1.Phrase_SectionId, T1.Phrase_SortOrder)
    FROM (
        SELECT 
            T.PhraseId AS Phrase_PhraseId, 
            T.PhraseName AS Phrase_PhraseName, 
            T.SectionId AS Phrase_SectionId, 
            T.SortOrder AS Phrase_SortOrder, 
            True AS _from0
        FROM BaseDbContext.Phrases AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Section
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Section", @"
    SELECT VALUE -- Constructing Section
        [SMDModel.Store.Section](T1.Section_SectionId, T1.Section_SectionName, T1.Section_SecOrder)
    FROM (
        SELECT 
            T.SectionId AS Section_SectionId, 
            T.SectionName AS Section_SectionName, 
            T.SecOrder AS Section_SecOrder, 
            True AS _from0
        FROM BaseDbContext.Sections AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Phrases
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Phrases", @"
    SELECT VALUE -- Constructing Phrases
        [DomainModels.Phrase](T1.Phrase_PhraseId, T1.Phrase_PhraseName, T1.Phrase_SectionId, T1.Phrase_SortOrder)
    FROM (
        SELECT 
            T.PhraseId AS Phrase_PhraseId, 
            T.PhraseName AS Phrase_PhraseName, 
            T.SectionId AS Phrase_SectionId, 
            T.SortOrder AS Phrase_SortOrder, 
            True AS _from0
        FROM SMDModelStoreContainer.Phrase AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Sections
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Sections", @"
    SELECT VALUE -- Constructing Sections
        [DomainModels.Section](T1.Section_SectionId, T1.Section_SectionName, T1.Section_SecOrder)
    FROM (
        SELECT 
            T.SectionId AS Section_SectionId, 
            T.SectionName AS Section_SectionName, 
            T.SecOrder AS Section_SecOrder, 
            True AS _from0
        FROM SMDModelStoreContainer.Section AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.UserCouponView
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.UserCouponView", @"
    SELECT VALUE -- Constructing UserCouponView
        [SMDModel.Store.UserCouponView](T1.UserCouponView_UserCouponViewId, T1.UserCouponView_CouponId, T1.UserCouponView_UserId, T1.UserCouponView_ViewDateTime, T1.UserCouponView_userLocationLAT, T1.UserCouponView_userLocationLONG)
    FROM (
        SELECT 
            T.UserCouponViewId AS UserCouponView_UserCouponViewId, 
            T.CouponId AS UserCouponView_CouponId, 
            T.UserId AS UserCouponView_UserId, 
            T.ViewDateTime AS UserCouponView_ViewDateTime, 
            T.userLocationLAT AS UserCouponView_userLocationLAT, 
            T.userLocationLONG AS UserCouponView_userLocationLONG, 
            True AS _from0
        FROM BaseDbContext.UserCouponViews AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserCouponViews
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserCouponViews", @"
    SELECT VALUE -- Constructing UserCouponViews
        [DomainModels.UserCouponView](T1.UserCouponView_UserCouponViewId, T1.UserCouponView_CouponId, T1.UserCouponView_UserId, T1.UserCouponView_ViewDateTime, T1.UserCouponView_userLocationLAT, T1.UserCouponView_userLocationLONG)
    FROM (
        SELECT 
            T.UserCouponViewId AS UserCouponView_UserCouponViewId, 
            T.CouponId AS UserCouponView_CouponId, 
            T.UserId AS UserCouponView_UserId, 
            T.ViewDateTime AS UserCouponView_ViewDateTime, 
            T.userLocationLAT AS UserCouponView_userLocationLAT, 
            T.userLocationLONG AS UserCouponView_userLocationLONG, 
            True AS _from0
        FROM SMDModelStoreContainer.UserCouponView AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_Coupons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(8881);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vw_Coupons\r\n        [SMDModel.Store.vw_Coupon");
            viewString.Append("s](T1.[vw_Coupons.CouponId], T1.[vw_Coupons.LanguageId], T1.[vw_Coupons.UserId],");
            viewString.Append(" T1.[vw_Coupons.CouponTitle], T1.[vw_Coupons.SearchKeywords], T1.[vw_Coupons.Sta");
            viewString.Append("tus], T1.[vw_Coupons.Archived], T1.[vw_Coupons.Approved], T1.[vw_Coupons.Approve");
            viewString.Append("dBy], T1.[vw_Coupons.ApprovalDateTime], T1.[vw_Coupons.CreatedDateTime], T1.[vw_");
            viewString.Append("Coupons.CreatedBy], T1.[vw_Coupons.ModifiedDateTime], T1.[vw_Coupons.ModifiedBy]");
            viewString.Append(", T1.[vw_Coupons.RejectedReason], T1.[vw_Coupons.Rejecteddatetime], T1.[vw_Coupo");
            viewString.Append("ns.RejectedBy], T1.[vw_Coupons.CurrencyId], T1.[vw_Coupons.Price], T1.[vw_Coupon");
            viewString.Append("s.Savings], T1.[vw_Coupons.SwapCost], T1.[vw_Coupons.CouponViewCount], T1.[vw_Co");
            viewString.Append("upons.CouponIssuedCount], T1.[vw_Coupons.CouponRedeemedCount], T1.[vw_Coupons.Co");
            viewString.Append("uponQtyPerUser], T1.[vw_Coupons.CouponListingMode], T1.[vw_Coupons.CompanyId], T");
            viewString.Append("1.[vw_Coupons.CouponActiveMonth], T1.[vw_Coupons.CouponActiveYear], T1.[vw_Coupo");
            viewString.Append("ns.CouponExpirydate], T1.[vw_Coupons.couponImage1], T1.[vw_Coupons.CouponImage2]");
            viewString.Append(", T1.[vw_Coupons.CouponImage3], T1.[vw_Coupons.LogoUrl], T1.[vw_Coupons.Highligh");
            viewString.Append("tLine1], T1.[vw_Coupons.HighlightLine2], T1.[vw_Coupons.HighlightLine3], T1.[vw_");
            viewString.Append("Coupons.HighlightLine4], T1.[vw_Coupons.HighlightLine5], T1.[vw_Coupons.FinePrin");
            viewString.Append("tLine1], T1.[vw_Coupons.FinePrintLine2], T1.[vw_Coupons.FinePrintLine3], T1.[vw_");
            viewString.Append("Coupons.FinePrintLine4], T1.[vw_Coupons.FinePrintLine5], T1.[vw_Coupons.Location");
            viewString.Append("BranchId], T1.[vw_Coupons.LocationTitle], T1.[vw_Coupons.LocationLine1], T1.[vw_");
            viewString.Append("Coupons.LocationLine2], T1.[vw_Coupons.LocationCity], T1.[vw_Coupons.LocationSta");
            viewString.Append("te], T1.[vw_Coupons.LocationZipCode], T1.[vw_Coupons.LocationLAT], T1.[vw_Coupon");
            viewString.Append("s.LocationLON], T1.[vw_Coupons.LocationPhone], T1.[vw_Coupons.GeographyColumn], ");
            viewString.Append("T1.[vw_Coupons.HowToRedeemLine1], T1.[vw_Coupons.HowToRedeemLine2], T1.[vw_Coupo");
            viewString.Append("ns.HowToRedeemLine3], T1.[vw_Coupons.HowToRedeemLine4], T1.[vw_Coupons.HowToRede");
            viewString.Append("emLine5], T1.[vw_Coupons.SubmissionDateTime], T1.[vw_Coupons.LocationCountryId],");
            viewString.Append(" T1.[vw_Coupons.CouponStartDate], T1.[vw_Coupons.CouponEndDate], T1.[vw_Coupons.");
            viewString.Append("Priority], T1.[vw_Coupons.ShowBuyitBtn], T1.[vw_Coupons.BuyitLandingPageUrl], T1");
            viewString.Append(".[vw_Coupons.BuyitBtnLabel], T1.[vw_Coupons.YoutubeLink], T1.[vw_Coupons.CouponI");
            viewString.Append("mage4], T1.[vw_Coupons.CouponImage5], T1.[vw_Coupons.CouponImage6], T1.[vw_Coupo");
            viewString.Append("ns.IsPaymentCollected], T1.[vw_Coupons.PaymentDate], T1.[vw_Coupons.IsShowReview");
            viewString.Append("s], T1.[vw_Coupons.IsShowAddress], T1.[vw_Coupons.IsShowPhoneNo], T1.[vw_Coupons");
            viewString.Append(".IsShowMap], T1.[vw_Coupons.IsShowyouTube], T1.[vw_Coupons.IsShowAboutUs], T1.[v");
            viewString.Append("w_Coupons.IsMarketingStories], T1.[vw_Coupons.IsPerSaving3days], T1.[vw_Coupons.");
            viewString.Append("IsPerSaving2days], T1.[vw_Coupons.IsPerSavingLastday], T1.[vw_Coupons.IsDollarSa");
            viewString.Append("ving3days], T1.[vw_Coupons.IsDollarSaving2days], T1.[vw_Coupons.IsDollarSavingLa");
            viewString.Append("stday], T1.[vw_Coupons.isSaveBtnLable], T1.[vw_Coupons.DealFirstDiscountType], T");
            viewString.Append("1.[vw_Coupons.DealEndingDiscountType], T1.[vw_Coupons.Categories], T1.[vw_Coupon");
            viewString.Append("s.CurrencyCode], T1.[vw_Coupons.CurrencySymbol])\r\n    FROM (\r\n        SELECT \r\n ");
            viewString.Append("           T.CouponId AS [vw_Coupons.CouponId], \r\n            T.LanguageId AS [v");
            viewString.Append("w_Coupons.LanguageId], \r\n            T.UserId AS [vw_Coupons.UserId], \r\n        ");
            viewString.Append("    T.CouponTitle AS [vw_Coupons.CouponTitle], \r\n            T.SearchKeywords AS");
            viewString.Append(" [vw_Coupons.SearchKeywords], \r\n            T.Status AS [vw_Coupons.Status], \r\n ");
            viewString.Append("           T.Archived AS [vw_Coupons.Archived], \r\n            T.Approved AS [vw_");
            viewString.Append("Coupons.Approved], \r\n            T.ApprovedBy AS [vw_Coupons.ApprovedBy], \r\n    ");
            viewString.Append("        T.ApprovalDateTime AS [vw_Coupons.ApprovalDateTime], \r\n            T.Cre");
            viewString.Append("atedDateTime AS [vw_Coupons.CreatedDateTime], \r\n            T.CreatedBy AS [vw_C");
            viewString.Append("oupons.CreatedBy], \r\n            T.ModifiedDateTime AS [vw_Coupons.ModifiedDateT");
            viewString.Append("ime], \r\n            T.ModifiedBy AS [vw_Coupons.ModifiedBy], \r\n            T.Rej");
            viewString.Append("ectedReason AS [vw_Coupons.RejectedReason], \r\n            T.Rejecteddatetime AS ");
            viewString.Append("[vw_Coupons.Rejecteddatetime], \r\n            T.RejectedBy AS [vw_Coupons.Rejecte");
            viewString.Append("dBy], \r\n            T.CurrencyId AS [vw_Coupons.CurrencyId], \r\n            T.Pri");
            viewString.Append("ce AS [vw_Coupons.Price], \r\n            T.Savings AS [vw_Coupons.Savings], \r\n   ");
            viewString.Append("         T.SwapCost AS [vw_Coupons.SwapCost], \r\n            T.CouponViewCount AS");
            viewString.Append(" [vw_Coupons.CouponViewCount], \r\n            T.CouponIssuedCount AS [vw_Coupons.");
            viewString.Append("CouponIssuedCount], \r\n            T.CouponRedeemedCount AS [vw_Coupons.CouponRed");
            viewString.Append("eemedCount], \r\n            T.CouponQtyPerUser AS [vw_Coupons.CouponQtyPerUser], ");
            viewString.Append("\r\n            T.CouponListingMode AS [vw_Coupons.CouponListingMode], \r\n         ");
            viewString.Append("   T.CompanyId AS [vw_Coupons.CompanyId], \r\n            T.CouponActiveMonth AS [");
            viewString.Append("vw_Coupons.CouponActiveMonth], \r\n            T.CouponActiveYear AS [vw_Coupons.C");
            viewString.Append("ouponActiveYear], \r\n            T.CouponExpirydate AS [vw_Coupons.CouponExpiryda");
            viewString.Append("te], \r\n            T.couponImage1 AS [vw_Coupons.couponImage1], \r\n            T.");
            viewString.Append("CouponImage2 AS [vw_Coupons.CouponImage2], \r\n            T.CouponImage3 AS [vw_C");
            viewString.Append("oupons.CouponImage3], \r\n            T.LogoUrl AS [vw_Coupons.LogoUrl], \r\n       ");
            viewString.Append("     T.HighlightLine1 AS [vw_Coupons.HighlightLine1], \r\n            T.HighlightL");
            viewString.Append("ine2 AS [vw_Coupons.HighlightLine2], \r\n            T.HighlightLine3 AS [vw_Coupo");
            viewString.Append("ns.HighlightLine3], \r\n            T.HighlightLine4 AS [vw_Coupons.HighlightLine4");
            viewString.Append("], \r\n            T.HighlightLine5 AS [vw_Coupons.HighlightLine5], \r\n            ");
            viewString.Append("T.FinePrintLine1 AS [vw_Coupons.FinePrintLine1], \r\n            T.FinePrintLine2 ");
            viewString.Append("AS [vw_Coupons.FinePrintLine2], \r\n            T.FinePrintLine3 AS [vw_Coupons.Fi");
            viewString.Append("nePrintLine3], \r\n            T.FinePrintLine4 AS [vw_Coupons.FinePrintLine4], \r\n");
            viewString.Append("            T.FinePrintLine5 AS [vw_Coupons.FinePrintLine5], \r\n            T.Loc");
            viewString.Append("ationBranchId AS [vw_Coupons.LocationBranchId], \r\n            T.LocationTitle AS");
            viewString.Append(" [vw_Coupons.LocationTitle], \r\n            T.LocationLine1 AS [vw_Coupons.Locati");
            viewString.Append("onLine1], \r\n            T.LocationLine2 AS [vw_Coupons.LocationLine2], \r\n       ");
            viewString.Append("     T.LocationCity AS [vw_Coupons.LocationCity], \r\n            T.LocationState ");
            viewString.Append("AS [vw_Coupons.LocationState], \r\n            T.LocationZipCode AS [vw_Coupons.Lo");
            viewString.Append("cationZipCode], \r\n            T.LocationLAT AS [vw_Coupons.LocationLAT], \r\n     ");
            viewString.Append("       T.LocationLON AS [vw_Coupons.LocationLON], \r\n            T.LocationPhone ");
            viewString.Append("AS [vw_Coupons.LocationPhone], \r\n            T.GeographyColumn AS [vw_Coupons.Ge");
            viewString.Append("ographyColumn], \r\n            T.HowToRedeemLine1 AS [vw_Coupons.HowToRedeemLine1");
            viewString.Append("], \r\n            T.HowToRedeemLine2 AS [vw_Coupons.HowToRedeemLine2], \r\n        ");
            viewString.Append("    T.HowToRedeemLine3 AS [vw_Coupons.HowToRedeemLine3], \r\n            T.HowToRe");
            viewString.Append("deemLine4 AS [vw_Coupons.HowToRedeemLine4], \r\n            T.HowToRedeemLine5 AS ");
            viewString.Append("[vw_Coupons.HowToRedeemLine5], \r\n            T.SubmissionDateTime AS [vw_Coupons");
            viewString.Append(".SubmissionDateTime], \r\n            T.LocationCountryId AS [vw_Coupons.LocationC");
            viewString.Append("ountryId], \r\n            T.CouponStartDate AS [vw_Coupons.CouponStartDate], \r\n  ");
            viewString.Append("          T.CouponEndDate AS [vw_Coupons.CouponEndDate], \r\n            T.Priorit");
            viewString.Append("y AS [vw_Coupons.Priority], \r\n            T.ShowBuyitBtn AS [vw_Coupons.ShowBuyi");
            viewString.Append("tBtn], \r\n            T.BuyitLandingPageUrl AS [vw_Coupons.BuyitLandingPageUrl], ");
            viewString.Append("\r\n            T.BuyitBtnLabel AS [vw_Coupons.BuyitBtnLabel], \r\n            T.You");
            viewString.Append("tubeLink AS [vw_Coupons.YoutubeLink], \r\n            T.CouponImage4 AS [vw_Coupon");
            viewString.Append("s.CouponImage4], \r\n            T.CouponImage5 AS [vw_Coupons.CouponImage5], \r\n  ");
            viewString.Append("          T.CouponImage6 AS [vw_Coupons.CouponImage6], \r\n            T.IsPayment");
            viewString.Append("Collected AS [vw_Coupons.IsPaymentCollected], \r\n            T.PaymentDate AS [vw");
            viewString.Append("_Coupons.PaymentDate], \r\n            T.IsShowReviews AS [vw_Coupons.IsShowReview");
            viewString.Append("s], \r\n            T.IsShowAddress AS [vw_Coupons.IsShowAddress], \r\n            T");
            viewString.Append(".IsShowPhoneNo AS [vw_Coupons.IsShowPhoneNo], \r\n            T.IsShowMap AS [vw_C");
            viewString.Append("oupons.IsShowMap], \r\n            T.IsShowyouTube AS [vw_Coupons.IsShowyouTube], ");
            viewString.Append("\r\n            T.IsShowAboutUs AS [vw_Coupons.IsShowAboutUs], \r\n            T.IsM");
            viewString.Append("arketingStories AS [vw_Coupons.IsMarketingStories], \r\n            T.IsPerSaving3");
            viewString.Append("days AS [vw_Coupons.IsPerSaving3days], \r\n            T.IsPerSaving2days AS [vw_C");
            viewString.Append("oupons.IsPerSaving2days], \r\n            T.IsPerSavingLastday AS [vw_Coupons.IsPe");
            viewString.Append("rSavingLastday], \r\n            T.IsDollarSaving3days AS [vw_Coupons.IsDollarSavi");
            viewString.Append("ng3days], \r\n            T.IsDollarSaving2days AS [vw_Coupons.IsDollarSaving2days");
            viewString.Append("], \r\n            T.IsDollarSavingLastday AS [vw_Coupons.IsDollarSavingLastday], ");
            viewString.Append("\r\n            T.isSaveBtnLable AS [vw_Coupons.isSaveBtnLable], \r\n            T.D");
            viewString.Append("ealFirstDiscountType AS [vw_Coupons.DealFirstDiscountType], \r\n            T.Deal");
            viewString.Append("EndingDiscountType AS [vw_Coupons.DealEndingDiscountType], \r\n            T.Categ");
            viewString.Append("ories AS [vw_Coupons.Categories], \r\n            T.CurrencyCode AS [vw_Coupons.Cu");
            viewString.Append("rrencyCode], \r\n            T.CurrencySymbol AS [vw_Coupons.CurrencySymbol], \r\n  ");
            viewString.Append("          True AS _from0\r\n        FROM BaseDbContext.vw_Coupons AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_Coupons", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_Coupons
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(8888);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vw_Coupons\r\n        [DomainModels.vw_Coupons]");
            viewString.Append("(T1.[vw_Coupons.CouponId], T1.[vw_Coupons.LanguageId], T1.[vw_Coupons.UserId], T");
            viewString.Append("1.[vw_Coupons.CouponTitle], T1.[vw_Coupons.SearchKeywords], T1.[vw_Coupons.Statu");
            viewString.Append("s], T1.[vw_Coupons.Archived], T1.[vw_Coupons.Approved], T1.[vw_Coupons.ApprovedB");
            viewString.Append("y], T1.[vw_Coupons.ApprovalDateTime], T1.[vw_Coupons.CreatedDateTime], T1.[vw_Co");
            viewString.Append("upons.CreatedBy], T1.[vw_Coupons.ModifiedDateTime], T1.[vw_Coupons.ModifiedBy], ");
            viewString.Append("T1.[vw_Coupons.RejectedReason], T1.[vw_Coupons.Rejecteddatetime], T1.[vw_Coupons");
            viewString.Append(".RejectedBy], T1.[vw_Coupons.CurrencyId], T1.[vw_Coupons.Price], T1.[vw_Coupons.");
            viewString.Append("Savings], T1.[vw_Coupons.SwapCost], T1.[vw_Coupons.CouponViewCount], T1.[vw_Coup");
            viewString.Append("ons.CouponIssuedCount], T1.[vw_Coupons.CouponRedeemedCount], T1.[vw_Coupons.Coup");
            viewString.Append("onQtyPerUser], T1.[vw_Coupons.CouponListingMode], T1.[vw_Coupons.CompanyId], T1.");
            viewString.Append("[vw_Coupons.CouponActiveMonth], T1.[vw_Coupons.CouponActiveYear], T1.[vw_Coupons");
            viewString.Append(".CouponExpirydate], T1.[vw_Coupons.couponImage1], T1.[vw_Coupons.CouponImage2], ");
            viewString.Append("T1.[vw_Coupons.CouponImage3], T1.[vw_Coupons.LogoUrl], T1.[vw_Coupons.HighlightL");
            viewString.Append("ine1], T1.[vw_Coupons.HighlightLine2], T1.[vw_Coupons.HighlightLine3], T1.[vw_Co");
            viewString.Append("upons.HighlightLine4], T1.[vw_Coupons.HighlightLine5], T1.[vw_Coupons.FinePrintL");
            viewString.Append("ine1], T1.[vw_Coupons.FinePrintLine2], T1.[vw_Coupons.FinePrintLine3], T1.[vw_Co");
            viewString.Append("upons.FinePrintLine4], T1.[vw_Coupons.FinePrintLine5], T1.[vw_Coupons.LocationBr");
            viewString.Append("anchId], T1.[vw_Coupons.LocationTitle], T1.[vw_Coupons.LocationLine1], T1.[vw_Co");
            viewString.Append("upons.LocationLine2], T1.[vw_Coupons.LocationCity], T1.[vw_Coupons.LocationState");
            viewString.Append("], T1.[vw_Coupons.LocationZipCode], T1.[vw_Coupons.LocationLAT], T1.[vw_Coupons.");
            viewString.Append("LocationLON], T1.[vw_Coupons.LocationPhone], T1.[vw_Coupons.GeographyColumn], T1");
            viewString.Append(".[vw_Coupons.HowToRedeemLine1], T1.[vw_Coupons.HowToRedeemLine2], T1.[vw_Coupons");
            viewString.Append(".HowToRedeemLine3], T1.[vw_Coupons.HowToRedeemLine4], T1.[vw_Coupons.HowToRedeem");
            viewString.Append("Line5], T1.[vw_Coupons.SubmissionDateTime], T1.[vw_Coupons.LocationCountryId], T");
            viewString.Append("1.[vw_Coupons.CouponStartDate], T1.[vw_Coupons.CouponEndDate], T1.[vw_Coupons.Pr");
            viewString.Append("iority], T1.[vw_Coupons.ShowBuyitBtn], T1.[vw_Coupons.BuyitLandingPageUrl], T1.[");
            viewString.Append("vw_Coupons.BuyitBtnLabel], T1.[vw_Coupons.Categories], T1.[vw_Coupons.CurrencyCo");
            viewString.Append("de], T1.[vw_Coupons.CurrencySymbol], T1.[vw_Coupons.YoutubeLink], T1.[vw_Coupons");
            viewString.Append(".CouponImage4], T1.[vw_Coupons.CouponImage5], T1.[vw_Coupons.CouponImage6], T1.[");
            viewString.Append("vw_Coupons.IsPaymentCollected], T1.[vw_Coupons.PaymentDate], T1.[vw_Coupons.IsSh");
            viewString.Append("owReviews], T1.[vw_Coupons.IsShowAddress], T1.[vw_Coupons.IsShowPhoneNo], T1.[vw");
            viewString.Append("_Coupons.IsShowMap], T1.[vw_Coupons.IsShowyouTube], T1.[vw_Coupons.IsShowAboutUs");
            viewString.Append("], T1.[vw_Coupons.IsMarketingStories], T1.[vw_Coupons.IsPerSaving3days], T1.[vw_");
            viewString.Append("Coupons.IsPerSaving2days], T1.[vw_Coupons.IsPerSavingLastday], T1.[vw_Coupons.Is");
            viewString.Append("DollarSaving3days], T1.[vw_Coupons.IsDollarSaving2days], T1.[vw_Coupons.IsDollar");
            viewString.Append("SavingLastday], T1.[vw_Coupons.isSaveBtnLable], T1.[vw_Coupons.DealFirstDiscount");
            viewString.Append("Type], T1.[vw_Coupons.DealEndingDiscountType])\r\n    FROM (\r\n        SELECT \r\n   ");
            viewString.Append("         T.CouponId AS [vw_Coupons.CouponId], \r\n            T.LanguageId AS [vw_");
            viewString.Append("Coupons.LanguageId], \r\n            T.UserId AS [vw_Coupons.UserId], \r\n          ");
            viewString.Append("  T.CouponTitle AS [vw_Coupons.CouponTitle], \r\n            T.SearchKeywords AS [");
            viewString.Append("vw_Coupons.SearchKeywords], \r\n            T.Status AS [vw_Coupons.Status], \r\n   ");
            viewString.Append("         T.Archived AS [vw_Coupons.Archived], \r\n            T.Approved AS [vw_Co");
            viewString.Append("upons.Approved], \r\n            T.ApprovedBy AS [vw_Coupons.ApprovedBy], \r\n      ");
            viewString.Append("      T.ApprovalDateTime AS [vw_Coupons.ApprovalDateTime], \r\n            T.Creat");
            viewString.Append("edDateTime AS [vw_Coupons.CreatedDateTime], \r\n            T.CreatedBy AS [vw_Cou");
            viewString.Append("pons.CreatedBy], \r\n            T.ModifiedDateTime AS [vw_Coupons.ModifiedDateTim");
            viewString.Append("e], \r\n            T.ModifiedBy AS [vw_Coupons.ModifiedBy], \r\n            T.Rejec");
            viewString.Append("tedReason AS [vw_Coupons.RejectedReason], \r\n            T.Rejecteddatetime AS [v");
            viewString.Append("w_Coupons.Rejecteddatetime], \r\n            T.RejectedBy AS [vw_Coupons.RejectedB");
            viewString.Append("y], \r\n            T.CurrencyId AS [vw_Coupons.CurrencyId], \r\n            T.Price");
            viewString.Append(" AS [vw_Coupons.Price], \r\n            T.Savings AS [vw_Coupons.Savings], \r\n     ");
            viewString.Append("       T.SwapCost AS [vw_Coupons.SwapCost], \r\n            T.CouponViewCount AS [");
            viewString.Append("vw_Coupons.CouponViewCount], \r\n            T.CouponIssuedCount AS [vw_Coupons.Co");
            viewString.Append("uponIssuedCount], \r\n            T.CouponRedeemedCount AS [vw_Coupons.CouponRedee");
            viewString.Append("medCount], \r\n            T.CouponQtyPerUser AS [vw_Coupons.CouponQtyPerUser], \r\n");
            viewString.Append("            T.CouponListingMode AS [vw_Coupons.CouponListingMode], \r\n           ");
            viewString.Append(" T.CompanyId AS [vw_Coupons.CompanyId], \r\n            T.CouponActiveMonth AS [vw");
            viewString.Append("_Coupons.CouponActiveMonth], \r\n            T.CouponActiveYear AS [vw_Coupons.Cou");
            viewString.Append("ponActiveYear], \r\n            T.CouponExpirydate AS [vw_Coupons.CouponExpirydate");
            viewString.Append("], \r\n            T.couponImage1 AS [vw_Coupons.couponImage1], \r\n            T.Co");
            viewString.Append("uponImage2 AS [vw_Coupons.CouponImage2], \r\n            T.CouponImage3 AS [vw_Cou");
            viewString.Append("pons.CouponImage3], \r\n            T.LogoUrl AS [vw_Coupons.LogoUrl], \r\n         ");
            viewString.Append("   T.HighlightLine1 AS [vw_Coupons.HighlightLine1], \r\n            T.HighlightLin");
            viewString.Append("e2 AS [vw_Coupons.HighlightLine2], \r\n            T.HighlightLine3 AS [vw_Coupons");
            viewString.Append(".HighlightLine3], \r\n            T.HighlightLine4 AS [vw_Coupons.HighlightLine4],");
            viewString.Append(" \r\n            T.HighlightLine5 AS [vw_Coupons.HighlightLine5], \r\n            T.");
            viewString.Append("FinePrintLine1 AS [vw_Coupons.FinePrintLine1], \r\n            T.FinePrintLine2 AS");
            viewString.Append(" [vw_Coupons.FinePrintLine2], \r\n            T.FinePrintLine3 AS [vw_Coupons.Fine");
            viewString.Append("PrintLine3], \r\n            T.FinePrintLine4 AS [vw_Coupons.FinePrintLine4], \r\n  ");
            viewString.Append("          T.FinePrintLine5 AS [vw_Coupons.FinePrintLine5], \r\n            T.Locat");
            viewString.Append("ionBranchId AS [vw_Coupons.LocationBranchId], \r\n            T.LocationTitle AS [");
            viewString.Append("vw_Coupons.LocationTitle], \r\n            T.LocationLine1 AS [vw_Coupons.Location");
            viewString.Append("Line1], \r\n            T.LocationLine2 AS [vw_Coupons.LocationLine2], \r\n         ");
            viewString.Append("   T.LocationCity AS [vw_Coupons.LocationCity], \r\n            T.LocationState AS");
            viewString.Append(" [vw_Coupons.LocationState], \r\n            T.LocationZipCode AS [vw_Coupons.Loca");
            viewString.Append("tionZipCode], \r\n            T.LocationLAT AS [vw_Coupons.LocationLAT], \r\n       ");
            viewString.Append("     T.LocationLON AS [vw_Coupons.LocationLON], \r\n            T.LocationPhone AS");
            viewString.Append(" [vw_Coupons.LocationPhone], \r\n            T.GeographyColumn AS [vw_Coupons.Geog");
            viewString.Append("raphyColumn], \r\n            T.HowToRedeemLine1 AS [vw_Coupons.HowToRedeemLine1],");
            viewString.Append(" \r\n            T.HowToRedeemLine2 AS [vw_Coupons.HowToRedeemLine2], \r\n          ");
            viewString.Append("  T.HowToRedeemLine3 AS [vw_Coupons.HowToRedeemLine3], \r\n            T.HowToRede");
            viewString.Append("emLine4 AS [vw_Coupons.HowToRedeemLine4], \r\n            T.HowToRedeemLine5 AS [v");
            viewString.Append("w_Coupons.HowToRedeemLine5], \r\n            T.SubmissionDateTime AS [vw_Coupons.S");
            viewString.Append("ubmissionDateTime], \r\n            T.LocationCountryId AS [vw_Coupons.LocationCou");
            viewString.Append("ntryId], \r\n            T.CouponStartDate AS [vw_Coupons.CouponStartDate], \r\n    ");
            viewString.Append("        T.CouponEndDate AS [vw_Coupons.CouponEndDate], \r\n            T.Priority ");
            viewString.Append("AS [vw_Coupons.Priority], \r\n            T.ShowBuyitBtn AS [vw_Coupons.ShowBuyitB");
            viewString.Append("tn], \r\n            T.BuyitLandingPageUrl AS [vw_Coupons.BuyitLandingPageUrl], \r\n");
            viewString.Append("            T.BuyitBtnLabel AS [vw_Coupons.BuyitBtnLabel], \r\n            T.Categ");
            viewString.Append("ories AS [vw_Coupons.Categories], \r\n            T.CurrencyCode AS [vw_Coupons.Cu");
            viewString.Append("rrencyCode], \r\n            T.CurrencySymbol AS [vw_Coupons.CurrencySymbol], \r\n  ");
            viewString.Append("          T.YoutubeLink AS [vw_Coupons.YoutubeLink], \r\n            T.CouponImage");
            viewString.Append("4 AS [vw_Coupons.CouponImage4], \r\n            T.CouponImage5 AS [vw_Coupons.Coup");
            viewString.Append("onImage5], \r\n            T.CouponImage6 AS [vw_Coupons.CouponImage6], \r\n        ");
            viewString.Append("    T.IsPaymentCollected AS [vw_Coupons.IsPaymentCollected], \r\n            T.Pay");
            viewString.Append("mentDate AS [vw_Coupons.PaymentDate], \r\n            T.IsShowReviews AS [vw_Coupo");
            viewString.Append("ns.IsShowReviews], \r\n            T.IsShowAddress AS [vw_Coupons.IsShowAddress], ");
            viewString.Append("\r\n            T.IsShowPhoneNo AS [vw_Coupons.IsShowPhoneNo], \r\n            T.IsS");
            viewString.Append("howMap AS [vw_Coupons.IsShowMap], \r\n            T.IsShowyouTube AS [vw_Coupons.I");
            viewString.Append("sShowyouTube], \r\n            T.IsShowAboutUs AS [vw_Coupons.IsShowAboutUs], \r\n  ");
            viewString.Append("          T.IsMarketingStories AS [vw_Coupons.IsMarketingStories], \r\n           ");
            viewString.Append(" T.IsPerSaving3days AS [vw_Coupons.IsPerSaving3days], \r\n            T.IsPerSavin");
            viewString.Append("g2days AS [vw_Coupons.IsPerSaving2days], \r\n            T.IsPerSavingLastday AS [");
            viewString.Append("vw_Coupons.IsPerSavingLastday], \r\n            T.IsDollarSaving3days AS [vw_Coupo");
            viewString.Append("ns.IsDollarSaving3days], \r\n            T.IsDollarSaving2days AS [vw_Coupons.IsDo");
            viewString.Append("llarSaving2days], \r\n            T.IsDollarSavingLastday AS [vw_Coupons.IsDollarS");
            viewString.Append("avingLastday], \r\n            T.isSaveBtnLable AS [vw_Coupons.isSaveBtnLable], \r\n");
            viewString.Append("            T.DealFirstDiscountType AS [vw_Coupons.DealFirstDiscountType], \r\n   ");
            viewString.Append("         T.DealEndingDiscountType AS [vw_Coupons.DealEndingDiscountType], \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM SMDModelStoreContainer.vw_Coupons AS T\r\n   ");
            viewString.Append(" ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_Coupons", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_ReferringCompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_ReferringCompanies", @"
    SELECT VALUE -- Constructing vw_ReferringCompanies
        [SMDModel.Store.vw_ReferringCompanies](T1.[vw_ReferringCompanies.FullName], T1.[vw_ReferringCompanies.Email], T1.[vw_ReferringCompanies.CompanyName], T1.[vw_ReferringCompanies.vcount], T1.[vw_ReferringCompanies.scount], T1.[vw_ReferringCompanies.pcount], T1.[vw_ReferringCompanies.ReferringCompanyID])
    FROM (
        SELECT 
            T.FullName AS [vw_ReferringCompanies.FullName], 
            T.Email AS [vw_ReferringCompanies.Email], 
            T.CompanyName AS [vw_ReferringCompanies.CompanyName], 
            T.vcount AS [vw_ReferringCompanies.vcount], 
            T.scount AS [vw_ReferringCompanies.scount], 
            T.pcount AS [vw_ReferringCompanies.pcount], 
            T.ReferringCompanyID AS [vw_ReferringCompanies.ReferringCompanyID], 
            True AS _from0
        FROM BaseDbContext.vw_ReferringCompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_ReferringCompanies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_ReferringCompanies", @"
    SELECT VALUE -- Constructing vw_ReferringCompanies
        [DomainModels.vw_ReferringCompanies](T1.[vw_ReferringCompanies.FullName], T1.[vw_ReferringCompanies.Email], T1.[vw_ReferringCompanies.CompanyName], T1.[vw_ReferringCompanies.vcount], T1.[vw_ReferringCompanies.scount], T1.[vw_ReferringCompanies.pcount], T1.[vw_ReferringCompanies.ReferringCompanyID])
    FROM (
        SELECT 
            T.FullName AS [vw_ReferringCompanies.FullName], 
            T.Email AS [vw_ReferringCompanies.Email], 
            T.CompanyName AS [vw_ReferringCompanies.CompanyName], 
            T.vcount AS [vw_ReferringCompanies.vcount], 
            T.scount AS [vw_ReferringCompanies.scount], 
            T.pcount AS [vw_ReferringCompanies.pcount], 
            T.ReferringCompanyID AS [vw_ReferringCompanies.ReferringCompanyID], 
            True AS _from0
        FROM SMDModelStoreContainer.vw_ReferringCompanies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SharedSurveyQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SharedSurveyQuestion", @"
    SELECT VALUE -- Constructing SharedSurveyQuestion
        [SMDModel.Store.SharedSurveyQuestion](T1.SharedSurveyQuestion_SSQID, T1.SharedSurveyQuestion_UserId, T1.SharedSurveyQuestion_CompanyId, T1.SharedSurveyQuestion_SurveyTitle, T1.SharedSurveyQuestion_LeftPicturePath, T1.SharedSurveyQuestion_RightPicturePath, T1.SharedSurveyQuestion_CreationDate, T1.SharedSurveyQuestion_SharingGroupId)
    FROM (
        SELECT 
            T.SSQID AS SharedSurveyQuestion_SSQID, 
            T.UserId AS SharedSurveyQuestion_UserId, 
            T.CompanyId AS SharedSurveyQuestion_CompanyId, 
            T.SurveyTitle AS SharedSurveyQuestion_SurveyTitle, 
            T.LeftPicturePath AS SharedSurveyQuestion_LeftPicturePath, 
            T.RightPicturePath AS SharedSurveyQuestion_RightPicturePath, 
            T.CreationDate AS SharedSurveyQuestion_CreationDate, 
            T.SharingGroupId AS SharedSurveyQuestion_SharingGroupId, 
            True AS _from0
        FROM BaseDbContext.SharedSurveyQuestions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveySharingGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveySharingGroup", @"
    SELECT VALUE -- Constructing SurveySharingGroup
        [SMDModel.Store.SurveySharingGroup](T1.SurveySharingGroup_SharingGroupId, T1.SurveySharingGroup_CompanyId, T1.SurveySharingGroup_UserId, T1.SurveySharingGroup_GroupName, T1.SurveySharingGroup_CreationDate)
    FROM (
        SELECT 
            T.SharingGroupId AS SurveySharingGroup_SharingGroupId, 
            T.CompanyId AS SurveySharingGroup_CompanyId, 
            T.UserId AS SurveySharingGroup_UserId, 
            T.GroupName AS SurveySharingGroup_GroupName, 
            T.CreationDate AS SurveySharingGroup_CreationDate, 
            True AS _from0
        FROM BaseDbContext.SurveySharingGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveySharingGroupMembers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveySharingGroupMembers", @"
    SELECT VALUE -- Constructing SurveySharingGroupMembers
        [SMDModel.Store.SurveySharingGroupMembers](T1.SurveySharingGroupMembers_SharingGroupMemberId, T1.SurveySharingGroupMembers_UserId, T1.SurveySharingGroupMembers_PhoneNumber, T1.SurveySharingGroupMembers_MemberStatus, T1.SurveySharingGroupMembers_SharingGroupId, T1.SurveySharingGroupMembers_FullName)
    FROM (
        SELECT 
            T.SharingGroupMemberId AS SurveySharingGroupMembers_SharingGroupMemberId, 
            T.UserId AS SurveySharingGroupMembers_UserId, 
            T.PhoneNumber AS SurveySharingGroupMembers_PhoneNumber, 
            T.MemberStatus AS SurveySharingGroupMembers_MemberStatus, 
            T.SharingGroupId AS SurveySharingGroupMembers_SharingGroupId, 
            T.FullName AS SurveySharingGroupMembers_FullName, 
            True AS _from0
        FROM BaseDbContext.SurveySharingGroupMembers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Notifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Notifications", @"
    SELECT VALUE -- Constructing Notifications
        [SMDModel.Store.Notifications](T1.Notifications_ID, T1.Notifications_Type, T1.Notifications_UserID, T1.Notifications_IsRead, T1.Notifications_GeneratedOn, T1.Notifications_GeneratedBy, T1.Notifications_SurveyQuestionShareId, T1.Notifications_PhoneNumber, T1.Notifications_CouponId)
    FROM (
        SELECT 
            T.ID AS Notifications_ID, 
            T.Type AS Notifications_Type, 
            T.UserID AS Notifications_UserID, 
            T.IsRead AS Notifications_IsRead, 
            T.GeneratedOn AS Notifications_GeneratedOn, 
            T.GeneratedBy AS Notifications_GeneratedBy, 
            T.SurveyQuestionShareId AS Notifications_SurveyQuestionShareId, 
            T.PhoneNumber AS Notifications_PhoneNumber, 
            T.CouponId AS Notifications_CouponId, 
            True AS _from0
        FROM BaseDbContext.Notifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveySharingGroupShares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveySharingGroupShares", @"
    SELECT VALUE -- Constructing SurveySharingGroupShares
        [SMDModel.Store.SurveySharingGroupShares](T1.SurveySharingGroupShares_SurveyQuestionShareId, T1.SurveySharingGroupShares_SharingGroupId, T1.SurveySharingGroupShares_UserId, T1.SurveySharingGroupShares_SharingGroupMemberId, T1.SurveySharingGroupShares_SharingDate, T1.SurveySharingGroupShares_SSQID, T1.SurveySharingGroupShares_Status, T1.SurveySharingGroupShares_ResponseDateTime, T1.SurveySharingGroupShares_UserSelection)
    FROM (
        SELECT 
            T.SurveyQuestionShareId AS SurveySharingGroupShares_SurveyQuestionShareId, 
            T.SharingGroupId AS SurveySharingGroupShares_SharingGroupId, 
            T.UserId AS SurveySharingGroupShares_UserId, 
            T.SharingGroupMemberId AS SurveySharingGroupShares_SharingGroupMemberId, 
            T.SharingDate AS SurveySharingGroupShares_SharingDate, 
            T.SSQID AS SurveySharingGroupShares_SSQID, 
            T.Status AS SurveySharingGroupShares_Status, 
            T.ResponseDateTime AS SurveySharingGroupShares_ResponseDateTime, 
            T.UserSelection AS SurveySharingGroupShares_UserSelection, 
            True AS _from0
        FROM BaseDbContext.SurveySharingGroupShares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SharedSurveyQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SharedSurveyQuestions", @"
    SELECT VALUE -- Constructing SharedSurveyQuestions
        [DomainModels.SharedSurveyQuestion](T1.SharedSurveyQuestion_SSQID, T1.SharedSurveyQuestion_UserId, T1.SharedSurveyQuestion_CompanyId, T1.SharedSurveyQuestion_SurveyTitle, T1.SharedSurveyQuestion_LeftPicturePath, T1.SharedSurveyQuestion_RightPicturePath, T1.SharedSurveyQuestion_CreationDate, T1.SharedSurveyQuestion_SharingGroupId)
    FROM (
        SELECT 
            T.SSQID AS SharedSurveyQuestion_SSQID, 
            T.UserId AS SharedSurveyQuestion_UserId, 
            T.CompanyId AS SharedSurveyQuestion_CompanyId, 
            T.SurveyTitle AS SharedSurveyQuestion_SurveyTitle, 
            T.LeftPicturePath AS SharedSurveyQuestion_LeftPicturePath, 
            T.RightPicturePath AS SharedSurveyQuestion_RightPicturePath, 
            T.CreationDate AS SharedSurveyQuestion_CreationDate, 
            T.SharingGroupId AS SharedSurveyQuestion_SharingGroupId, 
            True AS _from0
        FROM SMDModelStoreContainer.SharedSurveyQuestion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveySharingGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveySharingGroups", @"
    SELECT VALUE -- Constructing SurveySharingGroups
        [DomainModels.SurveySharingGroup](T1.SurveySharingGroup_SharingGroupId, T1.SurveySharingGroup_CompanyId, T1.SurveySharingGroup_UserId, T1.SurveySharingGroup_GroupName, T1.SurveySharingGroup_CreationDate)
    FROM (
        SELECT 
            T.SharingGroupId AS SurveySharingGroup_SharingGroupId, 
            T.CompanyId AS SurveySharingGroup_CompanyId, 
            T.UserId AS SurveySharingGroup_UserId, 
            T.GroupName AS SurveySharingGroup_GroupName, 
            T.CreationDate AS SurveySharingGroup_CreationDate, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveySharingGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveySharingGroupMembers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveySharingGroupMembers", @"
    SELECT VALUE -- Constructing SurveySharingGroupMembers
        [DomainModels.SurveySharingGroupMember](T1.SurveySharingGroupMember_SharingGroupMemberId, T1.SurveySharingGroupMember_UserId, T1.SurveySharingGroupMember_PhoneNumber, T1.SurveySharingGroupMember_MemberStatus, T1.SurveySharingGroupMember_SharingGroupId, T1.SurveySharingGroupMember_FullName)
    FROM (
        SELECT 
            T.SharingGroupMemberId AS SurveySharingGroupMember_SharingGroupMemberId, 
            T.UserId AS SurveySharingGroupMember_UserId, 
            T.PhoneNumber AS SurveySharingGroupMember_PhoneNumber, 
            T.MemberStatus AS SurveySharingGroupMember_MemberStatus, 
            T.SharingGroupId AS SurveySharingGroupMember_SharingGroupId, 
            T.FullName AS SurveySharingGroupMember_FullName, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveySharingGroupMembers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Notifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Notifications", @"
    SELECT VALUE -- Constructing Notifications
        [DomainModels.Notification](T1.Notification_ID, T1.Notification_Type, T1.Notification_UserID, T1.Notification_IsRead, T1.Notification_GeneratedOn, T1.Notification_GeneratedBy, T1.Notification_SurveyQuestionShareId, T1.Notification_PhoneNumber, T1.Notification_CouponId)
    FROM (
        SELECT 
            T.ID AS Notification_ID, 
            T.Type AS Notification_Type, 
            T.UserID AS Notification_UserID, 
            T.IsRead AS Notification_IsRead, 
            T.GeneratedOn AS Notification_GeneratedOn, 
            T.GeneratedBy AS Notification_GeneratedBy, 
            T.SurveyQuestionShareId AS Notification_SurveyQuestionShareId, 
            T.PhoneNumber AS Notification_PhoneNumber, 
            T.CouponId AS Notification_CouponId, 
            True AS _from0
        FROM SMDModelStoreContainer.Notifications AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveySharingGroupShares
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveySharingGroupShares", @"
    SELECT VALUE -- Constructing SurveySharingGroupShares
        [DomainModels.SurveySharingGroupShare](T1.SurveySharingGroupShare_SurveyQuestionShareId, T1.SurveySharingGroupShare_SharingGroupId, T1.SurveySharingGroupShare_UserId, T1.SurveySharingGroupShare_SharingGroupMemberId, T1.SurveySharingGroupShare_SharingDate, T1.SurveySharingGroupShare_SSQID, T1.SurveySharingGroupShare_Status, T1.SurveySharingGroupShare_ResponseDateTime, T1.SurveySharingGroupShare_UserSelection)
    FROM (
        SELECT 
            T.SurveyQuestionShareId AS SurveySharingGroupShare_SurveyQuestionShareId, 
            T.SharingGroupId AS SurveySharingGroupShare_SharingGroupId, 
            T.UserId AS SurveySharingGroupShare_UserId, 
            T.SharingGroupMemberId AS SurveySharingGroupShare_SharingGroupMemberId, 
            T.SharingDate AS SurveySharingGroupShare_SharingDate, 
            T.SSQID AS SurveySharingGroupShare_SSQID, 
            T.Status AS SurveySharingGroupShare_Status, 
            T.ResponseDateTime AS SurveySharingGroupShare_ResponseDateTime, 
            T.UserSelection AS SurveySharingGroupShare_UserSelection, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveySharingGroupShares AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.vw_Notifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2313);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vw_Notifications\r\n        [SMDModel.Store.vw_");
            viewString.Append("Notifications](T1.[vw_Notifications.ID], T1.[vw_Notifications.Type], T1.[vw_Noti");
            viewString.Append("fications.UserID], T1.[vw_Notifications.IsRead], T1.[vw_Notifications.GeneratedO");
            viewString.Append("n], T1.[vw_Notifications.GeneratedBy], T1.[vw_Notifications.SurveyQuestionShareI");
            viewString.Append("d], T1.[vw_Notifications.PhoneNumber], T1.[vw_Notifications.NotificationDetails]");
            viewString.Append(", T1.[vw_Notifications.PollTitle], T1.[vw_Notifications.SSQID], T1.[vw_Notificat");
            viewString.Append("ions.CouponId], T1.[vw_Notifications.DealTitle], T1.[vw_Notifications.DealPrice]");
            viewString.Append(", T1.[vw_Notifications.DealSavings], T1.[vw_Notifications.DealCount], T1.[vw_Not");
            viewString.Append("ifications.DealDescription], T1.[vw_Notifications.DealCompany], T1.[vw_Notificat");
            viewString.Append("ions.DealCity], T1.[vw_Notifications.ProfileImage], T1.[vw_Notifications.Currenc");
            viewString.Append("yCode], T1.[vw_Notifications.CurrencySymbol])\r\n    FROM (\r\n        SELECT \r\n    ");
            viewString.Append("        T.ID AS [vw_Notifications.ID], \r\n            T.Type AS [vw_Notifications");
            viewString.Append(".Type], \r\n            T.UserID AS [vw_Notifications.UserID], \r\n            T.IsR");
            viewString.Append("ead AS [vw_Notifications.IsRead], \r\n            T.GeneratedOn AS [vw_Notificatio");
            viewString.Append("ns.GeneratedOn], \r\n            T.GeneratedBy AS [vw_Notifications.GeneratedBy], ");
            viewString.Append("\r\n            T.SurveyQuestionShareId AS [vw_Notifications.SurveyQuestionShareId");
            viewString.Append("], \r\n            T.PhoneNumber AS [vw_Notifications.PhoneNumber], \r\n            ");
            viewString.Append("T.NotificationDetails AS [vw_Notifications.NotificationDetails], \r\n            T");
            viewString.Append(".PollTitle AS [vw_Notifications.PollTitle], \r\n            T.SSQID AS [vw_Notific");
            viewString.Append("ations.SSQID], \r\n            T.CouponId AS [vw_Notifications.CouponId], \r\n      ");
            viewString.Append("      T.DealTitle AS [vw_Notifications.DealTitle], \r\n            T.DealPrice AS ");
            viewString.Append("[vw_Notifications.DealPrice], \r\n            T.DealSavings AS [vw_Notifications.D");
            viewString.Append("ealSavings], \r\n            T.DealCount AS [vw_Notifications.DealCount], \r\n      ");
            viewString.Append("      T.DealDescription AS [vw_Notifications.DealDescription], \r\n            T.D");
            viewString.Append("ealCompany AS [vw_Notifications.DealCompany], \r\n            T.DealCity AS [vw_No");
            viewString.Append("tifications.DealCity], \r\n            T.ProfileImage AS [vw_Notifications.Profile");
            viewString.Append("Image], \r\n            T.CurrencyCode AS [vw_Notifications.CurrencyCode], \r\n     ");
            viewString.Append("       T.CurrencySymbol AS [vw_Notifications.CurrencySymbol], \r\n            True");
            viewString.Append(" AS _from0\r\n        FROM BaseDbContext.vw_Notifications AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.vw_Notifications", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.vw_Notifications
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2320);
            viewString.Append("\r\n    SELECT VALUE -- Constructing vw_Notifications\r\n        [DomainModels.vw_No");
            viewString.Append("tifications](T1.[vw_Notifications.ID], T1.[vw_Notifications.Type], T1.[vw_Notifi");
            viewString.Append("cations.UserID], T1.[vw_Notifications.IsRead], T1.[vw_Notifications.GeneratedOn]");
            viewString.Append(", T1.[vw_Notifications.GeneratedBy], T1.[vw_Notifications.SurveyQuestionShareId]");
            viewString.Append(", T1.[vw_Notifications.PhoneNumber], T1.[vw_Notifications.NotificationDetails], ");
            viewString.Append("T1.[vw_Notifications.PollTitle], T1.[vw_Notifications.SSQID], T1.[vw_Notificatio");
            viewString.Append("ns.CouponId], T1.[vw_Notifications.DealTitle], T1.[vw_Notifications.DealPrice], ");
            viewString.Append("T1.[vw_Notifications.DealSavings], T1.[vw_Notifications.DealCount], T1.[vw_Notif");
            viewString.Append("ications.DealDescription], T1.[vw_Notifications.DealCompany], T1.[vw_Notificatio");
            viewString.Append("ns.DealCity], T1.[vw_Notifications.ProfileImage], T1.[vw_Notifications.CurrencyC");
            viewString.Append("ode], T1.[vw_Notifications.CurrencySymbol])\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.ID AS [vw_Notifications.ID], \r\n            T.Type AS [vw_Notifications.T");
            viewString.Append("ype], \r\n            T.UserID AS [vw_Notifications.UserID], \r\n            T.IsRea");
            viewString.Append("d AS [vw_Notifications.IsRead], \r\n            T.GeneratedOn AS [vw_Notifications");
            viewString.Append(".GeneratedOn], \r\n            T.GeneratedBy AS [vw_Notifications.GeneratedBy], \r\n");
            viewString.Append("            T.SurveyQuestionShareId AS [vw_Notifications.SurveyQuestionShareId],");
            viewString.Append(" \r\n            T.PhoneNumber AS [vw_Notifications.PhoneNumber], \r\n            T.");
            viewString.Append("NotificationDetails AS [vw_Notifications.NotificationDetails], \r\n            T.P");
            viewString.Append("ollTitle AS [vw_Notifications.PollTitle], \r\n            T.SSQID AS [vw_Notificat");
            viewString.Append("ions.SSQID], \r\n            T.CouponId AS [vw_Notifications.CouponId], \r\n        ");
            viewString.Append("    T.DealTitle AS [vw_Notifications.DealTitle], \r\n            T.DealPrice AS [v");
            viewString.Append("w_Notifications.DealPrice], \r\n            T.DealSavings AS [vw_Notifications.Dea");
            viewString.Append("lSavings], \r\n            T.DealCount AS [vw_Notifications.DealCount], \r\n        ");
            viewString.Append("    T.DealDescription AS [vw_Notifications.DealDescription], \r\n            T.Dea");
            viewString.Append("lCompany AS [vw_Notifications.DealCompany], \r\n            T.DealCity AS [vw_Noti");
            viewString.Append("fications.DealCity], \r\n            T.ProfileImage AS [vw_Notifications.ProfileIm");
            viewString.Append("age], \r\n            T.CurrencyCode AS [vw_Notifications.CurrencyCode], \r\n       ");
            viewString.Append("     T.CurrencySymbol AS [vw_Notifications.CurrencySymbol], \r\n            True A");
            viewString.Append("S _from0\r\n        FROM SMDModelStoreContainer.vw_Notifications AS T\r\n    ) AS T1");
            viewString.Append("");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.vw_Notifications", viewString.ToString());
        }
    }
}


