//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets0B2D65924F937B56D9685E8CFB854CAED9FDA0D276C601607409508D8156BA6F))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets0B2D65924F937B56D9685E8CFB854CAED9FDA0D276C601607409508D8156BA6F : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets0B2D65924F937B56D9685E8CFB854CAED9FDA0D276C601607409508D8156BA6F()
        {
            this.EdmEntityContainerName = "BaseDbContext";
            this.StoreEntityContainerName = "SMDModelStoreContainer";
            this.HashOverMappingClosure = "098bffeff6fd066e84cb1e4d5d2a0fbb87f913c166a80e879cc27bfab8bfb77d";
            this.HashOverAllExtentViews = "2515043940ad704b8300e2a7c7348020570fd6bcc06f0265e1fc6a433ac2d1bd";
            this.ViewCount = 68;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetRoles", @"
    SELECT VALUE -- Constructing AspNetRoles
        [SMDModel.Store.AspNetRoles](T1.AspNetRoles_Id, T1.AspNetRoles_Name)
    FROM (
        SELECT 
            T.Id AS AspNetRoles_Id, 
            T.Name AS AspNetRoles_Name, 
            True AS _from0
        FROM BaseDbContext.Roles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserLogins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserLogins", @"
    SELECT VALUE -- Constructing AspNetUserLogins
        [SMDModel.Store.AspNetUserLogins](T1.AspNetUserLogins_LoginProvider, T1.AspNetUserLogins_ProviderKey, T1.AspNetUserLogins_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS AspNetUserLogins_LoginProvider, 
            T.ProviderKey AS AspNetUserLogins_ProviderKey, 
            T.UserId AS AspNetUserLogins_UserId, 
            True AS _from0
        FROM BaseDbContext.UserLogins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUsers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(5131);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AspNetUsers\r\n        [SMDModel.Store.AspNetUs");
            viewString.Append("ers](T1.AspNetUsers_Id, T1.AspNetUsers_Email, T1.AspNetUsers_EmailConfirmed, T1.");
            viewString.Append("AspNetUsers_PasswordHash, T1.AspNetUsers_SecurityStamp, T1.AspNetUsers_PhoneNumb");
            viewString.Append("er, T1.AspNetUsers_PhoneNumberConfirmed, T1.AspNetUsers_TwoFactorEnabled, T1.Asp");
            viewString.Append("NetUsers_LockoutEndDateUtc, T1.AspNetUsers_LockoutEnabled, T1.AspNetUsers_Access");
            viewString.Append("FailedCount, T1.AspNetUsers_UserName, T1.AspNetUsers_FullName, T1.AspNetUsers_Al");
            viewString.Append("ternateEmail, T1.AspNetUsers_IsEmailVerified, T1.AspNetUsers_Status, T1.AspNetUs");
            viewString.Append("ers_CreatedDateTime, T1.AspNetUsers_ModifiedDateTime, T1.AspNetUsers_LastLoginTi");
            viewString.Append("me, T1.AspNetUsers_Phone1, T1.AspNetUsers_Phone2, T1.AspNetUsers_Jobtitle, T1.As");
            viewString.Append("pNetUsers_ContactNotes, T1.AspNetUsers_IsSubscribed, T1.AspNetUsers_AppID, T1.As");
            viewString.Append("pNetUsers_CompanyName, T1.AspNetUsers_SalesEmail, T1.AspNetUsers_CompanyRepresen");
            viewString.Append("tative, T1.AspNetUsers_Address1, T1.AspNetUsers_Address2, T1.AspNetUsers_CityID,");
            viewString.Append(" T1.AspNetUsers_CountryID, T1.AspNetUsers_State, T1.AspNetUsers_ZipCode, T1.AspN");
            viewString.Append("etUsers_UserTimeZone, T1.AspNetUsers_ReferralCode, T1.AspNetUsers_AfilliatianSta");
            viewString.Append("tus, T1.AspNetUsers_StripeCustomerId, T1.AspNetUsers_ChargeBeesubscriptionID, T1");
            viewString.Append(".AspNetUsers_RegisteredViaReferral, T1.AspNetUsers_ReferringUserID, T1.AspNetUse");
            viewString.Append("rs_Gender, T1.AspNetUsers_LanguageID, T1.AspNetUsers_IndustryID, T1.AspNetUsers_");
            viewString.Append("EducationId, T1.AspNetUsers_ProfileImage, T1.AspNetUsers_UserCode, T1.AspNetUser");
            viewString.Append("s_SmsCode, T1.AspNetUsers_WebsiteLink, T1.AspNetUsers_AdvertisingContact, T1.Asp");
            viewString.Append("NetUsers_AdvertisingContactPhoneNumber, T1.AspNetUsers_AdvertisingContactEmail, ");
            viewString.Append("T1.AspNetUsers_PaypalCustomerId, T1.AspNetUsers_GoogleWalletCustomerId, T1.AspNe");
            viewString.Append("tUsers_PreferredPayoutAccount, T1.AspNetUsers_DOB)\r\n    FROM (\r\n        SELECT \r");
            viewString.Append("\n            T.Id AS AspNetUsers_Id, \r\n            T.Email AS AspNetUsers_Email,");
            viewString.Append(" \r\n            T.EmailConfirmed AS AspNetUsers_EmailConfirmed, \r\n            T.P");
            viewString.Append("asswordHash AS AspNetUsers_PasswordHash, \r\n            T.SecurityStamp AS AspNet");
            viewString.Append("Users_SecurityStamp, \r\n            T.PhoneNumber AS AspNetUsers_PhoneNumber, \r\n ");
            viewString.Append("           T.PhoneNumberConfirmed AS AspNetUsers_PhoneNumberConfirmed, \r\n       ");
            viewString.Append("     T.TwoFactorEnabled AS AspNetUsers_TwoFactorEnabled, \r\n            T.Lockout");
            viewString.Append("EndDateUtc AS AspNetUsers_LockoutEndDateUtc, \r\n            T.LockoutEnabled AS A");
            viewString.Append("spNetUsers_LockoutEnabled, \r\n            T.AccessFailedCount AS AspNetUsers_Acce");
            viewString.Append("ssFailedCount, \r\n            T.UserName AS AspNetUsers_UserName, \r\n            T");
            viewString.Append(".FullName AS AspNetUsers_FullName, \r\n            T.AlternateEmail AS AspNetUsers");
            viewString.Append("_AlternateEmail, \r\n            T.IsEmailVerified AS AspNetUsers_IsEmailVerified,");
            viewString.Append(" \r\n            T.Status AS AspNetUsers_Status, \r\n            T.CreatedDateTime A");
            viewString.Append("S AspNetUsers_CreatedDateTime, \r\n            T.ModifiedDateTime AS AspNetUsers_M");
            viewString.Append("odifiedDateTime, \r\n            T.LastLoginTime AS AspNetUsers_LastLoginTime, \r\n ");
            viewString.Append("           T.Phone1 AS AspNetUsers_Phone1, \r\n            T.Phone2 AS AspNetUsers");
            viewString.Append("_Phone2, \r\n            T.Jobtitle AS AspNetUsers_Jobtitle, \r\n            T.Conta");
            viewString.Append("ctNotes AS AspNetUsers_ContactNotes, \r\n            T.IsSubscribed AS AspNetUsers");
            viewString.Append("_IsSubscribed, \r\n            T.AppId AS AspNetUsers_AppID, \r\n            T.Compa");
            viewString.Append("nyName AS AspNetUsers_CompanyName, \r\n            T.SalesEmail AS AspNetUsers_Sal");
            viewString.Append("esEmail, \r\n            T.CompanyRepresentative AS AspNetUsers_CompanyRepresentat");
            viewString.Append("ive, \r\n            T.Address1 AS AspNetUsers_Address1, \r\n            T.Address2 ");
            viewString.Append("AS AspNetUsers_Address2, \r\n            T.CityId AS AspNetUsers_CityID, \r\n       ");
            viewString.Append("     T.CountryId AS AspNetUsers_CountryID, \r\n            T.State AS AspNetUsers_");
            viewString.Append("State, \r\n            T.ZipCode AS AspNetUsers_ZipCode, \r\n            T.UserTimeZ");
            viewString.Append("one AS AspNetUsers_UserTimeZone, \r\n            T.ReferralCode AS AspNetUsers_Ref");
            viewString.Append("erralCode, \r\n            T.AfilliatianStatus AS AspNetUsers_AfilliatianStatus, \r");
            viewString.Append("\n            T.StripeCustomerId AS AspNetUsers_StripeCustomerId, \r\n            T");
            viewString.Append(".ChargeBeesubscriptionId AS AspNetUsers_ChargeBeesubscriptionID, \r\n            T");
            viewString.Append(".RegisteredViaReferral AS AspNetUsers_RegisteredViaReferral, \r\n            T.Ref");
            viewString.Append("erringUserId AS AspNetUsers_ReferringUserID, \r\n            T.Gender AS AspNetUse");
            viewString.Append("rs_Gender, \r\n            T.LanguageId AS AspNetUsers_LanguageID, \r\n            T");
            viewString.Append(".IndustryId AS AspNetUsers_IndustryID, \r\n            T.EducationId AS AspNetUser");
            viewString.Append("s_EducationId, \r\n            T.ProfileImage AS AspNetUsers_ProfileImage, \r\n     ");
            viewString.Append("       T.UserCode AS AspNetUsers_UserCode, \r\n            T.SmsCode AS AspNetUser");
            viewString.Append("s_SmsCode, \r\n            T.WebsiteLink AS AspNetUsers_WebsiteLink, \r\n           ");
            viewString.Append(" T.AdvertisingContact AS AspNetUsers_AdvertisingContact, \r\n            T.Adverti");
            viewString.Append("singContactPhoneNumber AS AspNetUsers_AdvertisingContactPhoneNumber, \r\n         ");
            viewString.Append("   T.AdvertisingContactEmail AS AspNetUsers_AdvertisingContactEmail, \r\n         ");
            viewString.Append("   T.PaypalCustomerId AS AspNetUsers_PaypalCustomerId, \r\n            T.GoogleWal");
            viewString.Append("letCustomerId AS AspNetUsers_GoogleWalletCustomerId, \r\n            T.PreferredPa");
            viewString.Append("youtAccount AS AspNetUsers_PreferredPayoutAccount, \r\n            T.DOB AS AspNet");
            viewString.Append("Users_DOB, \r\n            True AS _from0\r\n        FROM BaseDbContext.Users AS T\r\n");
            viewString.Append("    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUsers", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestion", "\r\n    SELECT VALUE -- Constructing ProfileQuestion\r\n        [SMDModel.Store.Profi" +
                    "leQuestion](T1.ProfileQuestion_PQID, T1.ProfileQuestion_LanguageID, T1.ProfileQu" +
                    "estion_CountryID, T1.ProfileQuestion_ProfileGroupID, T1.ProfileQuestion_Priority" +
                    ", T1.ProfileQuestion_Type, T1.ProfileQuestion_Question, T1.ProfileQuestion_Refre" +
                    "shTime, T1.ProfileQuestion_SkippedCount, T1.ProfileQuestion_CreationDate, T1.Pro" +
                    "fileQuestion_CreatedBy, T1.ProfileQuestion_ModifiedDate, T1.ProfileQuestion_Modi" +
                    "fiedBy, T1.ProfileQuestion_HasLinkedQuestions, T1.ProfileQuestion_PenalityForNot" +
                    "Answering, T1.ProfileQuestion_Status)\r\n    FROM (\r\n        SELECT \r\n            " +
                    "T.PqId AS ProfileQuestion_PQID, \r\n            T.LanguageId AS ProfileQuestion_La" +
                    "nguageID, \r\n            T.CountryId AS ProfileQuestion_CountryID, \r\n            " +
                    "T.ProfileGroupId AS ProfileQuestion_ProfileGroupID, \r\n            T.Priority AS " +
                    "ProfileQuestion_Priority, \r\n            T.Type AS ProfileQuestion_Type, \r\n      " +
                    "      T.Question AS ProfileQuestion_Question, \r\n            T.RefreshTime AS Pro" +
                    "fileQuestion_RefreshTime, \r\n            T.SkippedCount AS ProfileQuestion_Skippe" +
                    "dCount, \r\n            T.CreationDate AS ProfileQuestion_CreationDate, \r\n        " +
                    "    T.CreatedBy AS ProfileQuestion_CreatedBy, \r\n            T.ModifiedDate AS Pr" +
                    "ofileQuestion_ModifiedDate, \r\n            T.ModifiedBy AS ProfileQuestion_Modifi" +
                    "edBy, \r\n            T.HasLinkedQuestions AS ProfileQuestion_HasLinkedQuestions, " +
                    "\r\n            T.PenalityForNotAnswering AS ProfileQuestion_PenalityForNotAnsweri" +
                    "ng, \r\n            T.Status AS ProfileQuestion_Status, \r\n            True AS _fro" +
                    "m0\r\n        FROM BaseDbContext.ProfileQuestions AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionAnswer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionAnswer", "\r\n    SELECT VALUE -- Constructing ProfileQuestionAnswer\r\n        [SMDModel.Store" +
                    ".ProfileQuestionAnswer](T1.ProfileQuestionAnswer_PQAnswerID, T1.ProfileQuestionA" +
                    "nswer_PQID, T1.ProfileQuestionAnswer_type, T1.ProfileQuestionAnswer_AnswerString" +
                    ", T1.ProfileQuestionAnswer_ImagePath, T1.ProfileQuestionAnswer_SortOrder, T1.Pro" +
                    "fileQuestionAnswer_LinkedQuestion1ID, T1.ProfileQuestionAnswer_LinkedQuestion2ID" +
                    ", T1.ProfileQuestionAnswer_LinkedQuestion3ID, T1.ProfileQuestionAnswer_LinkedQue" +
                    "stion4ID, T1.ProfileQuestionAnswer_LinkedQuestion5ID, T1.ProfileQuestionAnswer_L" +
                    "inkedQuestion6ID, T1.ProfileQuestionAnswer_Status)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.PqAnswerId AS ProfileQuestionAnswer_PQAnswerID, \r\n            T.P" +
                    "qId AS ProfileQuestionAnswer_PQID, \r\n            T.Type AS ProfileQuestionAnswer" +
                    "_type, \r\n            T.AnswerString AS ProfileQuestionAnswer_AnswerString, \r\n   " +
                    "         T.ImagePath AS ProfileQuestionAnswer_ImagePath, \r\n            T.SortOrd" +
                    "er AS ProfileQuestionAnswer_SortOrder, \r\n            T.LinkedQuestion1Id AS Prof" +
                    "ileQuestionAnswer_LinkedQuestion1ID, \r\n            T.LinkedQuestion2Id AS Profil" +
                    "eQuestionAnswer_LinkedQuestion2ID, \r\n            T.LinkedQuestion3Id AS ProfileQ" +
                    "uestionAnswer_LinkedQuestion3ID, \r\n            T.LinkedQuestion4Id AS ProfileQue" +
                    "stionAnswer_LinkedQuestion4ID, \r\n            T.LinkedQuestion5Id AS ProfileQuest" +
                    "ionAnswer_LinkedQuestion5ID, \r\n            T.LinkedQuestion6Id AS ProfileQuestio" +
                    "nAnswer_LinkedQuestion6ID, \r\n            T.Status AS ProfileQuestionAnswer_Statu" +
                    "s, \r\n            True AS _from0\r\n        FROM BaseDbContext.ProfileQuestionAnswe" +
                    "rs AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionGroup
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionGroup", @"
    SELECT VALUE -- Constructing ProfileQuestionGroup
        [SMDModel.Store.ProfileQuestionGroup](T1.ProfileQuestionGroup_ProfileGroupID, T1.ProfileQuestionGroup_ProfileGroupName, T1.ProfileQuestionGroup_ImagePath, T1.ProfileQuestionGroup_LangaugeID, T1.ProfileQuestionGroup_CountryID)
    FROM (
        SELECT 
            T.ProfileGroupId AS ProfileQuestionGroup_ProfileGroupID, 
            T.ProfileGroupName AS ProfileQuestionGroup_ProfileGroupName, 
            T.ImagePath AS ProfileQuestionGroup_ImagePath, 
            T.LangaugeId AS ProfileQuestionGroup_LangaugeID, 
            T.CountryId AS ProfileQuestionGroup_CountryID, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionGroups AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.ProfileQuestionUserAnswer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.ProfileQuestionUserAnswer", @"
    SELECT VALUE -- Constructing ProfileQuestionUserAnswer
        [SMDModel.Store.ProfileQuestionUserAnswer](T1.ProfileQuestionUserAnswer_PQUAnswerID, T1.ProfileQuestionUserAnswer_PQID, T1.ProfileQuestionUserAnswer_UserID, T1.ProfileQuestionUserAnswer_AnswerDateTime, T1.ProfileQuestionUserAnswer_PQAnswerID)
    FROM (
        SELECT 
            T.PquAnswerId AS ProfileQuestionUserAnswer_PQUAnswerID, 
            T.PqId AS ProfileQuestionUserAnswer_PQID, 
            T.UserId AS ProfileQuestionUserAnswer_UserID, 
            T.AnswerDateTime AS ProfileQuestionUserAnswer_AnswerDateTime, 
            T.PqAnswerId AS ProfileQuestionUserAnswer_PQAnswerID, 
            True AS _from0
        FROM BaseDbContext.ProfileQuestionUserAnswers AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserClaims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserClaims", @"
    SELECT VALUE -- Constructing AspNetUserClaims
        [SMDModel.Store.AspNetUserClaims](T1.AspNetUserClaims_Id, T1.AspNetUserClaims_UserId, T1.AspNetUserClaims_ClaimType, T1.AspNetUserClaims_ClaimValue)
    FROM (
        SELECT 
            T.Id AS AspNetUserClaims_Id, 
            T.UserId AS AspNetUserClaims_UserId, 
            T.ClaimType AS AspNetUserClaims_ClaimType, 
            T.ClaimValue AS AspNetUserClaims_ClaimValue, 
            True AS _from0
        FROM BaseDbContext.UserClaims AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Country
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Country", @"
    SELECT VALUE -- Constructing Country
        [SMDModel.Store.Country](T1.Country_CountryID, T1.Country_CountryName, T1.Country_CountryCode)
    FROM (
        SELECT 
            T.CountryId AS Country_CountryID, 
            T.CountryName AS Country_CountryName, 
            T.CountryCode AS Country_CountryCode, 
            True AS _from0
        FROM BaseDbContext.Countries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Language
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Language", @"
    SELECT VALUE -- Constructing Language
        [SMDModel.Store.Language](T1.Language_LanguageID, T1.Language_LanguageName, T1.Language_NativeName)
    FROM (
        SELECT 
            T.LanguageId AS Language_LanguageID, 
            T.LanguageName AS Language_LanguageName, 
            T.NativeName AS Language_NativeName, 
            True AS _from0
        FROM BaseDbContext.Languages AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaign
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4074);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaign\r\n        [SMDModel.Store.AdCampaig");
            viewString.Append("n](T1.AdCampaign_CampaignID, T1.AdCampaign_LanguageID, T1.AdCampaign_UserID, T1.");
            viewString.Append("AdCampaign_SMDCampaign, T1.AdCampaign_CampaignName, T1.AdCampaign_CampaignDescri");
            viewString.Append("ption, T1.AdCampaign_Status, T1.AdCampaign_Archived, T1.AdCampaign_Approved, T1.");
            viewString.Append("AdCampaign_ApprovedBy, T1.AdCampaign_ApprovalDateTime, T1.AdCampaign_StartDateTi");
            viewString.Append("me, T1.AdCampaign_EndDateTime, T1.AdCampaign_MaxBudget, T1.AdCampaign_Type, T1.A");
            viewString.Append("dCampaign_ClickRate, T1.AdCampaign_SMDCredits, T1.AdCampaign_DisplayTitle, T1.Ad");
            viewString.Append("Campaign_Description, T1.AdCampaign_ImagePath, T1.AdCampaign_LandingPageVideoLin");
            viewString.Append("k, T1.AdCampaign_VerifyQuestion, T1.AdCampaign_Answer1, T1.AdCampaign_Answer2, T");
            viewString.Append("1.AdCampaign_Answer3, T1.AdCampaign_CorrectAnswer, T1.AdCampaign_CreatedDateTime");
            viewString.Append(", T1.AdCampaign_CreatedBy, T1.AdCampaign_ModifiedDateTime, T1.AdCampaign_Modifie");
            viewString.Append("dBy, T1.AdCampaign_AgeRangeStart, T1.AdCampaign_AgeRangeEnd, T1.AdCampaign_Gende");
            viewString.Append("r, T1.AdCampaign_RejectedReason, T1.AdCampaign_ProjectedReach, T1.AdCampaign_Res");
            viewString.Append("ultClicks, T1.AdCampaign_AmountSpent, T1.AdCampaign_RewardType, T1.AdCampaign_Vo");
            viewString.Append("ucher1Heading, T1.AdCampaign_Voucher1Description, T1.AdCampaign_Voucher1Value, T");
            viewString.Append("1.AdCampaign_Voucher2Heading, T1.AdCampaign_Voucher2Description, T1.AdCampaign_V");
            viewString.Append("oucher2Value, T1.AdCampaign_Voucher1ImagePath, T1.AdCampaign_Voucher2ImagePath)\r");
            viewString.Append("\n    FROM (\r\n        SELECT \r\n            T.CampaignId AS AdCampaign_CampaignID,");
            viewString.Append(" \r\n            T.LanguageId AS AdCampaign_LanguageID, \r\n            T.UserId AS ");
            viewString.Append("AdCampaign_UserID, \r\n            T.SmdCampaign AS AdCampaign_SMDCampaign, \r\n    ");
            viewString.Append("        T.CampaignName AS AdCampaign_CampaignName, \r\n            T.CampaignDescr");
            viewString.Append("iption AS AdCampaign_CampaignDescription, \r\n            T.Status AS AdCampaign_S");
            viewString.Append("tatus, \r\n            T.Archived AS AdCampaign_Archived, \r\n            T.Approved");
            viewString.Append(" AS AdCampaign_Approved, \r\n            T.ApprovedBy AS AdCampaign_ApprovedBy, \r\n");
            viewString.Append("            T.ApprovalDateTime AS AdCampaign_ApprovalDateTime, \r\n            T.S");
            viewString.Append("tartDateTime AS AdCampaign_StartDateTime, \r\n            T.EndDateTime AS AdCampa");
            viewString.Append("ign_EndDateTime, \r\n            T.MaxBudget AS AdCampaign_MaxBudget, \r\n          ");
            viewString.Append("  T.Type AS AdCampaign_Type, \r\n            T.ClickRate AS AdCampaign_ClickRate, ");
            viewString.Append("\r\n            T.SmdCredits AS AdCampaign_SMDCredits, \r\n            T.DisplayTitl");
            viewString.Append("e AS AdCampaign_DisplayTitle, \r\n            T.Description AS AdCampaign_Descript");
            viewString.Append("ion, \r\n            T.ImagePath AS AdCampaign_ImagePath, \r\n            T.LandingP");
            viewString.Append("ageVideoLink AS AdCampaign_LandingPageVideoLink, \r\n            T.VerifyQuestion ");
            viewString.Append("AS AdCampaign_VerifyQuestion, \r\n            T.Answer1 AS AdCampaign_Answer1, \r\n ");
            viewString.Append("           T.Answer2 AS AdCampaign_Answer2, \r\n            T.Answer3 AS AdCampaig");
            viewString.Append("n_Answer3, \r\n            T.CorrectAnswer AS AdCampaign_CorrectAnswer, \r\n        ");
            viewString.Append("    T.CreatedDateTime AS AdCampaign_CreatedDateTime, \r\n            T.CreatedBy A");
            viewString.Append("S AdCampaign_CreatedBy, \r\n            T.ModifiedDateTime AS AdCampaign_ModifiedD");
            viewString.Append("ateTime, \r\n            T.ModifiedBy AS AdCampaign_ModifiedBy, \r\n            T.Ag");
            viewString.Append("eRangeStart AS AdCampaign_AgeRangeStart, \r\n            T.AgeRangeEnd AS AdCampai");
            viewString.Append("gn_AgeRangeEnd, \r\n            T.Gender AS AdCampaign_Gender, \r\n            T.Rej");
            viewString.Append("ectedReason AS AdCampaign_RejectedReason, \r\n            T.ProjectedReach AS AdCa");
            viewString.Append("mpaign_ProjectedReach, \r\n            T.ResultClicks AS AdCampaign_ResultClicks, ");
            viewString.Append("\r\n            T.AmountSpent AS AdCampaign_AmountSpent, \r\n            T.RewardTyp");
            viewString.Append("e AS AdCampaign_RewardType, \r\n            T.Voucher1Heading AS AdCampaign_Vouche");
            viewString.Append("r1Heading, \r\n            T.Voucher1Description AS AdCampaign_Voucher1Description");
            viewString.Append(", \r\n            T.Voucher1Value AS AdCampaign_Voucher1Value, \r\n            T.Vou");
            viewString.Append("cher2Heading AS AdCampaign_Voucher2Heading, \r\n            T.Voucher2Description ");
            viewString.Append("AS AdCampaign_Voucher2Description, \r\n            T.Voucher2Value AS AdCampaign_V");
            viewString.Append("oucher2Value, \r\n            T.Voucher1ImagePath AS AdCampaign_Voucher1ImagePath,");
            viewString.Append(" \r\n            T.Voucher2ImagePath AS AdCampaign_Voucher2ImagePath, \r\n          ");
            viewString.Append("  True AS _from0\r\n        FROM BaseDbContext.AdCampaigns AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaign", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignResponse", @"
    SELECT VALUE -- Constructing AdCampaignResponse
        [SMDModel.Store.AdCampaignResponse](T1.AdCampaignResponse_ResponseID, T1.AdCampaignResponse_CampaignID, T1.AdCampaignResponse_CreatedDateTime, T1.AdCampaignResponse_UserID, T1.AdCampaignResponse_EndUserDollarAmount, T1.AdCampaignResponse_SkipCount, T1.AdCampaignResponse_UserSelection)
    FROM (
        SELECT 
            T.ResponseId AS AdCampaignResponse_ResponseID, 
            T.CampaignId AS AdCampaignResponse_CampaignID, 
            T.CreatedDateTime AS AdCampaignResponse_CreatedDateTime, 
            T.UserId AS AdCampaignResponse_UserID, 
            T.EndUserDollarAmount AS AdCampaignResponse_EndUserDollarAmount, 
            T.SkipCount AS AdCampaignResponse_SkipCount, 
            T.UserSelection AS AdCampaignResponse_UserSelection, 
            True AS _from0
        FROM BaseDbContext.AdCampaignResponses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignTargetLocation", @"
    SELECT VALUE -- Constructing AdCampaignTargetLocation
        [SMDModel.Store.AdCampaignTargetLocation](T1.AdCampaignTargetLocation_ID, T1.AdCampaignTargetLocation_CampaignID, T1.AdCampaignTargetLocation_CountryID, T1.AdCampaignTargetLocation_CityID, T1.AdCampaignTargetLocation_Radius, T1.AdCampaignTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.Id AS AdCampaignTargetLocation_ID, 
            T.CampaignId AS AdCampaignTargetLocation_CampaignID, 
            T.CountryId AS AdCampaignTargetLocation_CountryID, 
            T.CityId AS AdCampaignTargetLocation_CityID, 
            T.Radius AS AdCampaignTargetLocation_Radius, 
            T.IncludeorExclude AS AdCampaignTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM BaseDbContext.AdCampaignTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3194);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SurveyQuestion\r\n        [SMDModel.Store.Surve");
            viewString.Append("yQuestion](T1.SurveyQuestion_SQID, T1.SurveyQuestion_LanguageID, T1.SurveyQuesti");
            viewString.Append("on_CountryID, T1.SurveyQuestion_Type, T1.SurveyQuestion_UserID, T1.SurveyQuestio");
            viewString.Append("n_Status, T1.SurveyQuestion_Question, T1.SurveyQuestion_Description, T1.SurveyQu");
            viewString.Append("estion_RepeatPeriod, T1.SurveyQuestion_DisplayQuestion, T1.SurveyQuestion_StartD");
            viewString.Append("ate, T1.SurveyQuestion_EndDate, T1.SurveyQuestion_Approved, T1.SurveyQuestion_Ap");
            viewString.Append("provedByUserID, T1.SurveyQuestion_ApprovalDate, T1.SurveyQuestion_CreationDate, ");
            viewString.Append("T1.SurveyQuestion_ModifiedDate, T1.SurveyQuestion_CreatedBy, T1.SurveyQuestion_M");
            viewString.Append("odifiedBy, T1.SurveyQuestion_LeftPicturePath, T1.SurveyQuestion_RightPicturePath");
            viewString.Append(", T1.SurveyQuestion_DiscountVoucherApplied, T1.SurveyQuestion_VoucherCode, T1.Su");
            viewString.Append("rveyQuestion_DiscountVoucherID, T1.SurveyQuestion_RejectionReason, T1.SurveyQues");
            viewString.Append("tion_ProjectedReach, T1.SurveyQuestion_ResultClicks, T1.SurveyQuestion_AgeRangeS");
            viewString.Append("tart, T1.SurveyQuestion_AgeRangeEnd, T1.SurveyQuestion_Gender, T1.SurveyQuestion");
            viewString.Append("_SubmissionDate, T1.SurveyQuestion_ParentSurveyId, T1.SurveyQuestion_Priority)\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.SqId AS SurveyQuestion_SQID, \r\n      ");
            viewString.Append("      T.LanguageId AS SurveyQuestion_LanguageID, \r\n            T.CountryId AS Su");
            viewString.Append("rveyQuestion_CountryID, \r\n            T.Type AS SurveyQuestion_Type, \r\n         ");
            viewString.Append("   T.UserId AS SurveyQuestion_UserID, \r\n            T.Status AS SurveyQuestion_S");
            viewString.Append("tatus, \r\n            T.Question AS SurveyQuestion_Question, \r\n            T.Desc");
            viewString.Append("ription AS SurveyQuestion_Description, \r\n            T.RepeatPeriod AS SurveyQue");
            viewString.Append("stion_RepeatPeriod, \r\n            T.DisplayQuestion AS SurveyQuestion_DisplayQue");
            viewString.Append("stion, \r\n            T.StartDate AS SurveyQuestion_StartDate, \r\n            T.En");
            viewString.Append("dDate AS SurveyQuestion_EndDate, \r\n            T.Approved AS SurveyQuestion_Appr");
            viewString.Append("oved, \r\n            T.ApprovedByUserId AS SurveyQuestion_ApprovedByUserID, \r\n   ");
            viewString.Append("         T.ApprovalDate AS SurveyQuestion_ApprovalDate, \r\n            T.Creation");
            viewString.Append("Date AS SurveyQuestion_CreationDate, \r\n            T.ModifiedDate AS SurveyQuest");
            viewString.Append("ion_ModifiedDate, \r\n            T.CreatedBy AS SurveyQuestion_CreatedBy, \r\n     ");
            viewString.Append("       T.ModifiedBy AS SurveyQuestion_ModifiedBy, \r\n            T.LeftPicturePat");
            viewString.Append("h AS SurveyQuestion_LeftPicturePath, \r\n            T.RightPicturePath AS SurveyQ");
            viewString.Append("uestion_RightPicturePath, \r\n            T.DiscountVoucherApplied AS SurveyQuesti");
            viewString.Append("on_DiscountVoucherApplied, \r\n            T.VoucherCode AS SurveyQuestion_Voucher");
            viewString.Append("Code, \r\n            T.DiscountVoucherId AS SurveyQuestion_DiscountVoucherID, \r\n ");
            viewString.Append("           T.RejectionReason AS SurveyQuestion_RejectionReason, \r\n            T.");
            viewString.Append("ProjectedReach AS SurveyQuestion_ProjectedReach, \r\n            T.ResultClicks AS");
            viewString.Append(" SurveyQuestion_ResultClicks, \r\n            T.AgeRangeStart AS SurveyQuestion_Ag");
            viewString.Append("eRangeStart, \r\n            T.AgeRangeEnd AS SurveyQuestion_AgeRangeEnd, \r\n      ");
            viewString.Append("      T.Gender AS SurveyQuestion_Gender, \r\n            T.SubmissionDate AS Surve");
            viewString.Append("yQuestion_SubmissionDate, \r\n            T.ParentSurveyId AS SurveyQuestion_Paren");
            viewString.Append("tSurveyId, \r\n            T.Priority AS SurveyQuestion_Priority, \r\n            Tr");
            viewString.Append("ue AS _from0\r\n        FROM BaseDbContext.SurveyQuestions AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestion", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionTargetCriteria", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetCriteria
        [SMDModel.Store.SurveyQuestionTargetCriteria](T1.SurveyQuestionTargetCriteria_ID, T1.SurveyQuestionTargetCriteria_SQID, T1.SurveyQuestionTargetCriteria_Type, T1.SurveyQuestionTargetCriteria_PQID, T1.SurveyQuestionTargetCriteria_PQAnswerID, T1.SurveyQuestionTargetCriteria_LinkedSQID, T1.SurveyQuestionTargetCriteria_LinkedSQAnswer, T1.SurveyQuestionTargetCriteria_IncludeorExclude, T1.SurveyQuestionTargetCriteria_LanguageID, T1.SurveyQuestionTargetCriteria_IndustryID, T1.SurveyQuestionTargetCriteria_EducationID)
    FROM (
        SELECT 
            T.Id AS SurveyQuestionTargetCriteria_ID, 
            T.SqId AS SurveyQuestionTargetCriteria_SQID, 
            T.Type AS SurveyQuestionTargetCriteria_Type, 
            T.PqId AS SurveyQuestionTargetCriteria_PQID, 
            T.PqAnswerId AS SurveyQuestionTargetCriteria_PQAnswerID, 
            T.LinkedSqId AS SurveyQuestionTargetCriteria_LinkedSQID, 
            T.LinkedSqAnswer AS SurveyQuestionTargetCriteria_LinkedSQAnswer, 
            T.IncludeorExclude AS SurveyQuestionTargetCriteria_IncludeorExclude, 
            T.LanguageId AS SurveyQuestionTargetCriteria_LanguageID, 
            T.IndustryId AS SurveyQuestionTargetCriteria_IndustryID, 
            T.EducationId AS SurveyQuestionTargetCriteria_EducationID, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionTargetCriterias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionTargetLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionTargetLocation", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetLocation
        [SMDModel.Store.SurveyQuestionTargetLocation](T1.SurveyQuestionTargetLocation_ID, T1.SurveyQuestionTargetLocation_SQID, T1.SurveyQuestionTargetLocation_CountryID, T1.SurveyQuestionTargetLocation_CityID, T1.SurveyQuestionTargetLocation_Radius, T1.SurveyQuestionTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.Id AS SurveyQuestionTargetLocation_ID, 
            T.SqId AS SurveyQuestionTargetLocation_SQID, 
            T.CountryId AS SurveyQuestionTargetLocation_CountryID, 
            T.CityId AS SurveyQuestionTargetLocation_CityID, 
            T.Radius AS SurveyQuestionTargetLocation_Radius, 
            T.IncludeorExclude AS SurveyQuestionTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionTargetLocations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SurveyQuestionResponse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SurveyQuestionResponse", @"
    SELECT VALUE -- Constructing SurveyQuestionResponse
        [SMDModel.Store.SurveyQuestionResponse](T1.SurveyQuestionResponse_SQResponseID, T1.SurveyQuestionResponse_SQID, T1.SurveyQuestionResponse_UserID, T1.SurveyQuestionResponse_ResoponseDateTime, T1.SurveyQuestionResponse_UserSelection, T1.SurveyQuestionResponse_SkipCount)
    FROM (
        SELECT 
            T.SqResponseId AS SurveyQuestionResponse_SQResponseID, 
            T.SqId AS SurveyQuestionResponse_SQID, 
            T.UserId AS SurveyQuestionResponse_UserID, 
            T.ResoponseDateTime AS SurveyQuestionResponse_ResoponseDateTime, 
            T.UserSelection AS SurveyQuestionResponse_UserSelection, 
            T.SkipCount AS SurveyQuestionResponse_SkipCount, 
            True AS _from0
        FROM BaseDbContext.SurveyQuestionResponses AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.City
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.City", @"
    SELECT VALUE -- Constructing City
        [SMDModel.Store.City](T1.City_CityID, T1.City_CityName, T1.City_IsCapital, T1.City_CountryID, T1.City_GeoLONG, T1.City_GeoLAT)
    FROM (
        SELECT 
            T.CityId AS City_CityID, 
            T.CityName AS City_CityName, 
            T.IsCapital AS City_IsCapital, 
            T.CountryId AS City_CountryID, 
            T.GeoLong AS City_GeoLONG, 
            T.GeoLat AS City_GeoLAT, 
            True AS _from0
        FROM BaseDbContext.Cities AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Industry
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Industry", @"
    SELECT VALUE -- Constructing Industry
        [SMDModel.Store.Industry](T1.Industry_IndustryID, T1.Industry_IndustryName, T1.Industry_Status)
    FROM (
        SELECT 
            T.IndustryId AS Industry_IndustryID, 
            T.IndustryName AS Industry_IndustryName, 
            T.Status AS Industry_Status, 
            True AS _from0
        FROM BaseDbContext.Industries AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Currency
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Currency", @"
    SELECT VALUE -- Constructing Currency
        [SMDModel.Store.Currency](T1.Currency_CurrencyID, T1.Currency_Name, T1.Currency_CurrencyCode, T1.Currency_SMDCreditRatio, T1.Currency_CurrencySymbol)
    FROM (
        SELECT 
            T.CurrencyId AS Currency_CurrencyID, 
            T.Name AS Currency_Name, 
            T.CurrencyCode AS Currency_CurrencyCode, 
            T.SMDCreditRatio AS Currency_SMDCreditRatio, 
            T.CurrencySymbol AS Currency_CurrencySymbol, 
            True AS _from0
        FROM BaseDbContext.Currencies AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Account", @"
    SELECT VALUE -- Constructing Account
        [SMDModel.Store.Account](T1.Account_AccountId, T1.Account_AccountName, T1.Account_AccountType, T1.Account_AccountBalance, T1.Account_UserId)
    FROM (
        SELECT 
            T.AccountId AS Account_AccountId, 
            T.AccountName AS Account_AccountName, 
            T.AccountType AS Account_AccountType, 
            T.AccountBalance AS Account_AccountBalance, 
            T.UserId AS Account_UserId, 
            True AS _from0
        FROM BaseDbContext.Accounts AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Transaction
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Transaction", @"
    SELECT VALUE -- Constructing Transaction
        [SMDModel.Store.Transaction](T1.Transaction_TxID, T1.Transaction_TransactionDate, T1.Transaction_Type, T1.Transaction_DebitCredit, T1.Transaction_CreditAmount, T1.Transaction_DebitAmount, T1.Transaction_AccountID, T1.Transaction_TaxPerc, T1.Transaction_TaxValue, T1.Transaction_AdCampaignID, T1.Transaction_SQID, T1.Transaction_isProcessed, T1.Transaction_CurrencyID, T1.Transaction_CurrencyRateID, T1.Transaction_Sequence)
    FROM (
        SELECT 
            T.TxId AS Transaction_TxID, 
            T.TransactionDate AS Transaction_TransactionDate, 
            T.Type AS Transaction_Type, 
            T.DebitCredit AS Transaction_DebitCredit, 
            T.CreditAmount AS Transaction_CreditAmount, 
            T.DebitAmount AS Transaction_DebitAmount, 
            T.AccountId AS Transaction_AccountID, 
            T.TaxPerc AS Transaction_TaxPerc, 
            T.TaxValue AS Transaction_TaxValue, 
            T.AdCampaignId AS Transaction_AdCampaignID, 
            T.SQId AS Transaction_SQID, 
            T.isProcessed AS Transaction_isProcessed, 
            T.CurrencyId AS Transaction_CurrencyID, 
            T.CurrencyRateId AS Transaction_CurrencyRateID, 
            T.Sequence AS Transaction_Sequence, 
            True AS _from0
        FROM BaseDbContext.Transactions AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Invoice
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Invoice", @"
    SELECT VALUE -- Constructing Invoice
        [SMDModel.Store.Invoice](T1.Invoice_InvoiceId, T1.Invoice_InvoiceDate, T1.Invoice_InvoiceDueDate, T1.Invoice_UserId, T1.Invoice_TaxPercentage, T1.Invoice_Total, T1.Invoice_NetTotal, T1.Invoice_TaxValue, T1.Invoice_CompanyName, T1.Invoice_Address1, T1.Invoice_Address2, T1.Invoice_City, T1.Invoice_State, T1.Invoice_Country, T1.Invoice_ZipCode, T1.Invoice_CreditCardRef)
    FROM (
        SELECT 
            T.InvoiceId AS Invoice_InvoiceId, 
            T.InvoiceDate AS Invoice_InvoiceDate, 
            T.InvoiceDueDate AS Invoice_InvoiceDueDate, 
            T.UserId AS Invoice_UserId, 
            T.TaxPercentage AS Invoice_TaxPercentage, 
            T.Total AS Invoice_Total, 
            T.NetTotal AS Invoice_NetTotal, 
            T.TaxValue AS Invoice_TaxValue, 
            T.CompanyName AS Invoice_CompanyName, 
            T.Address1 AS Invoice_Address1, 
            T.Address2 AS Invoice_Address2, 
            T.City AS Invoice_City, 
            T.State AS Invoice_State, 
            T.Country AS Invoice_Country, 
            T.ZipCode AS Invoice_ZipCode, 
            T.CreditCardRef AS Invoice_CreditCardRef, 
            True AS _from0
        FROM BaseDbContext.Invoices AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.InvoiceDetail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.InvoiceDetail", @"
    SELECT VALUE -- Constructing InvoiceDetail
        [SMDModel.Store.InvoiceDetail](T1.InvoiceDetail_InvoiceDetailId, T1.InvoiceDetail_InvoiceId, T1.InvoiceDetail_ItemName, T1.InvoiceDetail_ItemTax, T1.InvoiceDetail_ItemAmount, T1.InvoiceDetail_ItemGrossAmount, T1.InvoiceDetail_ItemDescription, T1.InvoiceDetail_CampaignId, T1.InvoiceDetail_SQId, T1.InvoiceDetail_ProductId)
    FROM (
        SELECT 
            T.InvoiceDetailId AS InvoiceDetail_InvoiceDetailId, 
            T.InvoiceId AS InvoiceDetail_InvoiceId, 
            T.ItemName AS InvoiceDetail_ItemName, 
            T.ItemTax AS InvoiceDetail_ItemTax, 
            T.ItemAmount AS InvoiceDetail_ItemAmount, 
            T.ItemGrossAmount AS InvoiceDetail_ItemGrossAmount, 
            T.ItemDescription AS InvoiceDetail_ItemDescription, 
            T.CampaignId AS InvoiceDetail_CampaignId, 
            T.SqId AS InvoiceDetail_SQId, 
            T.ProductId AS InvoiceDetail_ProductId, 
            True AS _from0
        FROM BaseDbContext.InvoiceDetails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Tax
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Tax", @"
    SELECT VALUE -- Constructing Tax
        [SMDModel.Store.Tax](T1.Tax_TaxId, T1.Tax_TaxName, T1.Tax_TaxValue, T1.Tax_CountryId)
    FROM (
        SELECT 
            T.TaxId AS Tax_TaxId, 
            T.TaxName AS Tax_TaxName, 
            T.TaxValue AS Tax_TaxValue, 
            T.CountryId AS Tax_CountryId, 
            True AS _from0
        FROM BaseDbContext.Taxes AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Education
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Education", @"
    SELECT VALUE -- Constructing Education
        [SMDModel.Store.Education](T1.Education_EducationId, T1.Education_Title, T1.Education_Status)
    FROM (
        SELECT 
            T.EducationId AS Education_EducationId, 
            T.Title AS Education_Title, 
            T.Status AS Education_Status, 
            True AS _from0
        FROM BaseDbContext.Educations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Products", "\r\n    SELECT VALUE -- Constructing Products\r\n        [SMDModel.Store.Products](T1" +
                    ".Products_ProductID, T1.Products_CountryID, T1.Products_CurrencyID, T1.Products_" +
                    "ProductName, T1.Products_IsActive, T1.Products_SetupPrice, T1.Products_ClickFeeP" +
                    "ercentage, T1.Products_AgeClausePrice, T1.Products_AffiliatePercentage, T1.Produ" +
                    "cts_ProductCode, T1.Products_GenderClausePrice, T1.Products_LocationClausePrice," +
                    " T1.Products_OtherClausePrice, T1.Products_ProfessionClausePrice, T1.Products_Ed" +
                    "ucationClausePrice)\r\n    FROM (\r\n        SELECT \r\n            T.ProductId AS Pro" +
                    "ducts_ProductID, \r\n            T.CountryId AS Products_CountryID, \r\n            " +
                    "T.CurrencyId AS Products_CurrencyID, \r\n            T.ProductName AS Products_Pro" +
                    "ductName, \r\n            T.IsActive AS Products_IsActive, \r\n            T.SetupPr" +
                    "ice AS Products_SetupPrice, \r\n            T.ClickFeePercentage AS Products_Click" +
                    "FeePercentage, \r\n            T.AgeClausePrice AS Products_AgeClausePrice, \r\n    " +
                    "        T.AffiliatePercentage AS Products_AffiliatePercentage, \r\n            T.P" +
                    "roductCode AS Products_ProductCode, \r\n            T.GenderClausePrice AS Product" +
                    "s_GenderClausePrice, \r\n            T.LocationClausePrice AS Products_LocationCla" +
                    "usePrice, \r\n            T.OtherClausePrice AS Products_OtherClausePrice, \r\n     " +
                    "       T.ProfessionClausePrice AS Products_ProfessionClausePrice, \r\n            " +
                    "T.EducationClausePrice AS Products_EducationClausePrice, \r\n            True AS _" +
                    "from0\r\n        FROM BaseDbContext.Products AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AdCampaignTargetCriteria
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AdCampaignTargetCriteria", @"
    SELECT VALUE -- Constructing AdCampaignTargetCriteria
        [SMDModel.Store.AdCampaignTargetCriteria](T1.AdCampaignTargetCriteria_CriteriaID, T1.AdCampaignTargetCriteria_CampaignID, T1.AdCampaignTargetCriteria_Type, T1.AdCampaignTargetCriteria_PQID, T1.AdCampaignTargetCriteria_PQAnswerID, T1.AdCampaignTargetCriteria_SQID, T1.AdCampaignTargetCriteria_SQAnswer, T1.AdCampaignTargetCriteria_IncludeorExclude, T1.AdCampaignTargetCriteria_LanguageID, T1.AdCampaignTargetCriteria_IndustryID, T1.AdCampaignTargetCriteria_EducationID)
    FROM (
        SELECT 
            T.CriteriaId AS AdCampaignTargetCriteria_CriteriaID, 
            T.CampaignId AS AdCampaignTargetCriteria_CampaignID, 
            T.Type AS AdCampaignTargetCriteria_Type, 
            T.PqId AS AdCampaignTargetCriteria_PQID, 
            T.PqAnswerId AS AdCampaignTargetCriteria_PQAnswerID, 
            T.SqId AS AdCampaignTargetCriteria_SQID, 
            T.SqAnswer AS AdCampaignTargetCriteria_SQAnswer, 
            T.IncludeorExclude AS AdCampaignTargetCriteria_IncludeorExclude, 
            T.LanguageId AS AdCampaignTargetCriteria_LanguageID, 
            T.IndustryId AS AdCampaignTargetCriteria_IndustryID, 
            T.EducationId AS AdCampaignTargetCriteria_EducationID, 
            True AS _from0
        FROM BaseDbContext.AdCampaignTargetCriterias AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.TransactionLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.TransactionLog", @"
    SELECT VALUE -- Constructing TransactionLog
        [SMDModel.Store.TransactionLog](T1.TransactionLog_TransactionLogId, T1.TransactionLog_TxId, T1.TransactionLog_LogDate, T1.TransactionLog_Amount, T1.TransactionLog_Type, T1.TransactionLog_FromUser, T1.TransactionLog_ToUser, T1.TransactionLog_IsCompleted)
    FROM (
        SELECT 
            T.TransactionLogId AS TransactionLog_TransactionLogId, 
            T.TxId AS TransactionLog_TxId, 
            T.LogDate AS TransactionLog_LogDate, 
            T.Amount AS TransactionLog_Amount, 
            T.Type AS TransactionLog_Type, 
            T.FromUser AS TransactionLog_FromUser, 
            T.ToUser AS TransactionLog_ToUser, 
            T.IsCompleted AS TransactionLog_IsCompleted, 
            True AS _from0
        FROM BaseDbContext.TransactionLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AspNetUserRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AspNetUserRoles", @"
    SELECT VALUE -- Constructing AspNetUserRoles
        [SMDModel.Store.AspNetUserRoles](T1.AspNetUserRoles_UserId, T1.AspNetUserRoles_RoleId)
    FROM (
        SELECT 
            Key(T.AspNetUsers).Id AS AspNetUserRoles_UserId, 
            Key(T.AspNetRoles).Id AS AspNetUserRoles_RoleId, 
            True AS _from0
        FROM BaseDbContext.AspNetUserRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Roles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Roles", @"
    SELECT VALUE -- Constructing Roles
        [DomainModels.Role](T1.Role_Id, T1.Role_Name)
    FROM (
        SELECT 
            T.Id AS Role_Id, 
            T.Name AS Role_Name, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetRoles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserLogins
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserLogins", @"
    SELECT VALUE -- Constructing UserLogins
        [DomainModels.UserLogin](T1.UserLogin_LoginProvider, T1.UserLogin_ProviderKey, T1.UserLogin_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS UserLogin_LoginProvider, 
            T.ProviderKey AS UserLogin_ProviderKey, 
            T.UserId AS UserLogin_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetUserLogins AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Users
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4347);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Users\r\n        [DomainModels.User](T1.User_Id");
            viewString.Append(", T1.User_Email, T1.User_EmailConfirmed, T1.User_PasswordHash, T1.User_SecurityS");
            viewString.Append("tamp, T1.User_PhoneNumber, T1.User_PhoneNumberConfirmed, T1.User_TwoFactorEnable");
            viewString.Append("d, T1.User_LockoutEndDateUtc, T1.User_LockoutEnabled, T1.User_AccessFailedCount,");
            viewString.Append(" T1.User_UserName, T1.User_FullName, T1.User_AlternateEmail, T1.User_IsEmailVeri");
            viewString.Append("fied, T1.User_Status, T1.User_CreatedDateTime, T1.User_ModifiedDateTime, T1.User");
            viewString.Append("_LastLoginTime, T1.User_Phone1, T1.User_Phone2, T1.User_Jobtitle, T1.User_Contac");
            viewString.Append("tNotes, T1.User_IsSubscribed, T1.User_AppId, T1.User_CompanyName, T1.User_SalesE");
            viewString.Append("mail, T1.User_CompanyRepresentative, T1.User_Address1, T1.User_Address2, T1.User");
            viewString.Append("_CityId, T1.User_CountryId, T1.User_State, T1.User_ZipCode, T1.User_UserTimeZone");
            viewString.Append(", T1.User_ReferralCode, T1.User_AfilliatianStatus, T1.User_ChargeBeesubscription");
            viewString.Append("Id, T1.User_RegisteredViaReferral, T1.User_ReferringUserId, T1.User_Gender, T1.U");
            viewString.Append("ser_StripeCustomerId, T1.User_LanguageId, T1.User_IndustryId, T1.User_EducationI");
            viewString.Append("d, T1.User_ProfileImage, T1.User_UserCode, T1.User_SmsCode, T1.User_WebsiteLink,");
            viewString.Append(" T1.User_AdvertisingContact, T1.User_AdvertisingContactPhoneNumber, T1.User_Adve");
            viewString.Append("rtisingContactEmail, T1.User_PaypalCustomerId, T1.User_GoogleWalletCustomerId, T");
            viewString.Append("1.User_PreferredPayoutAccount, T1.User_DOB)\r\n    FROM (\r\n        SELECT \r\n      ");
            viewString.Append("      T.Id AS User_Id, \r\n            T.Email AS User_Email, \r\n            T.Emai");
            viewString.Append("lConfirmed AS User_EmailConfirmed, \r\n            T.PasswordHash AS User_Password");
            viewString.Append("Hash, \r\n            T.SecurityStamp AS User_SecurityStamp, \r\n            T.Phone");
            viewString.Append("Number AS User_PhoneNumber, \r\n            T.PhoneNumberConfirmed AS User_PhoneNu");
            viewString.Append("mberConfirmed, \r\n            T.TwoFactorEnabled AS User_TwoFactorEnabled, \r\n    ");
            viewString.Append("        T.LockoutEndDateUtc AS User_LockoutEndDateUtc, \r\n            T.LockoutEn");
            viewString.Append("abled AS User_LockoutEnabled, \r\n            T.AccessFailedCount AS User_AccessFa");
            viewString.Append("iledCount, \r\n            T.UserName AS User_UserName, \r\n            T.FullName A");
            viewString.Append("S User_FullName, \r\n            T.AlternateEmail AS User_AlternateEmail, \r\n      ");
            viewString.Append("      T.IsEmailVerified AS User_IsEmailVerified, \r\n            T.Status AS User_");
            viewString.Append("Status, \r\n            T.CreatedDateTime AS User_CreatedDateTime, \r\n            T");
            viewString.Append(".ModifiedDateTime AS User_ModifiedDateTime, \r\n            T.LastLoginTime AS Use");
            viewString.Append("r_LastLoginTime, \r\n            T.Phone1 AS User_Phone1, \r\n            T.Phone2 A");
            viewString.Append("S User_Phone2, \r\n            T.Jobtitle AS User_Jobtitle, \r\n            T.Contac");
            viewString.Append("tNotes AS User_ContactNotes, \r\n            T.IsSubscribed AS User_IsSubscribed, ");
            viewString.Append("\r\n            T.AppID AS User_AppId, \r\n            T.CompanyName AS User_Company");
            viewString.Append("Name, \r\n            T.SalesEmail AS User_SalesEmail, \r\n            T.CompanyRepr");
            viewString.Append("esentative AS User_CompanyRepresentative, \r\n            T.Address1 AS User_Addre");
            viewString.Append("ss1, \r\n            T.Address2 AS User_Address2, \r\n            T.CityID AS User_C");
            viewString.Append("ityId, \r\n            T.CountryID AS User_CountryId, \r\n            T.State AS Use");
            viewString.Append("r_State, \r\n            T.ZipCode AS User_ZipCode, \r\n            T.UserTimeZone A");
            viewString.Append("S User_UserTimeZone, \r\n            T.ReferralCode AS User_ReferralCode, \r\n      ");
            viewString.Append("      T.AfilliatianStatus AS User_AfilliatianStatus, \r\n            T.ChargeBeesu");
            viewString.Append("bscriptionID AS User_ChargeBeesubscriptionId, \r\n            T.RegisteredViaRefer");
            viewString.Append("ral AS User_RegisteredViaReferral, \r\n            T.ReferringUserID AS User_Refer");
            viewString.Append("ringUserId, \r\n            T.Gender AS User_Gender, \r\n            T.StripeCustome");
            viewString.Append("rId AS User_StripeCustomerId, \r\n            T.LanguageID AS User_LanguageId, \r\n ");
            viewString.Append("           T.IndustryID AS User_IndustryId, \r\n            T.EducationId AS User_");
            viewString.Append("EducationId, \r\n            T.ProfileImage AS User_ProfileImage, \r\n            T.");
            viewString.Append("UserCode AS User_UserCode, \r\n            T.SmsCode AS User_SmsCode, \r\n          ");
            viewString.Append("  T.WebsiteLink AS User_WebsiteLink, \r\n            T.AdvertisingContact AS User_");
            viewString.Append("AdvertisingContact, \r\n            T.AdvertisingContactPhoneNumber AS User_Advert");
            viewString.Append("isingContactPhoneNumber, \r\n            T.AdvertisingContactEmail AS User_Adverti");
            viewString.Append("singContactEmail, \r\n            T.PaypalCustomerId AS User_PaypalCustomerId, \r\n ");
            viewString.Append("           T.GoogleWalletCustomerId AS User_GoogleWalletCustomerId, \r\n          ");
            viewString.Append("  T.PreferredPayoutAccount AS User_PreferredPayoutAccount, \r\n            T.DOB A");
            viewString.Append("S User_DOB, \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.As");
            viewString.Append("pNetUsers AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Users", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestions", "\r\n    SELECT VALUE -- Constructing ProfileQuestions\r\n        [DomainModels.Profil" +
                    "eQuestion](T1.ProfileQuestion_PqId, T1.ProfileQuestion_LanguageId, T1.ProfileQue" +
                    "stion_CountryId, T1.ProfileQuestion_ProfileGroupId, T1.ProfileQuestion_Priority," +
                    " T1.ProfileQuestion_Type, T1.ProfileQuestion_Question, T1.ProfileQuestion_Refres" +
                    "hTime, T1.ProfileQuestion_SkippedCount, T1.ProfileQuestion_CreationDate, T1.Prof" +
                    "ileQuestion_CreatedBy, T1.ProfileQuestion_ModifiedDate, T1.ProfileQuestion_Modif" +
                    "iedBy, T1.ProfileQuestion_HasLinkedQuestions, T1.ProfileQuestion_PenalityForNotA" +
                    "nswering, T1.ProfileQuestion_Status)\r\n    FROM (\r\n        SELECT \r\n            T" +
                    ".PQID AS ProfileQuestion_PqId, \r\n            T.LanguageID AS ProfileQuestion_Lan" +
                    "guageId, \r\n            T.CountryID AS ProfileQuestion_CountryId, \r\n            T" +
                    ".ProfileGroupID AS ProfileQuestion_ProfileGroupId, \r\n            T.Priority AS P" +
                    "rofileQuestion_Priority, \r\n            T.Type AS ProfileQuestion_Type, \r\n       " +
                    "     T.Question AS ProfileQuestion_Question, \r\n            T.RefreshTime AS Prof" +
                    "ileQuestion_RefreshTime, \r\n            T.SkippedCount AS ProfileQuestion_Skipped" +
                    "Count, \r\n            T.CreationDate AS ProfileQuestion_CreationDate, \r\n         " +
                    "   T.CreatedBy AS ProfileQuestion_CreatedBy, \r\n            T.ModifiedDate AS Pro" +
                    "fileQuestion_ModifiedDate, \r\n            T.ModifiedBy AS ProfileQuestion_Modifie" +
                    "dBy, \r\n            T.HasLinkedQuestions AS ProfileQuestion_HasLinkedQuestions, \r" +
                    "\n            T.PenalityForNotAnswering AS ProfileQuestion_PenalityForNotAnswerin" +
                    "g, \r\n            T.Status AS ProfileQuestion_Status, \r\n            True AS _from" +
                    "0\r\n        FROM SMDModelStoreContainer.ProfileQuestion AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionAnswers", "\r\n    SELECT VALUE -- Constructing ProfileQuestionAnswers\r\n        [DomainModels." +
                    "ProfileQuestionAnswer](T1.ProfileQuestionAnswer_PqAnswerId, T1.ProfileQuestionAn" +
                    "swer_PqId, T1.ProfileQuestionAnswer_Type, T1.ProfileQuestionAnswer_AnswerString," +
                    " T1.ProfileQuestionAnswer_ImagePath, T1.ProfileQuestionAnswer_SortOrder, T1.Prof" +
                    "ileQuestionAnswer_LinkedQuestion1Id, T1.ProfileQuestionAnswer_LinkedQuestion2Id," +
                    " T1.ProfileQuestionAnswer_LinkedQuestion3Id, T1.ProfileQuestionAnswer_LinkedQues" +
                    "tion4Id, T1.ProfileQuestionAnswer_LinkedQuestion5Id, T1.ProfileQuestionAnswer_Li" +
                    "nkedQuestion6Id, T1.ProfileQuestionAnswer_Status)\r\n    FROM (\r\n        SELECT \r\n" +
                    "            T.PQAnswerID AS ProfileQuestionAnswer_PqAnswerId, \r\n            T.PQ" +
                    "ID AS ProfileQuestionAnswer_PqId, \r\n            T.type AS ProfileQuestionAnswer_" +
                    "Type, \r\n            T.AnswerString AS ProfileQuestionAnswer_AnswerString, \r\n    " +
                    "        T.ImagePath AS ProfileQuestionAnswer_ImagePath, \r\n            T.SortOrde" +
                    "r AS ProfileQuestionAnswer_SortOrder, \r\n            T.LinkedQuestion1ID AS Profi" +
                    "leQuestionAnswer_LinkedQuestion1Id, \r\n            T.LinkedQuestion2ID AS Profile" +
                    "QuestionAnswer_LinkedQuestion2Id, \r\n            T.LinkedQuestion3ID AS ProfileQu" +
                    "estionAnswer_LinkedQuestion3Id, \r\n            T.LinkedQuestion4ID AS ProfileQues" +
                    "tionAnswer_LinkedQuestion4Id, \r\n            T.LinkedQuestion5ID AS ProfileQuesti" +
                    "onAnswer_LinkedQuestion5Id, \r\n            T.LinkedQuestion6ID AS ProfileQuestion" +
                    "Answer_LinkedQuestion6Id, \r\n            T.Status AS ProfileQuestionAnswer_Status" +
                    ", \r\n            True AS _from0\r\n        FROM SMDModelStoreContainer.ProfileQuest" +
                    "ionAnswer AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionGroups
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionGroups", @"
    SELECT VALUE -- Constructing ProfileQuestionGroups
        [DomainModels.ProfileQuestionGroup](T1.ProfileQuestionGroup_ProfileGroupId, T1.ProfileQuestionGroup_ProfileGroupName, T1.ProfileQuestionGroup_ImagePath, T1.ProfileQuestionGroup_LangaugeId, T1.ProfileQuestionGroup_CountryId)
    FROM (
        SELECT 
            T.ProfileGroupID AS ProfileQuestionGroup_ProfileGroupId, 
            T.ProfileGroupName AS ProfileQuestionGroup_ProfileGroupName, 
            T.ImagePath AS ProfileQuestionGroup_ImagePath, 
            T.LangaugeID AS ProfileQuestionGroup_LangaugeId, 
            T.CountryID AS ProfileQuestionGroup_CountryId, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionGroup AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.ProfileQuestionUserAnswers
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.ProfileQuestionUserAnswers", @"
    SELECT VALUE -- Constructing ProfileQuestionUserAnswers
        [DomainModels.ProfileQuestionUserAnswer](T1.ProfileQuestionUserAnswer_PquAnswerId, T1.ProfileQuestionUserAnswer_PqId, T1.ProfileQuestionUserAnswer_UserId, T1.ProfileQuestionUserAnswer_AnswerDateTime, T1.ProfileQuestionUserAnswer_PqAnswerId)
    FROM (
        SELECT 
            T.PQUAnswerID AS ProfileQuestionUserAnswer_PquAnswerId, 
            T.PQID AS ProfileQuestionUserAnswer_PqId, 
            T.UserID AS ProfileQuestionUserAnswer_UserId, 
            T.AnswerDateTime AS ProfileQuestionUserAnswer_AnswerDateTime, 
            T.PQAnswerID AS ProfileQuestionUserAnswer_PqAnswerId, 
            True AS _from0
        FROM SMDModelStoreContainer.ProfileQuestionUserAnswer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.UserClaims
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.UserClaims", @"
    SELECT VALUE -- Constructing UserClaims
        [DomainModels.UserClaim](T1.UserClaim_Id, T1.UserClaim_UserId, T1.UserClaim_ClaimType, T1.UserClaim_ClaimValue)
    FROM (
        SELECT 
            T.Id AS UserClaim_Id, 
            T.UserId AS UserClaim_UserId, 
            T.ClaimType AS UserClaim_ClaimType, 
            T.ClaimValue AS UserClaim_ClaimValue, 
            True AS _from0
        FROM SMDModelStoreContainer.AspNetUserClaims AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Countries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Countries", @"
    SELECT VALUE -- Constructing Countries
        [DomainModels.Country](T1.Country_CountryId, T1.Country_CountryName, T1.Country_CountryCode)
    FROM (
        SELECT 
            T.CountryID AS Country_CountryId, 
            T.CountryName AS Country_CountryName, 
            T.CountryCode AS Country_CountryCode, 
            True AS _from0
        FROM SMDModelStoreContainer.Country AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Languages
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Languages", @"
    SELECT VALUE -- Constructing Languages
        [DomainModels.Language](T1.Language_LanguageId, T1.Language_LanguageName, T1.Language_NativeName)
    FROM (
        SELECT 
            T.LanguageID AS Language_LanguageId, 
            T.LanguageName AS Language_LanguageName, 
            T.NativeName AS Language_NativeName, 
            True AS _from0
        FROM SMDModelStoreContainer.Language AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaigns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(4081);
            viewString.Append("\r\n    SELECT VALUE -- Constructing AdCampaigns\r\n        [DomainModels.AdCampaign");
            viewString.Append("](T1.AdCampaign_CampaignId, T1.AdCampaign_LanguageId, T1.AdCampaign_UserId, T1.A");
            viewString.Append("dCampaign_SmdCampaign, T1.AdCampaign_CampaignName, T1.AdCampaign_CampaignDescrip");
            viewString.Append("tion, T1.AdCampaign_Status, T1.AdCampaign_Archived, T1.AdCampaign_Approved, T1.A");
            viewString.Append("dCampaign_ApprovedBy, T1.AdCampaign_ApprovalDateTime, T1.AdCampaign_StartDateTim");
            viewString.Append("e, T1.AdCampaign_EndDateTime, T1.AdCampaign_MaxBudget, T1.AdCampaign_Type, T1.Ad");
            viewString.Append("Campaign_ClickRate, T1.AdCampaign_SmdCredits, T1.AdCampaign_DisplayTitle, T1.AdC");
            viewString.Append("ampaign_Description, T1.AdCampaign_ImagePath, T1.AdCampaign_LandingPageVideoLink");
            viewString.Append(", T1.AdCampaign_VerifyQuestion, T1.AdCampaign_Answer1, T1.AdCampaign_Answer2, T1");
            viewString.Append(".AdCampaign_Answer3, T1.AdCampaign_CorrectAnswer, T1.AdCampaign_CreatedDateTime,");
            viewString.Append(" T1.AdCampaign_CreatedBy, T1.AdCampaign_ModifiedDateTime, T1.AdCampaign_Modified");
            viewString.Append("By, T1.AdCampaign_AgeRangeStart, T1.AdCampaign_AgeRangeEnd, T1.AdCampaign_Gender");
            viewString.Append(", T1.AdCampaign_RejectedReason, T1.AdCampaign_ProjectedReach, T1.AdCampaign_Resu");
            viewString.Append("ltClicks, T1.AdCampaign_AmountSpent, T1.AdCampaign_RewardType, T1.AdCampaign_Vou");
            viewString.Append("cher1Heading, T1.AdCampaign_Voucher1Description, T1.AdCampaign_Voucher1Value, T1");
            viewString.Append(".AdCampaign_Voucher2Heading, T1.AdCampaign_Voucher2Description, T1.AdCampaign_Vo");
            viewString.Append("ucher2Value, T1.AdCampaign_Voucher1ImagePath, T1.AdCampaign_Voucher2ImagePath)\r\n");
            viewString.Append("    FROM (\r\n        SELECT \r\n            T.CampaignID AS AdCampaign_CampaignId, ");
            viewString.Append("\r\n            T.LanguageID AS AdCampaign_LanguageId, \r\n            T.UserID AS A");
            viewString.Append("dCampaign_UserId, \r\n            T.SMDCampaign AS AdCampaign_SmdCampaign, \r\n     ");
            viewString.Append("       T.CampaignName AS AdCampaign_CampaignName, \r\n            T.CampaignDescri");
            viewString.Append("ption AS AdCampaign_CampaignDescription, \r\n            T.Status AS AdCampaign_St");
            viewString.Append("atus, \r\n            T.Archived AS AdCampaign_Archived, \r\n            T.Approved ");
            viewString.Append("AS AdCampaign_Approved, \r\n            T.ApprovedBy AS AdCampaign_ApprovedBy, \r\n ");
            viewString.Append("           T.ApprovalDateTime AS AdCampaign_ApprovalDateTime, \r\n            T.St");
            viewString.Append("artDateTime AS AdCampaign_StartDateTime, \r\n            T.EndDateTime AS AdCampai");
            viewString.Append("gn_EndDateTime, \r\n            T.MaxBudget AS AdCampaign_MaxBudget, \r\n           ");
            viewString.Append(" T.Type AS AdCampaign_Type, \r\n            T.ClickRate AS AdCampaign_ClickRate, \r");
            viewString.Append("\n            T.SMDCredits AS AdCampaign_SmdCredits, \r\n            T.DisplayTitle");
            viewString.Append(" AS AdCampaign_DisplayTitle, \r\n            T.Description AS AdCampaign_Descripti");
            viewString.Append("on, \r\n            T.ImagePath AS AdCampaign_ImagePath, \r\n            T.LandingPa");
            viewString.Append("geVideoLink AS AdCampaign_LandingPageVideoLink, \r\n            T.VerifyQuestion A");
            viewString.Append("S AdCampaign_VerifyQuestion, \r\n            T.Answer1 AS AdCampaign_Answer1, \r\n  ");
            viewString.Append("          T.Answer2 AS AdCampaign_Answer2, \r\n            T.Answer3 AS AdCampaign");
            viewString.Append("_Answer3, \r\n            T.CorrectAnswer AS AdCampaign_CorrectAnswer, \r\n         ");
            viewString.Append("   T.CreatedDateTime AS AdCampaign_CreatedDateTime, \r\n            T.CreatedBy AS");
            viewString.Append(" AdCampaign_CreatedBy, \r\n            T.ModifiedDateTime AS AdCampaign_ModifiedDa");
            viewString.Append("teTime, \r\n            T.ModifiedBy AS AdCampaign_ModifiedBy, \r\n            T.Age");
            viewString.Append("RangeStart AS AdCampaign_AgeRangeStart, \r\n            T.AgeRangeEnd AS AdCampaig");
            viewString.Append("n_AgeRangeEnd, \r\n            T.Gender AS AdCampaign_Gender, \r\n            T.Reje");
            viewString.Append("ctedReason AS AdCampaign_RejectedReason, \r\n            T.ProjectedReach AS AdCam");
            viewString.Append("paign_ProjectedReach, \r\n            T.ResultClicks AS AdCampaign_ResultClicks, \r");
            viewString.Append("\n            T.AmountSpent AS AdCampaign_AmountSpent, \r\n            T.RewardType");
            viewString.Append(" AS AdCampaign_RewardType, \r\n            T.Voucher1Heading AS AdCampaign_Voucher");
            viewString.Append("1Heading, \r\n            T.Voucher1Description AS AdCampaign_Voucher1Description,");
            viewString.Append(" \r\n            T.Voucher1Value AS AdCampaign_Voucher1Value, \r\n            T.Vouc");
            viewString.Append("her2Heading AS AdCampaign_Voucher2Heading, \r\n            T.Voucher2Description A");
            viewString.Append("S AdCampaign_Voucher2Description, \r\n            T.Voucher2Value AS AdCampaign_Vo");
            viewString.Append("ucher2Value, \r\n            T.Voucher1ImagePath AS AdCampaign_Voucher1ImagePath, ");
            viewString.Append("\r\n            T.Voucher2ImagePath AS AdCampaign_Voucher2ImagePath, \r\n           ");
            viewString.Append(" True AS _from0\r\n        FROM SMDModelStoreContainer.AdCampaign AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaigns", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignResponses", @"
    SELECT VALUE -- Constructing AdCampaignResponses
        [DomainModels.AdCampaignResponse](T1.AdCampaignResponse_ResponseId, T1.AdCampaignResponse_CampaignId, T1.AdCampaignResponse_CreatedDateTime, T1.AdCampaignResponse_UserId, T1.AdCampaignResponse_EndUserDollarAmount, T1.AdCampaignResponse_SkipCount, T1.AdCampaignResponse_UserSelection)
    FROM (
        SELECT 
            T.ResponseID AS AdCampaignResponse_ResponseId, 
            T.CampaignID AS AdCampaignResponse_CampaignId, 
            T.CreatedDateTime AS AdCampaignResponse_CreatedDateTime, 
            T.UserID AS AdCampaignResponse_UserId, 
            T.EndUserDollarAmount AS AdCampaignResponse_EndUserDollarAmount, 
            T.SkipCount AS AdCampaignResponse_SkipCount, 
            T.UserSelection AS AdCampaignResponse_UserSelection, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignResponse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignTargetLocations", @"
    SELECT VALUE -- Constructing AdCampaignTargetLocations
        [DomainModels.AdCampaignTargetLocation](T1.AdCampaignTargetLocation_Id, T1.AdCampaignTargetLocation_CampaignId, T1.AdCampaignTargetLocation_CountryId, T1.AdCampaignTargetLocation_CityId, T1.AdCampaignTargetLocation_Radius, T1.AdCampaignTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS AdCampaignTargetLocation_Id, 
            T.CampaignID AS AdCampaignTargetLocation_CampaignId, 
            T.CountryID AS AdCampaignTargetLocation_CountryId, 
            T.CityID AS AdCampaignTargetLocation_CityId, 
            T.Radius AS AdCampaignTargetLocation_Radius, 
            T.IncludeorExclude AS AdCampaignTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3201);
            viewString.Append("\r\n    SELECT VALUE -- Constructing SurveyQuestions\r\n        [DomainModels.Survey");
            viewString.Append("Question](T1.SurveyQuestion_SqId, T1.SurveyQuestion_LanguageId, T1.SurveyQuestio");
            viewString.Append("n_CountryId, T1.SurveyQuestion_Type, T1.SurveyQuestion_UserId, T1.SurveyQuestion");
            viewString.Append("_Question, T1.SurveyQuestion_Description, T1.SurveyQuestion_RepeatPeriod, T1.Sur");
            viewString.Append("veyQuestion_DisplayQuestion, T1.SurveyQuestion_StartDate, T1.SurveyQuestion_EndD");
            viewString.Append("ate, T1.SurveyQuestion_Approved, T1.SurveyQuestion_ApprovedByUserId, T1.SurveyQu");
            viewString.Append("estion_ApprovalDate, T1.SurveyQuestion_CreationDate, T1.SurveyQuestion_ModifiedD");
            viewString.Append("ate, T1.SurveyQuestion_CreatedBy, T1.SurveyQuestion_ModifiedBy, T1.SurveyQuestio");
            viewString.Append("n_LeftPicturePath, T1.SurveyQuestion_RightPicturePath, T1.SurveyQuestion_Discoun");
            viewString.Append("tVoucherApplied, T1.SurveyQuestion_VoucherCode, T1.SurveyQuestion_DiscountVouche");
            viewString.Append("rId, T1.SurveyQuestion_RejectionReason, T1.SurveyQuestion_Status, T1.SurveyQuest");
            viewString.Append("ion_ProjectedReach, T1.SurveyQuestion_ResultClicks, T1.SurveyQuestion_AgeRangeSt");
            viewString.Append("art, T1.SurveyQuestion_AgeRangeEnd, T1.SurveyQuestion_Gender, T1.SurveyQuestion_");
            viewString.Append("SubmissionDate, T1.SurveyQuestion_ParentSurveyId, T1.SurveyQuestion_Priority)\r\n ");
            viewString.Append("   FROM (\r\n        SELECT \r\n            T.SQID AS SurveyQuestion_SqId, \r\n       ");
            viewString.Append("     T.LanguageID AS SurveyQuestion_LanguageId, \r\n            T.CountryID AS Sur");
            viewString.Append("veyQuestion_CountryId, \r\n            T.Type AS SurveyQuestion_Type, \r\n          ");
            viewString.Append("  T.UserID AS SurveyQuestion_UserId, \r\n            T.Question AS SurveyQuestion_");
            viewString.Append("Question, \r\n            T.Description AS SurveyQuestion_Description, \r\n         ");
            viewString.Append("   T.RepeatPeriod AS SurveyQuestion_RepeatPeriod, \r\n            T.DisplayQuestio");
            viewString.Append("n AS SurveyQuestion_DisplayQuestion, \r\n            T.StartDate AS SurveyQuestion");
            viewString.Append("_StartDate, \r\n            T.EndDate AS SurveyQuestion_EndDate, \r\n            T.A");
            viewString.Append("pproved AS SurveyQuestion_Approved, \r\n            T.ApprovedByUserID AS SurveyQu");
            viewString.Append("estion_ApprovedByUserId, \r\n            T.ApprovalDate AS SurveyQuestion_Approval");
            viewString.Append("Date, \r\n            T.CreationDate AS SurveyQuestion_CreationDate, \r\n           ");
            viewString.Append(" T.ModifiedDate AS SurveyQuestion_ModifiedDate, \r\n            T.CreatedBy AS Sur");
            viewString.Append("veyQuestion_CreatedBy, \r\n            T.ModifiedBy AS SurveyQuestion_ModifiedBy, ");
            viewString.Append("\r\n            T.LeftPicturePath AS SurveyQuestion_LeftPicturePath, \r\n           ");
            viewString.Append(" T.RightPicturePath AS SurveyQuestion_RightPicturePath, \r\n            T.Discount");
            viewString.Append("VoucherApplied AS SurveyQuestion_DiscountVoucherApplied, \r\n            T.Voucher");
            viewString.Append("Code AS SurveyQuestion_VoucherCode, \r\n            T.DiscountVoucherID AS SurveyQ");
            viewString.Append("uestion_DiscountVoucherId, \r\n            T.RejectionReason AS SurveyQuestion_Rej");
            viewString.Append("ectionReason, \r\n            T.Status AS SurveyQuestion_Status, \r\n            T.P");
            viewString.Append("rojectedReach AS SurveyQuestion_ProjectedReach, \r\n            T.ResultClicks AS ");
            viewString.Append("SurveyQuestion_ResultClicks, \r\n            T.AgeRangeStart AS SurveyQuestion_Age");
            viewString.Append("RangeStart, \r\n            T.AgeRangeEnd AS SurveyQuestion_AgeRangeEnd, \r\n       ");
            viewString.Append("     T.Gender AS SurveyQuestion_Gender, \r\n            T.SubmissionDate AS Survey");
            viewString.Append("Question_SubmissionDate, \r\n            T.ParentSurveyId AS SurveyQuestion_Parent");
            viewString.Append("SurveyId, \r\n            T.Priority AS SurveyQuestion_Priority, \r\n            Tru");
            viewString.Append("e AS _from0\r\n        FROM SMDModelStoreContainer.SurveyQuestion AS T\r\n    ) AS T");
            viewString.Append("1");
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestions", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionTargetCriterias", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetCriterias
        [DomainModels.SurveyQuestionTargetCriteria](T1.SurveyQuestionTargetCriteria_Id, T1.SurveyQuestionTargetCriteria_SqId, T1.SurveyQuestionTargetCriteria_Type, T1.SurveyQuestionTargetCriteria_PqId, T1.SurveyQuestionTargetCriteria_PqAnswerId, T1.SurveyQuestionTargetCriteria_LinkedSqId, T1.SurveyQuestionTargetCriteria_LinkedSqAnswer, T1.SurveyQuestionTargetCriteria_IncludeorExclude, T1.SurveyQuestionTargetCriteria_LanguageId, T1.SurveyQuestionTargetCriteria_IndustryId, T1.SurveyQuestionTargetCriteria_EducationId)
    FROM (
        SELECT 
            T.ID AS SurveyQuestionTargetCriteria_Id, 
            T.SQID AS SurveyQuestionTargetCriteria_SqId, 
            T.Type AS SurveyQuestionTargetCriteria_Type, 
            T.PQID AS SurveyQuestionTargetCriteria_PqId, 
            T.PQAnswerID AS SurveyQuestionTargetCriteria_PqAnswerId, 
            T.LinkedSQID AS SurveyQuestionTargetCriteria_LinkedSqId, 
            T.LinkedSQAnswer AS SurveyQuestionTargetCriteria_LinkedSqAnswer, 
            T.IncludeorExclude AS SurveyQuestionTargetCriteria_IncludeorExclude, 
            T.LanguageID AS SurveyQuestionTargetCriteria_LanguageId, 
            T.IndustryID AS SurveyQuestionTargetCriteria_IndustryId, 
            T.EducationID AS SurveyQuestionTargetCriteria_EducationId, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionTargetCriteria AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionTargetLocations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionTargetLocations", @"
    SELECT VALUE -- Constructing SurveyQuestionTargetLocations
        [DomainModels.SurveyQuestionTargetLocation](T1.SurveyQuestionTargetLocation_Id, T1.SurveyQuestionTargetLocation_SqId, T1.SurveyQuestionTargetLocation_CountryId, T1.SurveyQuestionTargetLocation_CityId, T1.SurveyQuestionTargetLocation_Radius, T1.SurveyQuestionTargetLocation_IncludeorExclude)
    FROM (
        SELECT 
            T.ID AS SurveyQuestionTargetLocation_Id, 
            T.SQID AS SurveyQuestionTargetLocation_SqId, 
            T.CountryID AS SurveyQuestionTargetLocation_CountryId, 
            T.CityID AS SurveyQuestionTargetLocation_CityId, 
            T.Radius AS SurveyQuestionTargetLocation_Radius, 
            T.IncludeorExclude AS SurveyQuestionTargetLocation_IncludeorExclude, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionTargetLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SurveyQuestionResponses
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SurveyQuestionResponses", @"
    SELECT VALUE -- Constructing SurveyQuestionResponses
        [DomainModels.SurveyQuestionResponse](T1.SurveyQuestionResponse_SqResponseId, T1.SurveyQuestionResponse_SqId, T1.SurveyQuestionResponse_UserId, T1.SurveyQuestionResponse_ResoponseDateTime, T1.SurveyQuestionResponse_UserSelection, T1.SurveyQuestionResponse_SkipCount)
    FROM (
        SELECT 
            T.SQResponseID AS SurveyQuestionResponse_SqResponseId, 
            T.SQID AS SurveyQuestionResponse_SqId, 
            T.UserID AS SurveyQuestionResponse_UserId, 
            T.ResoponseDateTime AS SurveyQuestionResponse_ResoponseDateTime, 
            T.UserSelection AS SurveyQuestionResponse_UserSelection, 
            T.SkipCount AS SurveyQuestionResponse_SkipCount, 
            True AS _from0
        FROM SMDModelStoreContainer.SurveyQuestionResponse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Cities
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Cities", @"
    SELECT VALUE -- Constructing Cities
        [DomainModels.City](T1.City_CityId, T1.City_CityName, T1.City_IsCapital, T1.City_CountryId, T1.City_GeoLong, T1.City_GeoLat)
    FROM (
        SELECT 
            T.CityID AS City_CityId, 
            T.CityName AS City_CityName, 
            T.IsCapital AS City_IsCapital, 
            T.CountryID AS City_CountryId, 
            T.GeoLONG AS City_GeoLong, 
            T.GeoLAT AS City_GeoLat, 
            True AS _from0
        FROM SMDModelStoreContainer.City AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Industries
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Industries", @"
    SELECT VALUE -- Constructing Industries
        [DomainModels.Industry](T1.Industry_IndustryId, T1.Industry_IndustryName, T1.Industry_Status)
    FROM (
        SELECT 
            T.IndustryID AS Industry_IndustryId, 
            T.IndustryName AS Industry_IndustryName, 
            T.Status AS Industry_Status, 
            True AS _from0
        FROM SMDModelStoreContainer.Industry AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Currencies
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Currencies", @"
    SELECT VALUE -- Constructing Currencies
        [DomainModels.Currency](T1.Currency_CurrencyId, T1.Currency_Name, T1.Currency_CurrencyCode, T1.Currency_SMDCreditRatio, T1.Currency_CurrencySymbol)
    FROM (
        SELECT 
            T.CurrencyID AS Currency_CurrencyId, 
            T.Name AS Currency_Name, 
            T.CurrencyCode AS Currency_CurrencyCode, 
            T.SMDCreditRatio AS Currency_SMDCreditRatio, 
            T.CurrencySymbol AS Currency_CurrencySymbol, 
            True AS _from0
        FROM SMDModelStoreContainer.Currency AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Accounts
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Accounts", @"
    SELECT VALUE -- Constructing Accounts
        [DomainModels.Account](T1.Account_AccountId, T1.Account_AccountName, T1.Account_AccountType, T1.Account_AccountBalance, T1.Account_UserId)
    FROM (
        SELECT 
            T.AccountId AS Account_AccountId, 
            T.AccountName AS Account_AccountName, 
            T.AccountType AS Account_AccountType, 
            T.AccountBalance AS Account_AccountBalance, 
            T.UserId AS Account_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.Account AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Transactions
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Transactions", @"
    SELECT VALUE -- Constructing Transactions
        [DomainModels.Transaction](T1.Transaction_TxId, T1.Transaction_TransactionDate, T1.Transaction_Type, T1.Transaction_DebitCredit, T1.Transaction_CreditAmount, T1.Transaction_DebitAmount, T1.Transaction_AccountId, T1.Transaction_TaxPerc, T1.Transaction_TaxValue, T1.Transaction_AdCampaignId, T1.Transaction_SQId, T1.Transaction_isProcessed, T1.Transaction_CurrencyId, T1.Transaction_CurrencyRateId, T1.Transaction_Sequence)
    FROM (
        SELECT 
            T.TxID AS Transaction_TxId, 
            T.TransactionDate AS Transaction_TransactionDate, 
            T.Type AS Transaction_Type, 
            T.DebitCredit AS Transaction_DebitCredit, 
            T.CreditAmount AS Transaction_CreditAmount, 
            T.DebitAmount AS Transaction_DebitAmount, 
            T.AccountID AS Transaction_AccountId, 
            T.TaxPerc AS Transaction_TaxPerc, 
            T.TaxValue AS Transaction_TaxValue, 
            T.AdCampaignID AS Transaction_AdCampaignId, 
            T.SQID AS Transaction_SQId, 
            T.isProcessed AS Transaction_isProcessed, 
            T.CurrencyID AS Transaction_CurrencyId, 
            T.CurrencyRateID AS Transaction_CurrencyRateId, 
            T.Sequence AS Transaction_Sequence, 
            True AS _from0
        FROM SMDModelStoreContainer.Transaction AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Invoices
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Invoices", @"
    SELECT VALUE -- Constructing Invoices
        [DomainModels.Invoice](T1.Invoice_InvoiceId, T1.Invoice_InvoiceDate, T1.Invoice_InvoiceDueDate, T1.Invoice_UserId, T1.Invoice_TaxPercentage, T1.Invoice_Total, T1.Invoice_NetTotal, T1.Invoice_TaxValue, T1.Invoice_CompanyName, T1.Invoice_Address1, T1.Invoice_Address2, T1.Invoice_City, T1.Invoice_State, T1.Invoice_Country, T1.Invoice_ZipCode, T1.Invoice_CreditCardRef)
    FROM (
        SELECT 
            T.InvoiceId AS Invoice_InvoiceId, 
            T.InvoiceDate AS Invoice_InvoiceDate, 
            T.InvoiceDueDate AS Invoice_InvoiceDueDate, 
            T.UserId AS Invoice_UserId, 
            T.TaxPercentage AS Invoice_TaxPercentage, 
            T.Total AS Invoice_Total, 
            T.NetTotal AS Invoice_NetTotal, 
            T.TaxValue AS Invoice_TaxValue, 
            T.CompanyName AS Invoice_CompanyName, 
            T.Address1 AS Invoice_Address1, 
            T.Address2 AS Invoice_Address2, 
            T.City AS Invoice_City, 
            T.State AS Invoice_State, 
            T.Country AS Invoice_Country, 
            T.ZipCode AS Invoice_ZipCode, 
            T.CreditCardRef AS Invoice_CreditCardRef, 
            True AS _from0
        FROM SMDModelStoreContainer.Invoice AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.InvoiceDetails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.InvoiceDetails", @"
    SELECT VALUE -- Constructing InvoiceDetails
        [DomainModels.InvoiceDetail](T1.InvoiceDetail_InvoiceDetailId, T1.InvoiceDetail_InvoiceId, T1.InvoiceDetail_ItemName, T1.InvoiceDetail_ItemTax, T1.InvoiceDetail_ItemAmount, T1.InvoiceDetail_ItemGrossAmount, T1.InvoiceDetail_ItemDescription, T1.InvoiceDetail_CampaignId, T1.InvoiceDetail_SqId, T1.InvoiceDetail_ProductId)
    FROM (
        SELECT 
            T.InvoiceDetailId AS InvoiceDetail_InvoiceDetailId, 
            T.InvoiceId AS InvoiceDetail_InvoiceId, 
            T.ItemName AS InvoiceDetail_ItemName, 
            T.ItemTax AS InvoiceDetail_ItemTax, 
            T.ItemAmount AS InvoiceDetail_ItemAmount, 
            T.ItemGrossAmount AS InvoiceDetail_ItemGrossAmount, 
            T.ItemDescription AS InvoiceDetail_ItemDescription, 
            T.CampaignId AS InvoiceDetail_CampaignId, 
            T.SQId AS InvoiceDetail_SqId, 
            T.ProductId AS InvoiceDetail_ProductId, 
            True AS _from0
        FROM SMDModelStoreContainer.InvoiceDetail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Taxes
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Taxes", @"
    SELECT VALUE -- Constructing Taxes
        [DomainModels.Tax](T1.Tax_TaxId, T1.Tax_TaxName, T1.Tax_TaxValue, T1.Tax_CountryId)
    FROM (
        SELECT 
            T.TaxId AS Tax_TaxId, 
            T.TaxName AS Tax_TaxName, 
            T.TaxValue AS Tax_TaxValue, 
            T.CountryId AS Tax_CountryId, 
            True AS _from0
        FROM SMDModelStoreContainer.Tax AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Educations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Educations", @"
    SELECT VALUE -- Constructing Educations
        [DomainModels.Education](T1.Education_EducationId, T1.Education_Title, T1.Education_Status)
    FROM (
        SELECT 
            T.EducationId AS Education_EducationId, 
            T.Title AS Education_Title, 
            T.Status AS Education_Status, 
            True AS _from0
        FROM SMDModelStoreContainer.Education AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Products
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Products", @"
    SELECT VALUE -- Constructing Products
        [DomainModels.Product](T1.Product_ProductId, T1.Product_CountryId, T1.Product_CurrencyId, T1.Product_ProductName, T1.Product_IsActive, T1.Product_SetupPrice, T1.Product_ClickFeePercentage, T1.Product_AgeClausePrice, T1.Product_AffiliatePercentage, T1.Product_ProductCode, T1.Product_GenderClausePrice, T1.Product_LocationClausePrice, T1.Product_OtherClausePrice, T1.Product_ProfessionClausePrice, T1.Product_EducationClausePrice)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductId, 
            T.CountryID AS Product_CountryId, 
            T.CurrencyID AS Product_CurrencyId, 
            T.ProductName AS Product_ProductName, 
            T.IsActive AS Product_IsActive, 
            T.SetupPrice AS Product_SetupPrice, 
            T.ClickFeePercentage AS Product_ClickFeePercentage, 
            T.AgeClausePrice AS Product_AgeClausePrice, 
            T.AffiliatePercentage AS Product_AffiliatePercentage, 
            T.ProductCode AS Product_ProductCode, 
            T.GenderClausePrice AS Product_GenderClausePrice, 
            T.LocationClausePrice AS Product_LocationClausePrice, 
            T.OtherClausePrice AS Product_OtherClausePrice, 
            T.ProfessionClausePrice AS Product_ProfessionClausePrice, 
            T.EducationClausePrice AS Product_EducationClausePrice, 
            True AS _from0
        FROM SMDModelStoreContainer.Products AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AdCampaignTargetCriterias
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AdCampaignTargetCriterias", @"
    SELECT VALUE -- Constructing AdCampaignTargetCriterias
        [DomainModels.AdCampaignTargetCriteria](T1.AdCampaignTargetCriteria_CriteriaId, T1.AdCampaignTargetCriteria_CampaignId, T1.AdCampaignTargetCriteria_Type, T1.AdCampaignTargetCriteria_PqId, T1.AdCampaignTargetCriteria_PqAnswerId, T1.AdCampaignTargetCriteria_SqId, T1.AdCampaignTargetCriteria_SqAnswer, T1.AdCampaignTargetCriteria_IncludeorExclude, T1.AdCampaignTargetCriteria_LanguageId, T1.AdCampaignTargetCriteria_IndustryId, T1.AdCampaignTargetCriteria_EducationId)
    FROM (
        SELECT 
            T.CriteriaID AS AdCampaignTargetCriteria_CriteriaId, 
            T.CampaignID AS AdCampaignTargetCriteria_CampaignId, 
            T.Type AS AdCampaignTargetCriteria_Type, 
            T.PQID AS AdCampaignTargetCriteria_PqId, 
            T.PQAnswerID AS AdCampaignTargetCriteria_PqAnswerId, 
            T.SQID AS AdCampaignTargetCriteria_SqId, 
            T.SQAnswer AS AdCampaignTargetCriteria_SqAnswer, 
            T.IncludeorExclude AS AdCampaignTargetCriteria_IncludeorExclude, 
            T.LanguageID AS AdCampaignTargetCriteria_LanguageId, 
            T.IndustryID AS AdCampaignTargetCriteria_IndustryId, 
            T.EducationID AS AdCampaignTargetCriteria_EducationId, 
            True AS _from0
        FROM SMDModelStoreContainer.AdCampaignTargetCriteria AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.TransactionLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.TransactionLogs", @"
    SELECT VALUE -- Constructing TransactionLogs
        [DomainModels.TransactionLog](T1.TransactionLog_TransactionLogId, T1.TransactionLog_TxId, T1.TransactionLog_LogDate, T1.TransactionLog_Amount, T1.TransactionLog_Type, T1.TransactionLog_FromUser, T1.TransactionLog_ToUser, T1.TransactionLog_IsCompleted)
    FROM (
        SELECT 
            T.TransactionLogId AS TransactionLog_TransactionLogId, 
            T.TxId AS TransactionLog_TxId, 
            T.LogDate AS TransactionLog_LogDate, 
            T.Amount AS TransactionLog_Amount, 
            T.Type AS TransactionLog_Type, 
            T.FromUser AS TransactionLog_FromUser, 
            T.ToUser AS TransactionLog_ToUser, 
            T.IsCompleted AS TransactionLog_IsCompleted, 
            True AS _from0
        FROM SMDModelStoreContainer.TransactionLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AspNetUserRoles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AspNetUserRoles", @"
    SELECT VALUE -- Constructing AspNetUserRoles
        [DomainModels.AspNetUserRoles](T3.AspNetUserRoles_AspNetRoles, T3.AspNetUserRoles_AspNetUsers)
    FROM (
        SELECT -- Constructing AspNetRoles
            CreateRef(BaseDbContext.Roles, row(T2.AspNetUserRoles_AspNetRoles_Id), [DomainModels.Role]) AS AspNetUserRoles_AspNetRoles, 
            T2.AspNetUserRoles_AspNetUsers
        FROM (
            SELECT -- Constructing AspNetUsers
                T1.AspNetUserRoles_AspNetRoles_Id, 
                CreateRef(BaseDbContext.Users, row(T1.AspNetUserRoles_AspNetUsers_Id), [DomainModels.User]) AS AspNetUserRoles_AspNetUsers
            FROM (
                SELECT 
                    T.RoleId AS AspNetUserRoles_AspNetRoles_Id, 
                    T.UserId AS AspNetUserRoles_AspNetUsers_Id, 
                    True AS _from0
                FROM SMDModelStoreContainer.AspNetUserRoles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.SystemMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.SystemMails", @"
    SELECT VALUE -- Constructing SystemMails
        [SMDModel.Store.SystemMails](T1.SystemMails_MailID, T1.SystemMails_Title, T1.SystemMails_FromName, T1.SystemMails_fromEmail, T1.SystemMails_Subject, T1.SystemMails_body, T1.SystemMails_EmailTarget)
    FROM (
        SELECT 
            T.MailId AS SystemMails_MailID, 
            T.Title AS SystemMails_Title, 
            T.FromName AS SystemMails_FromName, 
            T.FromEmail AS SystemMails_fromEmail, 
            T.Subject AS SystemMails_Subject, 
            T.Body AS SystemMails_body, 
            T.EmailTarget AS SystemMails_EmailTarget, 
            True AS _from0
        FROM BaseDbContext.SystemMails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.SystemMails
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.SystemMails", @"
    SELECT VALUE -- Constructing SystemMails
        [DomainModels.SystemMail](T1.SystemMail_MailId, T1.SystemMail_Title, T1.SystemMail_FromName, T1.SystemMail_FromEmail, T1.SystemMail_Subject, T1.SystemMail_Body, T1.SystemMail_EmailTarget)
    FROM (
        SELECT 
            T.MailID AS SystemMail_MailId, 
            T.Title AS SystemMail_Title, 
            T.FromName AS SystemMail_FromName, 
            T.fromEmail AS SystemMail_FromEmail, 
            T.Subject AS SystemMail_Subject, 
            T.body AS SystemMail_Body, 
            T.EmailTarget AS SystemMail_EmailTarget, 
            True AS _from0
        FROM SMDModelStoreContainer.SystemMails AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.AuditLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.AuditLog", @"
    SELECT VALUE -- Constructing AuditLog
        [SMDModel.Store.AuditLog](T1.AuditLog_ID, T1.AuditLog_AuditType, T1.AuditLog_UserID, T1.AuditLog_AuditDateTime, T1.AuditLog_AuditEntity, T1.AuditLog_AuditEntityDescription, T1.AuditLog_TableName)
    FROM (
        SELECT 
            T.Id AS AuditLog_ID, 
            T.AuditType AS AuditLog_AuditType, 
            T.UserId AS AuditLog_UserID, 
            T.AuditDateTime AS AuditLog_AuditDateTime, 
            T.AuditEntity AS AuditLog_AuditEntity, 
            T.AuditEntityDescription AS AuditLog_AuditEntityDescription, 
            T.TableName AS AuditLog_TableName, 
            True AS _from0
        FROM BaseDbContext.AuditLogs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.AuditLogs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.AuditLogs", @"
    SELECT VALUE -- Constructing AuditLogs
        [DomainModels.AuditLog](T1.AuditLog_Id, T1.AuditLog_AuditType, T1.AuditLog_UserId, T1.AuditLog_AuditDateTime, T1.AuditLog_AuditEntity, T1.AuditLog_AuditEntityDescription, T1.AuditLog_TableName)
    FROM (
        SELECT 
            T.ID AS AuditLog_Id, 
            T.AuditType AS AuditLog_AuditType, 
            T.UserID AS AuditLog_UserId, 
            T.AuditDateTime AS AuditLog_AuditDateTime, 
            T.AuditEntity AS AuditLog_AuditEntity, 
            T.AuditEntityDescription AS AuditLog_AuditEntityDescription, 
            T.TableName AS AuditLog_TableName, 
            True AS _from0
        FROM SMDModelStoreContainer.AuditLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.CustomUrl
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.CustomUrl", @"
    SELECT VALUE -- Constructing CustomUrl
        [SMDModel.Store.CustomUrl](T1.CustomUrl_UrlId, T1.CustomUrl_ShortUrl, T1.CustomUrl_ActualUrl, T1.CustomUrl_UserId)
    FROM (
        SELECT 
            T.UrlId AS CustomUrl_UrlId, 
            T.ShortUrl AS CustomUrl_ShortUrl, 
            T.ActualUrl AS CustomUrl_ActualUrl, 
            T.UserId AS CustomUrl_UserId, 
            True AS _from0
        FROM BaseDbContext.CustomUrls AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.CustomUrls
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.CustomUrls", @"
    SELECT VALUE -- Constructing CustomUrls
        [DomainModels.CustomUrl](T1.CustomUrl_UrlId, T1.CustomUrl_ShortUrl, T1.CustomUrl_ActualUrl, T1.CustomUrl_UserId)
    FROM (
        SELECT 
            T.UrlId AS CustomUrl_UrlId, 
            T.ShortUrl AS CustomUrl_ShortUrl, 
            T.ActualUrl AS CustomUrl_ActualUrl, 
            T.UserId AS CustomUrl_UserId, 
            True AS _from0
        FROM SMDModelStoreContainer.CustomUrl AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for SMDModelStoreContainer.Game
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("SMDModelStoreContainer.Game", @"
    SELECT VALUE -- Constructing Game
        [SMDModel.Store.Game](T1.Game_GameId, T1.Game_GameName, T1.Game_Status, T1.Game_AgeRangeStart, T1.Game_AgeRangeEnd, T1.Game_GameType, T1.Game_Complexity, T1.Game_GameUrl)
    FROM (
        SELECT 
            T.GameId AS Game_GameId, 
            T.GameName AS Game_GameName, 
            T.Status AS Game_Status, 
            T.AgeRangeStart AS Game_AgeRangeStart, 
            T.AgeRangeEnd AS Game_AgeRangeEnd, 
            T.GameType AS Game_GameType, 
            T.Complexity AS Game_Complexity, 
            T.GameUrl AS Game_GameUrl, 
            True AS _from0
        FROM BaseDbContext.Games AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for BaseDbContext.Games
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("BaseDbContext.Games", @"
    SELECT VALUE -- Constructing Games
        [DomainModels.Game](T1.Game_GameId, T1.Game_GameName, T1.Game_Status, T1.Game_AgeRangeStart, T1.Game_AgeRangeEnd, T1.Game_GameType, T1.Game_Complexity, T1.Game_GameUrl)
    FROM (
        SELECT 
            T.GameId AS Game_GameId, 
            T.GameName AS Game_GameName, 
            T.Status AS Game_Status, 
            T.AgeRangeStart AS Game_AgeRangeStart, 
            T.AgeRangeEnd AS Game_AgeRangeEnd, 
            T.GameType AS Game_GameType, 
            T.Complexity AS Game_Complexity, 
            T.GameUrl AS Game_GameUrl, 
            True AS _from0
        FROM SMDModelStoreContainer.Game AS T
    ) AS T1");
        }
    }
}


